###############################################################################
#
# IAR ANSI C/C++ Compiler V9.20.1.318/W64 for ARM         05/Feb/2022  17:09:44
# Copyright 1999-2021 IAR Systems AB.
#
#    Cpu mode           =  thumb
#    Endian             =  little
#    Source file        =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\TouchGFX\generated\fonts\src\UnmappedDataFont.cpp
#        [UTF-8]
#    Command line       =
#        -f
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\TouchGFX\generated\fonts\UnmappedDataFont.o.rsp
#        (D:\99_Project\GitHub\TouchGFX\MyApplication\TouchGFX\generated\fonts\src\UnmappedDataFont.cpp
#        -D USE_HAL_DRIVER -D STM32H7B3xxQ -D USE_BPP=24 -lC
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\TouchGFX\generated\fonts
#        -lA
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\TouchGFX\generated\fonts
#        -o
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\TouchGFX\generated\fonts
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.0\arm\inc\c\DLib_Config_Full.h" -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Core/Inc\ -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/App\ -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/target/generated\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/target\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/STM32H7xx_HAL_Driver/Inc\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/STM32H7xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM4F\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/CMSIS/Device/ST/STM32H7xx/Include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/BSP/STM32H7B3I-DK\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/ST/touchgfx/framework/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/fonts/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/gui_generated/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/images/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/texts/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/gui/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/videos/include\
#        -Ol --c++ --no_exceptions --no_rtti --no_static_destruction
#        --source_encoding utf8 --text_out utf8 --utf8_text_in)
#        --dependencies=n
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\TouchGFX\generated\fonts\UnmappedDataFont.o.d
#    Locale             =  C
#    List file          =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\TouchGFX\generated\fonts\UnmappedDataFont.lst
#    Object file        =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\TouchGFX\generated\fonts\UnmappedDataFont.o
#    Runtime model:        
#      __CPP_Exceptions =  Disabled
#      __CPP_Language   =  C++14
#      __CPP_Library    =  DLib
#      __CPP_Runtime    =  1
#      __SystemLibrary  =  DLib
#      __dlib_version   =  6
#
###############################################################################

D:\99_Project\GitHub\TouchGFX\MyApplication\TouchGFX\generated\fonts\src\UnmappedDataFont.cpp
      1          /* DO NOT EDIT THIS FILE */
      2          /* This file is autogenerated by the text-database code generator */
      3          
      4          #include <touchgfx/hal/FlashDataReader.hpp>
      5          #include <fonts/ApplicationFontProvider.hpp>

   \                                 In section .text, align 2
   \   __vfp touchgfx::GlyphNode const *touchgfx::Font::getGlyph(uint16_t) const
   \                     _ZNK8touchgfx4Font8getGlyphEt: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x000A             MOVS     R2,R1
   \        0x4   0xB292             UXTH     R2,R2
   \        0x6   0x2A00             CMP      R2,#+0
   \        0x8   0xD101             BNE.N    ??getGlyph_2
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0xE00A             B.N      ??getGlyph_3
   \                     ??getGlyph_2: (+1)
   \        0xE   0x2200             MOVS     R2,#+0
   \       0x10   0x9201             STR      R2,[SP, #+4]
   \       0x12   0x2200             MOVS     R2,#+0
   \       0x14   0xF88D 0x2000      STRB     R2,[SP, #+0]
   \       0x18   0x466B             MOV      R3,SP
   \       0x1A   0xAA01             ADD      R2,SP,#+4
   \       0x1C   0xB289             UXTH     R1,R1
   \       0x1E   0x6804             LDR      R4,[R0, #+0]
   \       0x20   0x68A4             LDR      R4,[R4, #+8]
   \       0x22   0x47A0             BLX      R4
   \                     ??getGlyph_3: (+1)
   \       0x24   0xBD16             POP      {R1,R2,R4,PC}

   \                                 In section .text, align 2
   \   __vfp uint16_t touchgfx::Font::getFallbackChar() const
   \                     _ZNK8touchgfx4Font15getFallbackCharEv: (+1)
   \        0x0   0x8940             LDRH     R0,[R0, #+10]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint16_t touchgfx::Font::getEllipsisChar() const
   \                     _ZNK8touchgfx4Font15getEllipsisCharEv: (+1)
   \        0x0   0x8980             LDRH     R0,[R0, #+12]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint16_t touchgfx::Font::getFontHeight() const
   \                     _ZNK8touchgfx4Font13getFontHeightEv: (+1)
   \        0x0   0x8880             LDRH     R0,[R0, #+4]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint16_t touchgfx::Font::getMinimumTextHeight() const
   \                     _ZNK8touchgfx4Font20getMinimumTextHeightEv: (+1)
   \        0x0   0x8881             LDRH     R1,[R0, #+4]
   \        0x2   0x7980             LDRB     R0,[R0, #+6]
   \        0x4   0x1808             ADDS     R0,R1,R0
   \        0x6   0xB280             UXTH     R0,R0
   \        0x8   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint8_t touchgfx::Font::getBitsPerPixel() const
   \                     _ZNK8touchgfx4Font15getBitsPerPixelEv: (+1)
   \        0x0   0x79C0             LDRB     R0,[R0, #+7]
   \        0x2   0xF010 0x007F      ANDS     R0,R0,#0x7F
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint8_t touchgfx::Font::getByteAlignRow() const
   \                     _ZNK8touchgfx4Font15getByteAlignRowEv: (+1)
   \        0x0   0x79C0             LDRB     R0,[R0, #+7]
   \        0x2   0xB2C0             UXTB     R0,R0
   \        0x4   0x09C0             LSRS     R0,R0,#+7
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp touchgfx::Font::subobject Font(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t const, uint16_t const)
   \                     _ZN8touchgfx4FontC2Ethhhhhtt: (+1)
   \        0x0   0xB518             PUSH     {R3,R4,LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
   \        0x4   0xF8BD 0x4030      LDRH     R4,[SP, #+48]
   \        0x8   0x9404             STR      R4,[SP, #+16]
   \        0xA   0xF8BD 0x402C      LDRH     R4,[SP, #+44]
   \        0xE   0x9403             STR      R4,[SP, #+12]
   \       0x10   0xF89D 0x4028      LDRB     R4,[SP, #+40]
   \       0x14   0x9402             STR      R4,[SP, #+8]
   \       0x16   0xF89D 0x4024      LDRB     R4,[SP, #+36]
   \       0x1A   0x9401             STR      R4,[SP, #+4]
   \       0x1C   0xF89D 0x4020      LDRB     R4,[SP, #+32]
   \       0x20   0x9400             STR      R4,[SP, #+0]
   \       0x22   0xB2DB             UXTB     R3,R3
   \       0x24   0xB2D2             UXTB     R2,R2
   \       0x26   0xB289             UXTH     R1,R1
   \       0x28   0x.... 0x....      BL       _ZN8touchgfx4FontC1Ethhhhhtt
   \       0x2C   0xB006             ADD      SP,SP,#+24
   \       0x2E   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2
   \   __vfp touchgfx::Font::Font(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t)
   \                     _ZN8touchgfx4FontC1Ethhhhhtt: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
   \        0x2   0xF8DD 0xC010      LDR      R12,[SP, #+16]
   \        0x6   0x9F05             LDR      R7,[SP, #+20]
   \        0x8   0x9E06             LDR      R6,[SP, #+24]
   \        0xA   0x9D07             LDR      R5,[SP, #+28]
   \        0xC   0x9C08             LDR      R4,[SP, #+32]
   \        0xE   0x8081             STRH     R1,[R0, #+4]
   \       0x10   0x7182             STRB     R2,[R0, #+6]
   \       0x12   0x79C1             LDRB     R1,[R0, #+7]
   \       0x14   0xF363 0x0106      BFI      R1,R3,#+0,#+7
   \       0x18   0x71C1             STRB     R1,[R0, #+7]
   \       0x1A   0x79C1             LDRB     R1,[R0, #+7]
   \       0x1C   0xF011 0x017F      ANDS     R1,R1,#0x7F
   \       0x20   0xEA51 0x11CC      ORRS     R1,R1,R12, LSL #+7
   \       0x24   0x71C1             STRB     R1,[R0, #+7]
   \       0x26   0x7207             STRB     R7,[R0, #+8]
   \       0x28   0x7246             STRB     R6,[R0, #+9]
   \       0x2A   0x8145             STRH     R5,[R0, #+10]
   \       0x2C   0x8184             STRH     R4,[R0, #+12]
   \       0x2E   0xBCF0             POP      {R4-R7}
   \       0x30   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp touchgfx::FlashDataReader *ApplicationFontProvider::getFlashReader()
   \                     _ZN23ApplicationFontProvider14getFlashReaderEv: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR
      6          #include <fonts/UnmappedDataFont.hpp>

   \                                 In section .text, align 2
   \   __vfp touchgfx::UnmappedDataFont::deleter ~UnmappedDataFont() noexcept
   \                     _ZN8touchgfx16UnmappedDataFontD0Ev: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZN8touchgfx16UnmappedDataFontD1Ev
   \        0xA   0x212C             MOVS     R1,#+44
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0x.... 0x....      BL       _ZdlPvj
   \       0x12   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2
   \   __vfp touchgfx::UnmappedDataFont::~UnmappedDataFont() noexcept
   \                     _ZN8touchgfx16UnmappedDataFontD1Ev: (+1)
   \        0x0   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint16_t const *touchgfx::UnmappedDataFont::getGSUBTable() const
   \                     _ZNK8touchgfx16UnmappedDataFont12getGSUBTableEv: (+1)
   \        0x0   0x6A40             LDR      R0,[R0, #+36]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp touchgfx::FontContextualFormsTable const *touchgfx::UnmappedDataFont::getContextualFormsTable() const
   \                     _ZNK8touchgfx16UnmappedDataFont23getContextualFormsTableEv: (+1)
   \        0x0   0x6A80             LDR      R0,[R0, #+40]
   \        0x2   0x4770             BX       LR
      7          
      8          namespace touchgfx
      9          {

   \                                 In section .bss, align 4
     10          GlyphNode UnmappedDataFont::glyphNodeBuffer;
   \                     _ZN8touchgfx16UnmappedDataFont15glyphNodeBufferE:
   \        0x0                      DS8 16
     11          

   \                                 In section .text, align 2, keep-with-next
   \   __vfp touchgfx::UnmappedDataFont::subobject UnmappedDataFont(touchgfx::GlyphNode const *, uint16_t const *, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t const *const *, touchgfx::KerningNode const *, uint16_t const, uint16_t const, uint16_t const *const, touchgfx::FontContextualFormsTable const *)
   \                     _ZN8touchgfx16UnmappedDataFontC2EPKNS_9GlyphNodeEPKttthhhhhPKPKhPKNS_11KerningNodeEttS5_PKNS_24FontContextualFormsTableE: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB08C             SUB      SP,SP,#+48
   \        0x4   0x9C19             LDR      R4,[SP, #+100]
   \        0x6   0x940B             STR      R4,[SP, #+44]
   \        0x8   0x9C18             LDR      R4,[SP, #+96]
   \        0xA   0x940A             STR      R4,[SP, #+40]
   \        0xC   0xF8BD 0x405C      LDRH     R4,[SP, #+92]
   \       0x10   0x9409             STR      R4,[SP, #+36]
   \       0x12   0xF8BD 0x4058      LDRH     R4,[SP, #+88]
   \       0x16   0x9408             STR      R4,[SP, #+32]
   \       0x18   0x9C15             LDR      R4,[SP, #+84]
   \       0x1A   0x9407             STR      R4,[SP, #+28]
   \       0x1C   0x9C14             LDR      R4,[SP, #+80]
   \       0x1E   0x9406             STR      R4,[SP, #+24]
   \       0x20   0xF89D 0x404C      LDRB     R4,[SP, #+76]
   \       0x24   0x9405             STR      R4,[SP, #+20]
   \       0x26   0xF89D 0x4048      LDRB     R4,[SP, #+72]
   \       0x2A   0x9404             STR      R4,[SP, #+16]
   \       0x2C   0xF89D 0x4044      LDRB     R4,[SP, #+68]
   \       0x30   0x9403             STR      R4,[SP, #+12]
   \       0x32   0xF89D 0x4040      LDRB     R4,[SP, #+64]
   \       0x36   0x9402             STR      R4,[SP, #+8]
   \       0x38   0xF89D 0x403C      LDRB     R4,[SP, #+60]
   \       0x3C   0x9401             STR      R4,[SP, #+4]
   \       0x3E   0xF8BD 0x4038      LDRH     R4,[SP, #+56]
   \       0x42   0x9400             STR      R4,[SP, #+0]
   \       0x44   0xB29B             UXTH     R3,R3
   \       0x46   0x.... 0x....      BL       _ZN8touchgfx16UnmappedDataFontC1EPKNS_9GlyphNodeEPKttthhhhhPKPKhPKNS_11KerningNodeEttS5_PKNS_24FontContextualFormsTableE
   \       0x4A   0xB00C             ADD      SP,SP,#+48
   \       0x4C   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2, keep-with-next
     12          UnmappedDataFont::UnmappedDataFont(const GlyphNode* list, const uint16_t* unicodeList, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataList, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
     13              : Font(height, pixBelowBase, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
     14                glyphList(list),
     15                listSize(size),
     16                unicodes(unicodeList),
     17                glyphDataList(glyphDataList),
     18                kerningData(kerningList),
     19                gsubTable(gsubData),
     20                arabicTable(formsTable)
     21          {
   \                     _ZN8touchgfx16UnmappedDataFontC1EPKNS_9GlyphNodeEPKttthhhhhPKPKhPKNS_11KerningNodeEttS5_PKNS_24FontContextualFormsTableE: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB085             SUB      SP,SP,#+20
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x000D             MOVS     R5,R1
   \        0xA   0x0016             MOVS     R6,R2
   \        0xC   0x001F             MOVS     R7,R3
   \        0xE   0x990E             LDR      R1,[SP, #+56]
   \       0x10   0x9A0F             LDR      R2,[SP, #+60]
   \       0x12   0x9B10             LDR      R3,[SP, #+64]
   \       0x14   0xF8DD 0x8050      LDR      R8,[SP, #+80]
   \       0x18   0xF8DD 0x9054      LDR      R9,[SP, #+84]
   \       0x1C   0xF8DD 0xA060      LDR      R10,[SP, #+96]
   \       0x20   0xF8DD 0xB064      LDR      R11,[SP, #+100]
   \       0x24   0xF8BD 0x005C      LDRH     R0,[SP, #+92]
   \       0x28   0x9004             STR      R0,[SP, #+16]
   \       0x2A   0xF8BD 0x0058      LDRH     R0,[SP, #+88]
   \       0x2E   0x9003             STR      R0,[SP, #+12]
   \       0x30   0xF89D 0x004C      LDRB     R0,[SP, #+76]
   \       0x34   0x9002             STR      R0,[SP, #+8]
   \       0x36   0xF89D 0x0048      LDRB     R0,[SP, #+72]
   \       0x3A   0x9001             STR      R0,[SP, #+4]
   \       0x3C   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \       0x40   0x9000             STR      R0,[SP, #+0]
   \       0x42   0xB2DB             UXTB     R3,R3
   \       0x44   0xB2D2             UXTB     R2,R2
   \       0x46   0xB289             UXTH     R1,R1
   \       0x48   0x0020             MOVS     R0,R4
   \       0x4A   0x.... 0x....      BL       _ZN8touchgfx4FontC2Ethhhhhtt
   \       0x4E   0x....             LDR.N    R0,??DataTable2
   \       0x50   0x6020             STR      R0,[R4, #+0]
   \       0x52   0x6125             STR      R5,[R4, #+16]
   \       0x54   0x82A7             STRH     R7,[R4, #+20]
   \       0x56   0x61A6             STR      R6,[R4, #+24]
   \       0x58   0xF8C4 0x801C      STR      R8,[R4, #+28]
   \       0x5C   0xF8C4 0x9020      STR      R9,[R4, #+32]
   \       0x60   0xF8C4 0xA024      STR      R10,[R4, #+36]
   \       0x64   0xF8C4 0xB028      STR      R11,[R4, #+40]
     22          }
   \       0x68   0x0020             MOVS     R0,R4
   \       0x6A   0xB005             ADD      SP,SP,#+20
   \       0x6C   0xE8BD 0x8FF0      POP      {R4-R11,PC}
     23          

   \                                 In section .text, align 2, keep-with-next
     24          const GlyphNode* UnmappedDataFont::getGlyph(Unicode::UnicodeChar unicode, const uint8_t*& pixelData, uint8_t& bitsPerPixel) const
     25          {
   \                     _ZNK8touchgfx16UnmappedDataFont8getGlyphEtRPKhRh: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x0015             MOVS     R5,R2
   \        0x8   0x001E             MOVS     R6,R3
     26              int index = lookupUnicode(unicode);
   \        0xA   0xB289             UXTH     R1,R1
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0x.... 0x....      BL       _ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt
   \       0x12   0x4680             MOV      R8,R0
     27          
     28              if (index != -1)
   \       0x14   0xF118 0x0F01      CMN      R8,#+1
   \       0x18   0xD01D             BEQ.N    ??getGlyph_0
     29              {
     30                  // Read glyphNode from unmapped flash
     31                  touchgfx::FlashDataReader* const flashReader = ApplicationFontProvider::getFlashReader();
   \       0x1A   0x.... 0x....      BL       _ZN23ApplicationFontProvider14getFlashReaderEv
     32                  flashReader->copyData(glyphList + index, &glyphNodeBuffer, sizeof(GlyphNode));
   \       0x1E   0x....             LDR.N    R7,??DataTable2_1
   \       0x20   0x230E             MOVS     R3,#+14
   \       0x22   0x003A             MOVS     R2,R7
   \       0x24   0xF8D4 0xC010      LDR      R12,[R4, #+16]
   \       0x28   0x210E             MOVS     R1,#+14
   \       0x2A   0xFB01 0xF808      MUL      R8,R1,R8
   \       0x2E   0xEB0C 0x0108      ADD      R1,R12,R8
   \       0x32   0xF8D0 0xC000      LDR      R12,[R0, #+0]
   \       0x36   0xF8DC 0xC00C      LDR      R12,[R12, #+12]
   \       0x3A   0x47E0             BLX      R12
     33          
     34                  pixelData = getPixelData(const_cast<const GlyphNode*>(&glyphNodeBuffer));
   \       0x3C   0x0039             MOVS     R1,R7
   \       0x3E   0x0020             MOVS     R0,R4
   \       0x40   0x6822             LDR      R2,[R4, #+0]
   \       0x42   0x6CD2             LDR      R2,[R2, #+76]
   \       0x44   0x4790             BLX      R2
   \       0x46   0x6028             STR      R0,[R5, #+0]
     35                  bitsPerPixel = getBitsPerPixel();
   \       0x48   0x0020             MOVS     R0,R4
   \       0x4A   0x6821             LDR      R1,[R4, #+0]
   \       0x4C   0x6B49             LDR      R1,[R1, #+52]
   \       0x4E   0x4788             BLX      R1
   \       0x50   0x7030             STRB     R0,[R6, #+0]
     36                  return &glyphNodeBuffer;
   \       0x52   0x0038             MOVS     R0,R7
   \       0x54   0xE000             B.N      ??getGlyph_1
     37              }
     38              return 0;
   \                     ??getGlyph_0: (+1)
   \       0x56   0x2000             MOVS     R0,#+0
   \                     ??getGlyph_1: (+1)
   \       0x58   0xE8BD 0x81F0      POP      {R4-R8,PC}
     39          }
     40          

   \                                 In section .text, align 2, keep-with-next
     41          const uint8_t* UnmappedDataFont::getPixelData(const GlyphNode* glyph) const
     42          {
     43              const uint8_t* const* table = (const uint8_t* const*)glyphDataList;
   \                     _ZNK8touchgfx16UnmappedDataFont12getPixelDataEPKNS_9GlyphNodeE: (+1)
   \        0x0   0x69C0             LDR      R0,[R0, #+28]
     44              return &(table[glyph->unicode / 2048][glyph->dataOffset]);
   \        0x2   0x680A             LDR      R2,[R1, #+0]
   \        0x4   0x8889             LDRH     R1,[R1, #+4]
   \        0x6   0xF44F 0x6300      MOV      R3,#+2048
   \        0xA   0xFB91 0xF1F3      SDIV     R1,R1,R3
   \        0xE   0xF850 0x0021      LDR      R0,[R0, R1, LSL #+2]
   \       0x12   0x4410             ADD      R0,R0,R2
   \       0x14   0x4770             BX       LR
     45          }
     46          

   \                                 In section .text, align 2, keep-with-next
     47          int8_t UnmappedDataFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
     48          {
   \                     _ZNK8touchgfx16UnmappedDataFont10getKerningEtPKNS_9GlyphNodeE: (+1)
   \        0x0   0xB410             PUSH     {R4}
     49              if (!glyph || glyph->kerningTableSize == 0)
   \        0x2   0x2A00             CMP      R2,#+0
   \        0x4   0xD002             BEQ.N    ??getKerning_0
   \        0x6   0x7B13             LDRB     R3,[R2, #+12]
   \        0x8   0x2B00             CMP      R3,#+0
   \        0xA   0xD101             BNE.N    ??getKerning_1
     50              {
     51                  return 0;
   \                     ??getKerning_0: (+1)
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0xE020             B.N      ??getKerning_2
     52              }
     53          
     54              const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
   \                     ??getKerning_1: (+1)
   \       0x10   0x0013             MOVS     R3,R2
   \       0x12   0x7B5C             LDRB     R4,[R3, #+13]
   \       0x14   0x0224             LSLS     R4,R4,#+8
   \       0x16   0xF414 0x64E0      ANDS     R4,R4,#0x700
   \       0x1A   0x7ADB             LDRB     R3,[R3, #+11]
   \       0x1C   0x431C             ORRS     R4,R3,R4
   \       0x1E   0x6A00             LDR      R0,[R0, #+32]
   \       0x20   0xB2A4             UXTH     R4,R4
   \       0x22   0xEB00 0x0384      ADD      R3,R0,R4, LSL #+2
     55              for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
   \       0x26   0x7B12             LDRB     R2,[R2, #+12]
   \       0x28   0xE006             B.N      ??getKerning_3
     56              {
     57                  if (prevChar == kerndata->unicodePrevChar)
     58                  {
     59                      return kerndata->distance;
     60                  }
     61                  if (prevChar < kerndata->unicodePrevChar)
   \                     ??getKerning_4: (+1)
   \       0x2A   0x0008             MOVS     R0,R1
   \       0x2C   0x881C             LDRH     R4,[R3, #+0]
   \       0x2E   0xB280             UXTH     R0,R0
   \       0x30   0x42A0             CMP      R0,R4
   \       0x32   0xD30D             BCC.N    ??getKerning_5
   \                     ??getKerning_6: (+1)
   \       0x34   0x1E52             SUBS     R2,R2,#+1
   \       0x36   0x1D1B             ADDS     R3,R3,#+4
   \                     ??getKerning_3: (+1)
   \       0x38   0x0010             MOVS     R0,R2
   \       0x3A   0xB280             UXTH     R0,R0
   \       0x3C   0x2800             CMP      R0,#+0
   \       0x3E   0xD007             BEQ.N    ??getKerning_7
   \       0x40   0x0008             MOVS     R0,R1
   \       0x42   0x881C             LDRH     R4,[R3, #+0]
   \       0x44   0xB280             UXTH     R0,R0
   \       0x46   0x42A0             CMP      R0,R4
   \       0x48   0xD1EF             BNE.N    ??getKerning_4
   \       0x4A   0xF993 0x0002      LDRSB    R0,[R3, #+2]
   \       0x4E   0xE000             B.N      ??getKerning_2
     62                  {
     63                      break;
     64                  }
     65              }
     66              return 0;
   \                     ??getKerning_5: (+1)
   \                     ??getKerning_7: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \                     ??getKerning_2: (+1)
   \       0x52   0xBC10             POP      {R4}
   \       0x54   0x4770             BX       LR
     67          }
     68          

   \                                 In section .text, align 2, keep-with-next
     69          int UnmappedDataFont::lookupUnicode(uint16_t unicode) const
     70          {
   \                     _ZNK8touchgfx16UnmappedDataFont13lookupUnicodeEt: (+1)
   \        0x0   0xB470             PUSH     {R4-R6}
     71              int32_t min = 0;
   \        0x2   0x2300             MOVS     R3,#+0
     72              int32_t max = listSize - 1;
   \        0x4   0x8A84             LDRH     R4,[R0, #+20]
   \        0x6   0x1E64             SUBS     R4,R4,#+1
     73          
     74              int32_t mid = min + (unicode - unicodes[min]); // Linear up from [min].unicode
   \        0x8   0xFA13 0xF581      UXTAH    R5,R3,R1
   \        0xC   0x6982             LDR      R2,[R0, #+24]
   \        0xE   0xF832 0x2013      LDRH     R2,[R2, R3, LSL #+1]
   \       0x12   0x1AAA             SUBS     R2,R5,R2
     75              if (mid < min)
   \       0x14   0x429A             CMP      R2,R3
   \       0x16   0xDA02             BGE.N    ??lookupUnicode_0
     76              {
     77                  // Unicode < unicodes[min] => not found
     78                  return -1;
   \       0x18   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x1C   0xE031             B.N      ??lookupUnicode_1
     79              }
     80              if (mid > max)
   \                     ??lookupUnicode_0: (+1)
   \       0x1E   0x4294             CMP      R4,R2
   \       0x20   0xDA17             BGE.N    ??lookupUnicode_2
     81              {
     82                  // Linear up ends too high
     83                  mid = max - (unicodes[max] - unicode); // Linear down from [max].unicode
   \       0x22   0x6982             LDR      R2,[R0, #+24]
   \       0x24   0xF832 0x2014      LDRH     R2,[R2, R4, LSL #+1]
   \       0x28   0x1AA2             SUBS     R2,R4,R2
   \       0x2A   0xFA12 0xF281      UXTAH    R2,R2,R1
     84                  if (mid > max)
   \       0x2E   0x4294             CMP      R4,R2
   \       0x30   0xDA02             BGE.N    ??lookupUnicode_3
     85                  {
     86                      // Unicode > unicodes[max] => not found
     87                      return -1;
   \       0x32   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x36   0xE024             B.N      ??lookupUnicode_1
     88                  }
     89                  if (mid < min)
   \                     ??lookupUnicode_3: (+1)
   \       0x38   0x429A             CMP      R2,R3
   \       0x3A   0xDA0A             BGE.N    ??lookupUnicode_2
     90                  {
     91                      // Linear down ends too low, take the middle element
     92                      mid = (min + max) / 2;
   \       0x3C   0x18E2             ADDS     R2,R4,R3
   \       0x3E   0x2502             MOVS     R5,#+2
   \       0x40   0xFB92 0xF2F5      SDIV     R2,R2,R5
   \       0x44   0xE005             B.N      ??lookupUnicode_2
     93                  }
     94              }
     95              while (min <= max)
     96              {
     97                  if (unicode == unicodes[mid])
     98                  {
     99                      // Found at [mid]
    100                      return mid;
    101                  }
    102                  if (unicode < unicodes[mid])
    103                  {
    104                      // Unicode is in lower half
    105                      max = mid - 1;
    106                      if (max < min)
    107                      {
    108                          // Range is empty => not found
    109                          break;
    110                      }
    111                      // We adjusted max, try linear down from [max].unicode
    112                      mid = max - (unicodes[max] - unicode);
    113                      if (mid > max)
    114                      {
    115                          // Unicode > [max].unicode => not found
    116                          break;
    117                      }
    118                      if (mid < min)
   \                     ??lookupUnicode_4: (+1)
   \       0x46   0x429A             CMP      R2,R3
   \       0x48   0xDA03             BGE.N    ??lookupUnicode_2
    119                      {
    120                          // Linear down ends too low, take the middle element
    121                          mid = (min + max) / 2;
   \       0x4A   0x18E2             ADDS     R2,R4,R3
   \       0x4C   0x2502             MOVS     R5,#+2
   \       0x4E   0xFB92 0xF2F5      SDIV     R2,R2,R5
    122                      }
   \                     ??lookupUnicode_2: (+1)
   \       0x52   0x429C             CMP      R4,R3
   \       0x54   0xDB13             BLT.N    ??lookupUnicode_5
   \       0x56   0x000D             MOVS     R5,R1
   \       0x58   0x6986             LDR      R6,[R0, #+24]
   \       0x5A   0xF836 0x6012      LDRH     R6,[R6, R2, LSL #+1]
   \       0x5E   0xB2AD             UXTH     R5,R5
   \       0x60   0x42B5             CMP      R5,R6
   \       0x62   0xD101             BNE.N    ??lookupUnicode_6
   \       0x64   0x0010             MOVS     R0,R2
   \       0x66   0xE00C             B.N      ??lookupUnicode_1
   \                     ??lookupUnicode_6: (+1)
   \       0x68   0x000D             MOVS     R5,R1
   \       0x6A   0x6986             LDR      R6,[R0, #+24]
   \       0x6C   0xF836 0x6012      LDRH     R6,[R6, R2, LSL #+1]
   \       0x70   0xB2AD             UXTH     R5,R5
   \       0x72   0x42B5             CMP      R5,R6
   \       0x74   0xD210             BCS.N    ??lookupUnicode_7
   \       0x76   0x0014             MOVS     R4,R2
   \       0x78   0x1E64             SUBS     R4,R4,#+1
   \       0x7A   0x429C             CMP      R4,R3
   \       0x7C   0xDA03             BGE.N    ??lookupUnicode_8
    123                  }
    124                  else
    125                  {
    126                      // Unicode is in upper half
    127                      min = mid + 1;
    128                      if (min > max)
    129                      {
    130                          // Range is empty => not found
    131                          break;
    132                      }
    133                      // We adjusted min, try linear up from [min].unicode
    134                      mid = min + (unicode - unicodes[min]);
    135                      if (mid < min)
    136                      {
    137                          // Unicode < [min].unicode => not found
    138                          break;
    139                      }
    140                      if (mid > max)
    141                      {
    142                          // Linear up ends too high, take the middle element
    143                          mid = (min + max) / 2;
    144                      }
    145                  }
    146              }
    147              return -1;
   \                     ??lookupUnicode_5: (+1)
   \       0x7E   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \                     ??lookupUnicode_1: (+1)
   \       0x82   0xBC70             POP      {R4-R6}
   \       0x84   0x4770             BX       LR
   \                     ??lookupUnicode_8: (+1)
   \       0x86   0x6982             LDR      R2,[R0, #+24]
   \       0x88   0xF832 0x2014      LDRH     R2,[R2, R4, LSL #+1]
   \       0x8C   0x1AA2             SUBS     R2,R4,R2
   \       0x8E   0xFA12 0xF281      UXTAH    R2,R2,R1
   \       0x92   0x4294             CMP      R4,R2
   \       0x94   0xDAD7             BGE.N    ??lookupUnicode_4
   \       0x96   0xE7F2             B.N      ??lookupUnicode_5
   \                     ??lookupUnicode_7: (+1)
   \       0x98   0x0013             MOVS     R3,R2
   \       0x9A   0x1C5B             ADDS     R3,R3,#+1
   \       0x9C   0x429C             CMP      R4,R3
   \       0x9E   0xDBEE             BLT.N    ??lookupUnicode_5
   \                     ??lookupUnicode_9: (+1)
   \       0xA0   0xFA13 0xF581      UXTAH    R5,R3,R1
   \       0xA4   0x6982             LDR      R2,[R0, #+24]
   \       0xA6   0xF832 0x2013      LDRH     R2,[R2, R3, LSL #+1]
   \       0xAA   0x1AAA             SUBS     R2,R5,R2
   \       0xAC   0x429A             CMP      R2,R3
   \       0xAE   0xDBE6             BLT.N    ??lookupUnicode_5
   \                     ??lookupUnicode_10: (+1)
   \       0xB0   0x4294             CMP      R4,R2
   \       0xB2   0xDACE             BGE.N    ??lookupUnicode_2
   \       0xB4   0x18E2             ADDS     R2,R4,R3
   \       0xB6   0x2502             MOVS     R5,#+2
   \       0xB8   0xFB92 0xF2F5      SDIV     R2,R2,R5
   \       0xBC   0xE7C9             B.N      ??lookupUnicode_2
    148          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x....'....        DC32     _ZTVN8touchgfx16UnmappedDataFontE+0x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x....'....        DC32     _ZN8touchgfx16UnmappedDataFont15glyphNodeBufferE
    149          } // namespace touchgfx

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   ApplicationFontProvider::getFlashReader()
      16   touchgfx::Font::Font(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t)
       0   touchgfx::Font::getBitsPerPixel() const
       0   touchgfx::Font::getByteAlignRow() const
       0   touchgfx::Font::getEllipsisChar() const
       0   touchgfx::Font::getFallbackChar() const
       0   touchgfx::Font::getFontHeight() const
      16   touchgfx::Font::getGlyph(uint16_t) const
        16   -- Indirect call
       0   touchgfx::Font::getMinimumTextHeight() const
      32   touchgfx::Font::subobject Font(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t const, uint16_t const)
        32   -> touchgfx::Font::Font(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t)
      56   touchgfx::UnmappedDataFont::UnmappedDataFont(touchgfx::GlyphNode const *, uint16_t const *, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t const *const *, touchgfx::KerningNode const *, uint16_t, uint16_t, uint16_t const *, touchgfx::FontContextualFormsTable const *)
        56   -> touchgfx::Font::subobject Font(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t const, uint16_t const)
       8   touchgfx::UnmappedDataFont::deleter ~UnmappedDataFont() noexcept
         8   -> operator delete(void *, unsigned int) noexcept
         8   -> touchgfx::UnmappedDataFont::~UnmappedDataFont() noexcept
       0   touchgfx::UnmappedDataFont::getContextualFormsTable() const
       0   touchgfx::UnmappedDataFont::getGSUBTable() const
      24   touchgfx::UnmappedDataFont::getGlyph(uint16_t, uint8_t const *&, uint8_t &) const
        24   -- Indirect call
        24   -> ApplicationFontProvider::getFlashReader()
        24   -> touchgfx::UnmappedDataFont::lookupUnicode(uint16_t) const
       4   touchgfx::UnmappedDataFont::getKerning(uint16_t, touchgfx::GlyphNode const *) const
       0   touchgfx::UnmappedDataFont::getPixelData(touchgfx::GlyphNode const *) const
      12   touchgfx::UnmappedDataFont::lookupUnicode(uint16_t) const
      56   touchgfx::UnmappedDataFont::subobject UnmappedDataFont(touchgfx::GlyphNode const *, uint16_t const *, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t const *const *, touchgfx::KerningNode const *, uint16_t const, uint16_t const, uint16_t const *const, touchgfx::FontContextualFormsTable const *)
        56   -> touchgfx::UnmappedDataFont::UnmappedDataFont(touchgfx::GlyphNode const *, uint16_t const *, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t const *const *, touchgfx::KerningNode const *, uint16_t, uint16_t, uint16_t const *, touchgfx::FontContextualFormsTable const *)
       0   touchgfx::UnmappedDataFont::~UnmappedDataFont() noexcept


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ApplicationFontProvider::getFlashReader()
      50  touchgfx::Font::Font(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t, uint16_t)
       8  touchgfx::Font::getBitsPerPixel() const
       8  touchgfx::Font::getByteAlignRow() const
       4  touchgfx::Font::getEllipsisChar() const
       4  touchgfx::Font::getFallbackChar() const
       4  touchgfx::Font::getFontHeight() const
      38  touchgfx::Font::getGlyph(uint16_t) const
      10  touchgfx::Font::getMinimumTextHeight() const
      48  touchgfx::Font::subobject Font(uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint16_t const, uint16_t const)
     112  touchgfx::UnmappedDataFont::UnmappedDataFont(touchgfx::GlyphNode const *, uint16_t const *, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t const *const *, touchgfx::KerningNode const *, uint16_t, uint16_t, uint16_t const *, touchgfx::FontContextualFormsTable const *)
      20  touchgfx::UnmappedDataFont::deleter ~UnmappedDataFont() noexcept
       4  touchgfx::UnmappedDataFont::getContextualFormsTable() const
       4  touchgfx::UnmappedDataFont::getGSUBTable() const
      92  touchgfx::UnmappedDataFont::getGlyph(uint16_t, uint8_t const *&, uint8_t &) const
      86  touchgfx::UnmappedDataFont::getKerning(uint16_t, touchgfx::GlyphNode const *) const
      22  touchgfx::UnmappedDataFont::getPixelData(touchgfx::GlyphNode const *) const
      16  touchgfx::UnmappedDataFont::glyphNodeBuffer
     190  touchgfx::UnmappedDataFont::lookupUnicode(uint16_t) const
      78  touchgfx::UnmappedDataFont::subobject UnmappedDataFont(touchgfx::GlyphNode const *, uint16_t const *, uint16_t, uint16_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t, uint8_t const *const *, touchgfx::KerningNode const *, uint16_t const, uint16_t const, uint16_t const *const, touchgfx::FontContextualFormsTable const *)
       2  touchgfx::UnmappedDataFont::~UnmappedDataFont() noexcept
     172  -- Other

 
  16 bytes in section .bss
 172 bytes in section .rodata
 796 bytes in section .text
 
 588 bytes of CODE  memory (+ 208 bytes shared)
   0 bytes of CONST memory (+ 172 bytes shared)
  16 bytes of DATA  memory

Errors: none
Warnings: none
