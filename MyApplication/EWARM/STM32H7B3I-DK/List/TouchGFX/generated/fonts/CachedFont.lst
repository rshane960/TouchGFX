###############################################################################
#
# IAR ANSI C/C++ Compiler V9.20.1.318/W64 for ARM         05/Feb/2022  17:09:42
# Copyright 1999-2021 IAR Systems AB.
#
#    Cpu mode           =  thumb
#    Endian             =  little
#    Source file        =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\TouchGFX\generated\fonts\src\CachedFont.cpp
#        [UTF-8]
#    Command line       =
#        -f
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\TouchGFX\generated\fonts\CachedFont.o.rsp
#        (D:\99_Project\GitHub\TouchGFX\MyApplication\TouchGFX\generated\fonts\src\CachedFont.cpp
#        -D USE_HAL_DRIVER -D STM32H7B3xxQ -D USE_BPP=24 -lC
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\TouchGFX\generated\fonts
#        -lA
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\TouchGFX\generated\fonts
#        -o
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\TouchGFX\generated\fonts
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.0\arm\inc\c\DLib_Config_Full.h" -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Core/Inc\ -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/App\ -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/target/generated\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/target\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/STM32H7xx_HAL_Driver/Inc\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/STM32H7xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM4F\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/CMSIS/Device/ST/STM32H7xx/Include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/BSP/STM32H7B3I-DK\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/ST/touchgfx/framework/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/fonts/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/gui_generated/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/images/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/texts/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/gui/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/videos/include\
#        -Ol --c++ --no_exceptions --no_rtti --no_static_destruction
#        --source_encoding utf8 --text_out utf8 --utf8_text_in)
#        --dependencies=n
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\TouchGFX\generated\fonts\CachedFont.o.d
#    Locale             =  C
#    List file          =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\TouchGFX\generated\fonts\CachedFont.lst
#    Object file        =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\TouchGFX\generated\fonts\CachedFont.o
#    Runtime model:        
#      __CPP_Exceptions =  Disabled
#      __CPP_Language   =  C++14
#      __CPP_Library    =  DLib
#      __CPP_Runtime    =  1
#      __SystemLibrary  =  DLib
#      __dlib_version   =  6
#
###############################################################################

D:\99_Project\GitHub\TouchGFX\MyApplication\TouchGFX\generated\fonts\src\CachedFont.cpp
      1          /* DO NOT EDIT THIS FILE */
      2          /* This file is autogenerated by the text-database code generator */
      3          
      4          #include <fonts/CachedFont.hpp>

   \                                 In section .text, align 2
   \   __vfp touchgfx::GlyphNode const *touchgfx::Font::getGlyph(uint16_t) const
   \                     _ZNK8touchgfx4Font8getGlyphEt: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x000A             MOVS     R2,R1
   \        0x4   0xB292             UXTH     R2,R2
   \        0x6   0x2A00             CMP      R2,#+0
   \        0x8   0xD101             BNE.N    ??getGlyph_0
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0xE00A             B.N      ??getGlyph_1
   \                     ??getGlyph_0: (+1)
   \        0xE   0x2200             MOVS     R2,#+0
   \       0x10   0x9201             STR      R2,[SP, #+4]
   \       0x12   0x2200             MOVS     R2,#+0
   \       0x14   0xF88D 0x2000      STRB     R2,[SP, #+0]
   \       0x18   0x466B             MOV      R3,SP
   \       0x1A   0xAA01             ADD      R2,SP,#+4
   \       0x1C   0xB289             UXTH     R1,R1
   \       0x1E   0x6804             LDR      R4,[R0, #+0]
   \       0x20   0x68A4             LDR      R4,[R4, #+8]
   \       0x22   0x47A0             BLX      R4
   \                     ??getGlyph_1: (+1)
   \       0x24   0xBD16             POP      {R1,R2,R4,PC}

   \                                 In section .text, align 2
   \   __vfp uint16_t touchgfx::Font::getFallbackChar() const
   \                     _ZNK8touchgfx4Font15getFallbackCharEv: (+1)
   \        0x0   0x8940             LDRH     R0,[R0, #+10]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint16_t touchgfx::Font::getEllipsisChar() const
   \                     _ZNK8touchgfx4Font15getEllipsisCharEv: (+1)
   \        0x0   0x8980             LDRH     R0,[R0, #+12]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint16_t touchgfx::Font::getFontHeight() const
   \                     _ZNK8touchgfx4Font13getFontHeightEv: (+1)
   \        0x0   0x8880             LDRH     R0,[R0, #+4]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint16_t touchgfx::Font::getMinimumTextHeight() const
   \                     _ZNK8touchgfx4Font20getMinimumTextHeightEv: (+1)
   \        0x0   0x8881             LDRH     R1,[R0, #+4]
   \        0x2   0x7980             LDRB     R0,[R0, #+6]
   \        0x4   0x1808             ADDS     R0,R1,R0
   \        0x6   0xB280             UXTH     R0,R0
   \        0x8   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint8_t touchgfx::Font::getBitsPerPixel() const
   \                     _ZNK8touchgfx4Font15getBitsPerPixelEv: (+1)
   \        0x0   0x79C0             LDRB     R0,[R0, #+7]
   \        0x2   0xF010 0x007F      ANDS     R0,R0,#0x7F
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint8_t touchgfx::Font::getByteAlignRow() const
   \                     _ZNK8touchgfx4Font15getByteAlignRowEv: (+1)
   \        0x0   0x79C0             LDRB     R0,[R0, #+7]
   \        0x2   0xB2C0             UXTB     R0,R0
   \        0x4   0x09C0             LSRS     R0,R0,#+7
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint8_t const *touchgfx::FontCache::getPixelData(touchgfx::GlyphNode const *)
   \                     _ZN8touchgfx9FontCache12getPixelDataEPKNS_9GlyphNodeE: (+1)
   \        0x0   0x3014             ADDS     R0,R0,#+20
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp bool touchgfx::FontCache::isCached(touchgfx::GlyphNode const *)
   \                     _ZN8touchgfx9FontCache8isCachedEPKNS_9GlyphNodeE: (+1)
   \        0x0   0x6801             LDR      R1,[R0, #+0]
   \        0x2   0xF111 0x0F01      CMN      R1,#+1
   \        0x6   0xD101             BNE.N    ??isCached_0
   \        0x8   0x2001             MOVS     R0,#+1
   \        0xA   0xE000             B.N      ??isCached_1
   \                     ??isCached_0: (+1)
   \        0xC   0x2000             MOVS     R0,#+0
   \                     ??isCached_1: (+1)
   \        0xE   0xB2C0             UXTB     R0,R0
   \       0x10   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp touchgfx::CachedFont::deleter ~CachedFont() noexcept
   \                     _ZN8touchgfx10CachedFontD0Ev: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZN8touchgfx10CachedFontD1Ev
   \        0xA   0x2134             MOVS     R1,#+52
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0x.... 0x....      BL       _ZdlPvj
   \       0x12   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2
   \   __vfp touchgfx::CachedFont::~CachedFont() noexcept
   \                     _ZN8touchgfx10CachedFontD1Ev: (+1)
   \        0x0   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp uint16_t const *touchgfx::CachedFont::getGSUBTable() const
   \                     _ZNK8touchgfx10CachedFont12getGSUBTableEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x0001             MOVS     R1,R0
   \        0x4   0x6A08             LDR      R0,[R1, #+32]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD001             BEQ.N    ??getGSUBTable_0
   \        0xA   0x6A08             LDR      R0,[R1, #+32]
   \        0xC   0xE004             B.N      ??getGSUBTable_1
   \                     ??getGSUBTable_0: (+1)
   \        0xE   0x6B08             LDR      R0,[R1, #+48]
   \       0x10   0x6B09             LDR      R1,[R1, #+48]
   \       0x12   0x6809             LDR      R1,[R1, #+0]
   \       0x14   0x6C49             LDR      R1,[R1, #+68]
   \       0x16   0x4788             BLX      R1
   \                     ??getGSUBTable_1: (+1)
   \       0x18   0xBD02             POP      {R1,PC}

   \                                 In section .text, align 2
   \   __vfp void touchgfx::CachedFont::setGSUBTable(uint16_t const *)
   \                     _ZN8touchgfx10CachedFont12setGSUBTableEPKt: (+1)
   \        0x0   0x6201             STR      R1,[R0, #+32]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp touchgfx::FontContextualFormsTable const *touchgfx::CachedFont::getContextualFormsTable() const
   \                     _ZNK8touchgfx10CachedFont23getContextualFormsTableEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x0001             MOVS     R1,R0
   \        0x4   0x6A48             LDR      R0,[R1, #+36]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD001             BEQ.N    ??getContextualFormsTable_0
   \        0xA   0x6A48             LDR      R0,[R1, #+36]
   \        0xC   0xE004             B.N      ??getContextualFormsTable_1
   \                     ??getContextualFormsTable_0: (+1)
   \        0xE   0x6B08             LDR      R0,[R1, #+48]
   \       0x10   0x6B09             LDR      R1,[R1, #+48]
   \       0x12   0x6809             LDR      R1,[R1, #+0]
   \       0x14   0x6C89             LDR      R1,[R1, #+72]
   \       0x16   0x4788             BLX      R1
   \                     ??getContextualFormsTable_1: (+1)
   \       0x18   0xBD02             POP      {R1,PC}

   \                                 In section .text, align 2
   \   __vfp void touchgfx::CachedFont::setContextualFormsTable(touchgfx::FontContextualFormsTable const *)
   \                     _ZN8touchgfx10CachedFont23setContextualFormsTableEPKNS_24FontContextualFormsTableE: (+1)
   \        0x0   0x6241             STR      R1,[R0, #+36]
   \        0x2   0x4770             BX       LR
      5          
      6          namespace touchgfx
      7          {

   \                                 In section .text, align 2, keep-with-next
      8          const uint8_t* CachedFont::getPixelData(const GlyphNode* glyph) const
      9          {
   \                     _ZNK8touchgfx10CachedFont12getPixelDataEPKNS_9GlyphNodeE: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
     10              // If glyph is cached, then data is present just after the GlyphNode
     11              if (FontCache::isCached(glyph))
   \        0x6   0x0028             MOVS     R0,R5
   \        0x8   0x.... 0x....      BL       _ZN8touchgfx9FontCache8isCachedEPKNS_9GlyphNodeE
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD003             BEQ.N    ??getPixelData_0
     12              {
     13                  const uint8_t* data = FontCache::getPixelData(glyph);
   \       0x10   0x0028             MOVS     R0,R5
   \       0x12   0x.... 0x....      BL       _ZN8touchgfx9FontCache12getPixelDataEPKNS_9GlyphNodeE
     14                  return data;
   \       0x16   0xE005             B.N      ??getPixelData_1
     15              }
     16              return flashFont->getPixelData(glyph);
   \                     ??getPixelData_0: (+1)
   \       0x18   0x0029             MOVS     R1,R5
   \       0x1A   0x6B20             LDR      R0,[R4, #+48]
   \       0x1C   0x6B22             LDR      R2,[R4, #+48]
   \       0x1E   0x6812             LDR      R2,[R2, #+0]
   \       0x20   0x6CD2             LDR      R2,[R2, #+76]
   \       0x22   0x4790             BLX      R2
   \                     ??getPixelData_1: (+1)
   \       0x24   0xBD32             POP      {R1,R4,R5,PC}
     17          }
     18          

   \                                 In section .text, align 2, keep-with-next
     19          const GlyphNode* CachedFont::getGlyph(Unicode::UnicodeChar unicode, const uint8_t*& pixelData, uint8_t& bitsPerPixel) const
     20          {
   \                     _ZNK8touchgfx10CachedFont8getGlyphEtRPKhRh: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x4688             MOV      R8,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
     21              // Look first in internal flash font
     22              const GlyphNode* n = flashFont->find(unicode);
   \        0xC   0x4641             MOV      R1,R8
   \        0xE   0xB289             UXTH     R1,R1
   \       0x10   0x6B28             LDR      R0,[R5, #+48]
   \       0x12   0x.... 0x....      BL       _ZNK8touchgfx9ConstFont4findEt
   \       0x16   0x0004             MOVS     R4,R0
     23          
     24              if ((n == 0) && (cache != 0))
   \       0x18   0x2C00             CMP      R4,#+0
   \       0x1A   0xD109             BNE.N    ??getGlyph_2
   \       0x1C   0x6AE8             LDR      R0,[R5, #+44]
   \       0x1E   0x2800             CMP      R0,#+0
   \       0x20   0xD006             BEQ.N    ??getGlyph_2
     25              {
     26                  // Now look in FontCache table
     27                  n = cache->getGlyph(unicode, fontId);
   \       0x22   0x8D2A             LDRH     R2,[R5, #+40]
   \       0x24   0x4641             MOV      R1,R8
   \       0x26   0xB289             UXTH     R1,R1
   \       0x28   0x6AE8             LDR      R0,[R5, #+44]
   \       0x2A   0x.... 0x....      BL       _ZNK8touchgfx9FontCache8getGlyphEtt
   \       0x2E   0x0004             MOVS     R4,R0
     28              }
     29          
     30              // Revert to normal behaviour if still not found
     31              if (n == 0 && unicode != 0 && unicode != '\n')
   \                     ??getGlyph_2: (+1)
   \       0x30   0x2C00             CMP      R4,#+0
   \       0x32   0xD11D             BNE.N    ??getGlyph_3
   \       0x34   0x4640             MOV      R0,R8
   \       0x36   0xB280             UXTH     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD019             BEQ.N    ??getGlyph_3
   \       0x3C   0xFA1F 0xF888      UXTH     R8,R8
   \       0x40   0xF1B8 0x0F0A      CMP      R8,#+10
   \       0x44   0xD014             BEQ.N    ??getGlyph_3
     32              {
     33                  Unicode::UnicodeChar fallbackChar = flashFont->getFallbackChar();
   \       0x46   0x6B28             LDR      R0,[R5, #+48]
   \       0x48   0x6B29             LDR      R1,[R5, #+48]
   \       0x4A   0x6809             LDR      R1,[R1, #+0]
   \       0x4C   0x6909             LDR      R1,[R1, #+16]
   \       0x4E   0x4788             BLX      R1
   \       0x50   0x4680             MOV      R8,R0
     34                  n = flashFont->find(fallbackChar);
   \       0x52   0x4641             MOV      R1,R8
   \       0x54   0xB289             UXTH     R1,R1
   \       0x56   0x6B28             LDR      R0,[R5, #+48]
   \       0x58   0x.... 0x....      BL       _ZNK8touchgfx9ConstFont4findEt
   \       0x5C   0x0004             MOVS     R4,R0
     35                  if (n == 0)
   \       0x5E   0x2C00             CMP      R4,#+0
   \       0x60   0xD106             BNE.N    ??getGlyph_3
     36                  {
     37                      n = cache->getGlyph(fallbackChar, fontId);
   \       0x62   0x8D2A             LDRH     R2,[R5, #+40]
   \       0x64   0x4641             MOV      R1,R8
   \       0x66   0xB289             UXTH     R1,R1
   \       0x68   0x6AE8             LDR      R0,[R5, #+44]
   \       0x6A   0x.... 0x....      BL       _ZNK8touchgfx9FontCache8getGlyphEtt
   \       0x6E   0x0004             MOVS     R4,R0
     38                  }
     39              }
     40          
     41              if (n != 0)
   \                     ??getGlyph_3: (+1)
   \       0x70   0x2C00             CMP      R4,#+0
   \       0x72   0xD00C             BEQ.N    ??getGlyph_4
     42              {
     43                  pixelData = getPixelData(n);
   \       0x74   0x0021             MOVS     R1,R4
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0x682A             LDR      R2,[R5, #+0]
   \       0x7A   0x6CD2             LDR      R2,[R2, #+76]
   \       0x7C   0x4790             BLX      R2
   \       0x7E   0x6030             STR      R0,[R6, #+0]
     44                  bitsPerPixel = getBitsPerPixel();
   \       0x80   0x0028             MOVS     R0,R5
   \       0x82   0x6829             LDR      R1,[R5, #+0]
   \       0x84   0x6B49             LDR      R1,[R1, #+52]
   \       0x86   0x4788             BLX      R1
   \       0x88   0x7038             STRB     R0,[R7, #+0]
     45                  return n;
   \       0x8A   0x0020             MOVS     R0,R4
   \       0x8C   0xE000             B.N      ??getGlyph_5
     46              }
     47              return (const GlyphNode*)0;
   \                     ??getGlyph_4: (+1)
   \       0x8E   0x2000             MOVS     R0,#+0
   \                     ??getGlyph_5: (+1)
   \       0x90   0xE8BD 0x81F0      POP      {R4-R8,PC}
     48          }
     49          

   \                                 In section .text, align 2, keep-with-next
     50          int8_t CachedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
     51          {
     52              // Kerning is not supported by Font Caching
     53              return 0;
   \                     _ZNK8touchgfx10CachedFont10getKerningEtPKNS_9GlyphNodeE: (+1)
   \        0x0   0x2000             MOVS     R0,#+0
   \        0x2   0x4770             BX       LR
     54          }
     55          } // namespace touchgfx

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   touchgfx::CachedFont::deleter ~CachedFont() noexcept
         8   -> operator delete(void *, unsigned int) noexcept
         8   -> touchgfx::CachedFont::~CachedFont() noexcept
       8   touchgfx::CachedFont::getContextualFormsTable() const
         8   -- Indirect call
       8   touchgfx::CachedFont::getGSUBTable() const
         8   -- Indirect call
      24   touchgfx::CachedFont::getGlyph(uint16_t, uint8_t const *&, uint8_t &) const
        24   -- Indirect call
        24   -> touchgfx::ConstFont::find(uint16_t) const
        24   -> touchgfx::FontCache::getGlyph(uint16_t, uint16_t) const
       0   touchgfx::CachedFont::getKerning(uint16_t, touchgfx::GlyphNode const *) const
      16   touchgfx::CachedFont::getPixelData(touchgfx::GlyphNode const *) const
        16   -- Indirect call
        16   -> touchgfx::FontCache::getPixelData(touchgfx::GlyphNode const *)
        16   -> touchgfx::FontCache::isCached(touchgfx::GlyphNode const *)
       0   touchgfx::CachedFont::setContextualFormsTable(touchgfx::FontContextualFormsTable const *)
       0   touchgfx::CachedFont::setGSUBTable(uint16_t const *)
       0   touchgfx::CachedFont::~CachedFont() noexcept
       0   touchgfx::Font::getBitsPerPixel() const
       0   touchgfx::Font::getByteAlignRow() const
       0   touchgfx::Font::getEllipsisChar() const
       0   touchgfx::Font::getFallbackChar() const
       0   touchgfx::Font::getFontHeight() const
      16   touchgfx::Font::getGlyph(uint16_t) const
        16   -- Indirect call
       0   touchgfx::Font::getMinimumTextHeight() const
       0   touchgfx::FontCache::getPixelData(touchgfx::GlyphNode const *)
       0   touchgfx::FontCache::isCached(touchgfx::GlyphNode const *)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  touchgfx::CachedFont::deleter ~CachedFont() noexcept
      26  touchgfx::CachedFont::getContextualFormsTable() const
      26  touchgfx::CachedFont::getGSUBTable() const
     148  touchgfx::CachedFont::getGlyph(uint16_t, uint8_t const *&, uint8_t &) const
       4  touchgfx::CachedFont::getKerning(uint16_t, touchgfx::GlyphNode const *) const
      38  touchgfx::CachedFont::getPixelData(touchgfx::GlyphNode const *) const
       4  touchgfx::CachedFont::setContextualFormsTable(touchgfx::FontContextualFormsTable const *)
       4  touchgfx::CachedFont::setGSUBTable(uint16_t const *)
       2  touchgfx::CachedFont::~CachedFont() noexcept
       8  touchgfx::Font::getBitsPerPixel() const
       8  touchgfx::Font::getByteAlignRow() const
       4  touchgfx::Font::getEllipsisChar() const
       4  touchgfx::Font::getFallbackChar() const
       4  touchgfx::Font::getFontHeight() const
      38  touchgfx::Font::getGlyph(uint16_t) const
      10  touchgfx::Font::getMinimumTextHeight() const
       4  touchgfx::FontCache::getPixelData(touchgfx::GlyphNode const *)
      18  touchgfx::FontCache::isCached(touchgfx::GlyphNode const *)
     132  -- Other

 
 132 bytes in section .rodata
 370 bytes in section .text
 
 190 bytes of CODE  memory (+ 180 bytes shared)
   0 bytes of CONST memory (+ 132 bytes shared)

Errors: none
Warnings: none
