###############################################################################
#
# IAR ANSI C/C++ Compiler V9.20.1.318/W64 for ARM         07/Feb/2022  20:39:41
# Copyright 1999-2021 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\Drivers\BSP\Components\mx25lm51245g\mx25lm51245g.c
#        [UTF-8]
#    Command line      =
#        -f
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Drivers\BSP\Components\mx25lm51245g.o.rsp
#        (D:\99_Project\GitHub\TouchGFX\MyApplication\Drivers\BSP\Components\mx25lm51245g\mx25lm51245g.c
#        -D USE_HAL_DRIVER -D STM32H7B3xxQ -D USE_BPP=24 -lC
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\Drivers\BSP\Components
#        -lA
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\Drivers\BSP\Components
#        -o
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Drivers\BSP\Components
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.0\arm\inc\c\DLib_Config_Full.h" -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Core/Inc\ -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/App\ -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/target/generated\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/target\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/STM32H7xx_HAL_Driver/Inc\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/STM32H7xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM4F\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/CMSIS/Device/ST/STM32H7xx/Include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/BSP/STM32H7B3I-DK\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/ST/touchgfx/framework/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/fonts/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/gui_generated/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/images/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/texts/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/gui/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/videos/include\
#        -Ol --source_encoding utf8 --text_out utf8 --utf8_text_in)
#        --dependencies=n
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Drivers\BSP\Components\mx25lm51245g.o.d
#    Locale            =  C
#    List file         =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\Drivers\BSP\Components\mx25lm51245g.lst
#    Object file       =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Drivers\BSP\Components\mx25lm51245g.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\99_Project\GitHub\TouchGFX\MyApplication\Drivers\BSP\Components\mx25lm51245g\mx25lm51245g.c
      1          /**
      2           ******************************************************************************
      3           * @file    mx25lm51245g.c
      4           * @modify  MCD Application Team
      5           * @brief   This file provides the MX25LM51245G OSPI drivers.
      6           ******************************************************************************
      7           * MX25LM51245G action :
      8           *   STR Octal IO protocol (SOPI) and DTR Octal IO protocol (DOPI) bits of
      9           *   Configuration Register 2 :
     10           *     DOPI = 1 and SOPI = 0: Operates in DTR Octal IO protocol (accepts 8-8-8 commands)
     11           *     DOPI = 0 and SOPI = 1: Operates in STR Octal IO protocol (accepts 8-8-8 commands)
     12           *     DOPI = 0 and SOPI = 0: Operates in Single IO protocol (accepts 1-1-1 commands)
     13           *   Enter SOPI mode by configuring DOPI = 0 and SOPI = 1 in CR2-Addr0
     14           *   Exit SOPI mode by configuring DOPI = 0 and SOPI = 0 in CR2-Addr0
     15           *   Enter DOPI mode by configuring DOPI = 1 and SOPI = 0 in CR2-Addr0
     16           *   Exit DOPI mode by configuring DOPI = 0 and SOPI = 0 in CR2-Addr0
     17           *
     18           *   Memory commands support STR(Single Transfer Rate) &
     19           *   DTR(Double Transfer Rate) modes in OPI
     20           *
     21           *   Memory commands support STR(Single Transfer Rate) &
     22           *   DTR(Double Transfer Rate) modes in SPI
     23           *
     24           ******************************************************************************
     25            * @attention
     26            *
     27            * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
     28            * All rights reserved.</center></h2>
     29            *
     30            * This software component is licensed by ST under BSD 3-Clause license,
     31            * the "License"; You may not use this file except in compliance with the
     32            * License. You may obtain a copy of the License at:
     33            *                        opensource.org/licenses/BSD-3-Clause
     34            *
     35            ******************************************************************************
     36           */
     37          
     38          /* Includes ------------------------------------------------------------------*/
     39          #include "mx25lm51245g.h"
     40          
     41          /** @addtogroup BSP
     42            * @{
     43            */
     44          
     45          /** @addtogroup Components
     46            * @{
     47            */
     48          
     49          /** @defgroup MX25LM51245G MX25LM51245G
     50            * @{
     51            */
     52          
     53          /** @defgroup MX25LM51245G_Exported_Functions MX25LM51245G Exported Functions
     54            * @{
     55            */
     56          
     57          /**
     58            * @brief  Get Flash information
     59            * @param  pInfo pointer to information structure
     60            * @retval error status
     61            */

   \                                 In section .text, align 2, keep-with-next
     62          int32_t MX25LM51245G_GetFlashInfo(MX25LM51245G_Info_t *pInfo)
     63          {
     64            /* Configure the structure with the memory configuration */
     65            pInfo->FlashSize              = MX25LM51245G_FLASH_SIZE;
   \                     MX25LM51245G_GetFlashInfo: (+1)
   \        0x0   0xF05F 0x6180      MOVS     R1,#+67108864
   \        0x4   0x6001             STR      R1,[R0, #+0]
     66            pInfo->EraseSectorSize        = MX25LM51245G_SECTOR_64K;
   \        0x6   0xF45F 0x3180      MOVS     R1,#+65536
   \        0xA   0x6041             STR      R1,[R0, #+4]
     67            pInfo->EraseSectorsNumber     = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SECTOR_64K);
   \        0xC   0xF44F 0x6180      MOV      R1,#+1024
   \       0x10   0x6081             STR      R1,[R0, #+8]
     68            pInfo->EraseSubSectorSize     = MX25LM51245G_SUBSECTOR_4K;
   \       0x12   0xF44F 0x5180      MOV      R1,#+4096
   \       0x16   0x60C1             STR      R1,[R0, #+12]
     69            pInfo->EraseSubSectorNumber   = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
   \       0x18   0xF44F 0x4280      MOV      R2,#+16384
   \       0x1C   0x6102             STR      R2,[R0, #+16]
     70            pInfo->EraseSubSector1Size    = MX25LM51245G_SUBSECTOR_4K;
   \       0x1E   0x6141             STR      R1,[R0, #+20]
     71            pInfo->EraseSubSector1Number  = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_SUBSECTOR_4K);
   \       0x20   0x6182             STR      R2,[R0, #+24]
     72            pInfo->ProgPageSize           = MX25LM51245G_PAGE_SIZE;
   \       0x22   0xF44F 0x7180      MOV      R1,#+256
   \       0x26   0x61C1             STR      R1,[R0, #+28]
     73            pInfo->ProgPagesNumber        = (MX25LM51245G_FLASH_SIZE/MX25LM51245G_PAGE_SIZE);
   \       0x28   0xF45F 0x2180      MOVS     R1,#+262144
   \       0x2C   0x6201             STR      R1,[R0, #+32]
     74          
     75            return MX25LM51245G_OK;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x4770             BX       LR
     76          };
     77          
     78          /**
     79            * @brief  Polling WIP(Write In Progress) bit become to 0
     80            *         SPI/OPI;
     81            * @param  Ctx Component object pointer
     82            * @param  Mode Interface mode
     83            * @param  Rate Transfer rate
     84            * @retval error status
     85            */

   \                                 In section .text, align 2, keep-with-next
     86          int32_t MX25LM51245G_AutoPollingMemReady(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
     87          {
   \                     MX25LM51245G_AutoPollingMemReady: (+1)
   \        0x0   0xB578             PUSH     {R3-R6,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0xA805             ADD      R0,SP,#+20
   \       0x10   0x.... 0x....      BL       memset
   \       0x14   0x2214             MOVS     R2,#+20
   \       0x16   0x2100             MOVS     R1,#+0
   \       0x18   0x4668             MOV      R0,SP
   \       0x1A   0x.... 0x....      BL       memset
     88            OSPI_RegularCmdTypeDef  s_command = {0};
     89            OSPI_AutoPollingTypeDef s_config = {0};
     90          
     91            /* SPI mode and DTR transfer not supported by memory */
     92            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x1E   0x0028             MOVS     R0,R5
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD106             BNE.N    ??MX25LM51245G_AutoPollingMemReady_0
   \       0x26   0x0030             MOVS     R0,R6
   \       0x28   0xB2C0             UXTB     R0,R0
   \       0x2A   0x2801             CMP      R0,#+1
   \       0x2C   0xD102             BNE.N    ??MX25LM51245G_AutoPollingMemReady_0
     93            {
     94              return MX25LM51245G_ERROR;
   \       0x2E   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x32   0xE091             B.N      ??MX25LM51245G_AutoPollingMemReady_1
     95            }
     96          
     97            /* Configure automatic polling mode to wait for memory ready */
     98            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_AutoPollingMemReady_0: (+1)
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0x9005             STR      R0,[SP, #+20]
     99            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x9006             STR      R0,[SP, #+24]
    100            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x3C   0x0028             MOVS     R0,R5
   \       0x3E   0xB2C0             UXTB     R0,R0
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD101             BNE.N    ??MX25LM51245G_AutoPollingMemReady_2
   \       0x44   0x2001             MOVS     R0,#+1
   \       0x46   0xE000             B.N      ??MX25LM51245G_AutoPollingMemReady_3
   \                     ??MX25LM51245G_AutoPollingMemReady_2: (+1)
   \       0x48   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_AutoPollingMemReady_3: (+1)
   \       0x4A   0x9008             STR      R0,[SP, #+32]
    101            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x4C   0x0030             MOVS     R0,R6
   \       0x4E   0xB2C0             UXTB     R0,R0
   \       0x50   0x2801             CMP      R0,#+1
   \       0x52   0xD101             BNE.N    ??MX25LM51245G_AutoPollingMemReady_4
   \       0x54   0x2008             MOVS     R0,#+8
   \       0x56   0xE000             B.N      ??MX25LM51245G_AutoPollingMemReady_5
   \                     ??MX25LM51245G_AutoPollingMemReady_4: (+1)
   \       0x58   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_AutoPollingMemReady_5: (+1)
   \       0x5A   0x900A             STR      R0,[SP, #+40]
    102            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x5C   0x0028             MOVS     R0,R5
   \       0x5E   0xB2C0             UXTB     R0,R0
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD101             BNE.N    ??MX25LM51245G_AutoPollingMemReady_6
   \       0x64   0x2000             MOVS     R0,#+0
   \       0x66   0xE000             B.N      ??MX25LM51245G_AutoPollingMemReady_7
   \                     ??MX25LM51245G_AutoPollingMemReady_6: (+1)
   \       0x68   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_AutoPollingMemReady_7: (+1)
   \       0x6A   0x9009             STR      R0,[SP, #+36]
    103            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
   \       0x6C   0x0028             MOVS     R0,R5
   \       0x6E   0xB2C0             UXTB     R0,R0
   \       0x70   0x2800             CMP      R0,#+0
   \       0x72   0xD101             BNE.N    ??MX25LM51245G_AutoPollingMemReady_8
   \       0x74   0x2005             MOVS     R0,#+5
   \       0x76   0xE001             B.N      ??MX25LM51245G_AutoPollingMemReady_9
   \                     ??MX25LM51245G_AutoPollingMemReady_8: (+1)
   \       0x78   0xF240 0x50FA      MOVW     R0,#+1530
   \                     ??MX25LM51245G_AutoPollingMemReady_9: (+1)
   \       0x7C   0x9007             STR      R0,[SP, #+28]
    104            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x7E   0x0028             MOVS     R0,R5
   \       0x80   0xB2C0             UXTB     R0,R0
   \       0x82   0x2800             CMP      R0,#+0
   \       0x84   0xD101             BNE.N    ??MX25LM51245G_AutoPollingMemReady_10
   \       0x86   0x2000             MOVS     R0,#+0
   \       0x88   0xE001             B.N      ??MX25LM51245G_AutoPollingMemReady_11
   \                     ??MX25LM51245G_AutoPollingMemReady_10: (+1)
   \       0x8A   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_AutoPollingMemReady_11: (+1)
   \       0x8E   0x900C             STR      R0,[SP, #+48]
    105            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x90   0x0030             MOVS     R0,R6
   \       0x92   0xB2C0             UXTB     R0,R0
   \       0x94   0x2801             CMP      R0,#+1
   \       0x96   0xD102             BNE.N    ??MX25LM51245G_AutoPollingMemReady_12
   \       0x98   0xF44F 0x6000      MOV      R0,#+2048
   \       0x9C   0xE000             B.N      ??MX25LM51245G_AutoPollingMemReady_13
   \                     ??MX25LM51245G_AutoPollingMemReady_12: (+1)
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_AutoPollingMemReady_13: (+1)
   \       0xA0   0x900E             STR      R0,[SP, #+56]
    106            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0xA2   0xF44F 0x5040      MOV      R0,#+12288
   \       0xA6   0x900D             STR      R0,[SP, #+52]
    107            s_command.Address            = 0U;
   \       0xA8   0x2000             MOVS     R0,#+0
   \       0xAA   0x900B             STR      R0,[SP, #+44]
    108            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xAC   0x2000             MOVS     R0,#+0
   \       0xAE   0x9010             STR      R0,[SP, #+64]
    109            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xB0   0x0028             MOVS     R0,R5
   \       0xB2   0xB2C0             UXTB     R0,R0
   \       0xB4   0x2800             CMP      R0,#+0
   \       0xB6   0xD102             BNE.N    ??MX25LM51245G_AutoPollingMemReady_14
   \       0xB8   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xBC   0xE001             B.N      ??MX25LM51245G_AutoPollingMemReady_15
   \                     ??MX25LM51245G_AutoPollingMemReady_14: (+1)
   \       0xBE   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_AutoPollingMemReady_15: (+1)
   \       0xC2   0x9013             STR      R0,[SP, #+76]
    110            s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \       0xC4   0x0030             MOVS     R0,R6
   \       0xC6   0xB2C0             UXTB     R0,R0
   \       0xC8   0x2801             CMP      R0,#+1
   \       0xCA   0xD102             BNE.N    ??MX25LM51245G_AutoPollingMemReady_16
   \       0xCC   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0xD0   0xE000             B.N      ??MX25LM51245G_AutoPollingMemReady_17
   \                     ??MX25LM51245G_AutoPollingMemReady_16: (+1)
   \       0xD2   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_AutoPollingMemReady_17: (+1)
   \       0xD4   0x9015             STR      R0,[SP, #+84]
    111            s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
   \       0xD6   0xB2ED             UXTB     R5,R5
   \       0xD8   0x2D00             CMP      R5,#+0
   \       0xDA   0xD101             BNE.N    ??MX25LM51245G_AutoPollingMemReady_18
   \       0xDC   0x2000             MOVS     R0,#+0
   \       0xDE   0xE006             B.N      ??MX25LM51245G_AutoPollingMemReady_19
   \                     ??MX25LM51245G_AutoPollingMemReady_18: (+1)
   \       0xE0   0x0030             MOVS     R0,R6
   \       0xE2   0xB2C0             UXTB     R0,R0
   \       0xE4   0x2801             CMP      R0,#+1
   \       0xE6   0xD101             BNE.N    ??MX25LM51245G_AutoPollingMemReady_20
   \       0xE8   0x2005             MOVS     R0,#+5
   \       0xEA   0xE000             B.N      ??MX25LM51245G_AutoPollingMemReady_19
   \                     ??MX25LM51245G_AutoPollingMemReady_20: (+1)
   \       0xEC   0x2005             MOVS     R0,#+5
   \                     ??MX25LM51245G_AutoPollingMemReady_19: (+1)
   \       0xEE   0x9016             STR      R0,[SP, #+88]
    112            s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
   \       0xF0   0x0030             MOVS     R0,R6
   \       0xF2   0xB2C0             UXTB     R0,R0
   \       0xF4   0x2801             CMP      R0,#+1
   \       0xF6   0xD101             BNE.N    ??MX25LM51245G_AutoPollingMemReady_21
   \       0xF8   0x2002             MOVS     R0,#+2
   \       0xFA   0xE000             B.N      ??MX25LM51245G_AutoPollingMemReady_22
   \                     ??MX25LM51245G_AutoPollingMemReady_21: (+1)
   \       0xFC   0x2001             MOVS     R0,#+1
   \                     ??MX25LM51245G_AutoPollingMemReady_22: (+1)
   \       0xFE   0x9014             STR      R0,[SP, #+80]
    113            s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
   \      0x100   0xB2F6             UXTB     R6,R6
   \      0x102   0x2E01             CMP      R6,#+1
   \      0x104   0xD102             BNE.N    ??MX25LM51245G_AutoPollingMemReady_23
   \      0x106   0xF05F 0x5000      MOVS     R0,#+536870912
   \      0x10A   0xE000             B.N      ??MX25LM51245G_AutoPollingMemReady_24
   \                     ??MX25LM51245G_AutoPollingMemReady_23: (+1)
   \      0x10C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_AutoPollingMemReady_24: (+1)
   \      0x10E   0x9017             STR      R0,[SP, #+92]
    114            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \      0x110   0x2000             MOVS     R0,#+0
   \      0x112   0x9018             STR      R0,[SP, #+96]
    115          
    116            s_config.Match         = 0U;
   \      0x114   0x2000             MOVS     R0,#+0
   \      0x116   0x9000             STR      R0,[SP, #+0]
    117            s_config.Mask          = MX25LM51245G_SR_WIP;
   \      0x118   0x2001             MOVS     R0,#+1
   \      0x11A   0x9001             STR      R0,[SP, #+4]
    118            s_config.MatchMode     = HAL_OSPI_MATCH_MODE_AND;
   \      0x11C   0x2000             MOVS     R0,#+0
   \      0x11E   0x9002             STR      R0,[SP, #+8]
    119            s_config.Interval      = MX25LM51245G_AUTOPOLLING_INTERVAL_TIME;
   \      0x120   0x2010             MOVS     R0,#+16
   \      0x122   0x9004             STR      R0,[SP, #+16]
    120            s_config.AutomaticStop = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
   \      0x124   0xF45F 0x0080      MOVS     R0,#+4194304
   \      0x128   0x9003             STR      R0,[SP, #+12]
    121          
    122            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x12A   0xF241 0x3588      MOVW     R5,#+5000
   \      0x12E   0x002A             MOVS     R2,R5
   \      0x130   0xA905             ADD      R1,SP,#+20
   \      0x132   0x0020             MOVS     R0,R4
   \      0x134   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x138   0x2800             CMP      R0,#+0
   \      0x13A   0xD002             BEQ.N    ??MX25LM51245G_AutoPollingMemReady_25
    123            {
    124              return MX25LM51245G_ERROR;
   \      0x13C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x140   0xE00A             B.N      ??MX25LM51245G_AutoPollingMemReady_1
    125            }
    126          
    127            if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_AutoPollingMemReady_25: (+1)
   \      0x142   0x002A             MOVS     R2,R5
   \      0x144   0x4669             MOV      R1,SP
   \      0x146   0x0020             MOVS     R0,R4
   \      0x148   0x.... 0x....      BL       HAL_OSPI_AutoPolling
   \      0x14C   0x2800             CMP      R0,#+0
   \      0x14E   0xD002             BEQ.N    ??MX25LM51245G_AutoPollingMemReady_26
    128            {
    129              return MX25LM51245G_ERROR;
   \      0x150   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x154   0xE000             B.N      ??MX25LM51245G_AutoPollingMemReady_1
    130            }
    131          
    132            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_AutoPollingMemReady_26: (+1)
   \      0x156   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_AutoPollingMemReady_1: (+1)
   \      0x158   0xB01A             ADD      SP,SP,#+104
   \      0x15A   0xBD70             POP      {R4-R6,PC}
    133          }
    134          
    135          /* Read/Write Array Commands (3/4 Byte Address Command Set) *********************/
    136          /**
    137            * @brief  Reads an amount of data from the OSPI memory on STR mode.
    138            *         SPI/OPI; 1-1-1/8-8-8
    139            * @param  Ctx Component object pointer
    140            * @param  Mode Interface mode
    141            * @param  AddressSize Address size
    142            * @param  pData Pointer to data to be read
    143            * @param  ReadAddr Read start address
    144            * @param  Size Size of data to read
    145            * @retval OSPI memory status
    146            */

   \                                 In section .text, align 2, keep-with-next
    147          int32_t MX25LM51245G_ReadSTR(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_AddressSize_t AddressSize, uint8_t *pData, uint32_t ReadAddr, uint32_t Size)
    148          {
   \                     MX25LM51245G_ReadSTR: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
    149            OSPI_RegularCmdTypeDef s_command = {0};
    150          
    151            /* OPI mode and 3-bytes address size not supported by memory */
    152            if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2801             CMP      R0,#+1
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_ReadSTR_0
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_ReadSTR_0
    153            {
    154              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE06D             B.N      ??MX25LM51245G_ReadSTR_1
    155            }
    156          
    157            /* Initialize the read command */
    158            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_ReadSTR_0: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x9000             STR      R0,[SP, #+0]
    159            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x9001             STR      R0,[SP, #+4]
    160            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x34   0x0028             MOVS     R0,R5
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD101             BNE.N    ??MX25LM51245G_ReadSTR_2
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0xE000             B.N      ??MX25LM51245G_ReadSTR_3
   \                     ??MX25LM51245G_ReadSTR_2: (+1)
   \       0x40   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_ReadSTR_3: (+1)
   \       0x42   0x9003             STR      R0,[SP, #+12]
    161            s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x44   0x2000             MOVS     R0,#+0
   \       0x46   0x9005             STR      R0,[SP, #+20]
    162            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x48   0x0028             MOVS     R0,R5
   \       0x4A   0xB2C0             UXTB     R0,R0
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD101             BNE.N    ??MX25LM51245G_ReadSTR_4
   \       0x50   0x2000             MOVS     R0,#+0
   \       0x52   0xE000             B.N      ??MX25LM51245G_ReadSTR_5
   \                     ??MX25LM51245G_ReadSTR_4: (+1)
   \       0x54   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_ReadSTR_5: (+1)
   \       0x56   0x9004             STR      R0,[SP, #+16]
    163            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
   \       0x58   0x0028             MOVS     R0,R5
   \       0x5A   0xB2C0             UXTB     R0,R0
   \       0x5C   0x2800             CMP      R0,#+0
   \       0x5E   0xD107             BNE.N    ??MX25LM51245G_ReadSTR_6
   \       0x60   0x0030             MOVS     R0,R6
   \       0x62   0xB2C0             UXTB     R0,R0
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD101             BNE.N    ??MX25LM51245G_ReadSTR_7
   \       0x68   0x200B             MOVS     R0,#+11
   \       0x6A   0xE003             B.N      ??MX25LM51245G_ReadSTR_8
   \                     ??MX25LM51245G_ReadSTR_7: (+1)
   \       0x6C   0x200C             MOVS     R0,#+12
   \       0x6E   0xE001             B.N      ??MX25LM51245G_ReadSTR_8
   \                     ??MX25LM51245G_ReadSTR_6: (+1)
   \       0x70   0xF64E 0x4013      MOVW     R0,#+60435
   \                     ??MX25LM51245G_ReadSTR_8: (+1)
   \       0x74   0x9002             STR      R0,[SP, #+8]
    164            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0xB2C0             UXTB     R0,R0
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD102             BNE.N    ??MX25LM51245G_ReadSTR_9
   \       0x7E   0xF44F 0x7080      MOV      R0,#+256
   \       0x82   0xE001             B.N      ??MX25LM51245G_ReadSTR_10
   \                     ??MX25LM51245G_ReadSTR_9: (+1)
   \       0x84   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_ReadSTR_10: (+1)
   \       0x88   0x9007             STR      R0,[SP, #+28]
    165            s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x8A   0x2000             MOVS     R0,#+0
   \       0x8C   0x9009             STR      R0,[SP, #+36]
    166            s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
   \       0x8E   0xB2F6             UXTB     R6,R6
   \       0x90   0x2E00             CMP      R6,#+0
   \       0x92   0xD102             BNE.N    ??MX25LM51245G_ReadSTR_11
   \       0x94   0xF44F 0x5100      MOV      R1,#+8192
   \       0x98   0xE001             B.N      ??MX25LM51245G_ReadSTR_12
   \                     ??MX25LM51245G_ReadSTR_11: (+1)
   \       0x9A   0xF44F 0x5140      MOV      R1,#+12288
   \                     ??MX25LM51245G_ReadSTR_12: (+1)
   \       0x9E   0x981A             LDR      R0,[SP, #+104]
   \       0xA0   0x9108             STR      R1,[SP, #+32]
    167            s_command.Address            = ReadAddr;
   \       0xA2   0x9006             STR      R0,[SP, #+24]
    168            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x900B             STR      R0,[SP, #+44]
    169            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xA8   0x0028             MOVS     R0,R5
   \       0xAA   0xB2C0             UXTB     R0,R0
   \       0xAC   0x2800             CMP      R0,#+0
   \       0xAE   0xD102             BNE.N    ??MX25LM51245G_ReadSTR_13
   \       0xB0   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xB4   0xE001             B.N      ??MX25LM51245G_ReadSTR_14
   \                     ??MX25LM51245G_ReadSTR_13: (+1)
   \       0xB6   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_ReadSTR_14: (+1)
   \       0xBA   0x900E             STR      R0,[SP, #+56]
    170            s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
   \       0xBC   0x2000             MOVS     R0,#+0
   \       0xBE   0x9010             STR      R0,[SP, #+64]
    171            s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? DUMMY_CYCLES_READ : DUMMY_CYCLES_READ_OCTAL;
   \       0xC0   0xB2ED             UXTB     R5,R5
   \       0xC2   0x2D00             CMP      R5,#+0
   \       0xC4   0xD101             BNE.N    ??MX25LM51245G_ReadSTR_15
   \       0xC6   0x2108             MOVS     R1,#+8
   \       0xC8   0xE000             B.N      ??MX25LM51245G_ReadSTR_16
   \                     ??MX25LM51245G_ReadSTR_15: (+1)
   \       0xCA   0x2106             MOVS     R1,#+6
   \                     ??MX25LM51245G_ReadSTR_16: (+1)
   \       0xCC   0x981B             LDR      R0,[SP, #+108]
   \       0xCE   0x9111             STR      R1,[SP, #+68]
    172            s_command.NbData             = Size;
   \       0xD0   0x900F             STR      R0,[SP, #+60]
    173            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0xD2   0x2000             MOVS     R0,#+0
   \       0xD4   0x9012             STR      R0,[SP, #+72]
    174            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0xD6   0x2000             MOVS     R0,#+0
   \       0xD8   0x9013             STR      R0,[SP, #+76]
    175          
    176            /* Send the command */
    177            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0xDA   0xF241 0x3588      MOVW     R5,#+5000
   \       0xDE   0x002A             MOVS     R2,R5
   \       0xE0   0x4669             MOV      R1,SP
   \       0xE2   0x0020             MOVS     R0,R4
   \       0xE4   0x.... 0x....      BL       HAL_OSPI_Command
   \       0xE8   0x2800             CMP      R0,#+0
   \       0xEA   0xD002             BEQ.N    ??MX25LM51245G_ReadSTR_17
    178            {
    179              return MX25LM51245G_ERROR;
   \       0xEC   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0xF0   0xE00A             B.N      ??MX25LM51245G_ReadSTR_1
    180            }
    181          
    182            /* Reception of the data */
    183            if (HAL_OSPI_Receive(Ctx, pData, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_ReadSTR_17: (+1)
   \       0xF2   0x002A             MOVS     R2,R5
   \       0xF4   0x0039             MOVS     R1,R7
   \       0xF6   0x0020             MOVS     R0,R4
   \       0xF8   0x.... 0x....      BL       HAL_OSPI_Receive
   \       0xFC   0x2800             CMP      R0,#+0
   \       0xFE   0xD002             BEQ.N    ??MX25LM51245G_ReadSTR_18
    184            {
    185              return MX25LM51245G_ERROR;
   \      0x100   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x104   0xE000             B.N      ??MX25LM51245G_ReadSTR_1
    186            }
    187          
    188            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ReadSTR_18: (+1)
   \      0x106   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadSTR_1: (+1)
   \      0x108   0xB015             ADD      SP,SP,#+84
   \      0x10A   0xBDF0             POP      {R4-R7,PC}
    189          }
    190          
    191          /**
    192            * @brief  Reads an amount of data from the OSPI memory on DTR mode.
    193            *         OPI
    194            * @param  Ctx Component object pointer
    195            * @param  AddressSize Address size
    196            * @param  pData Pointer to data to be read
    197            * @param  ReadAddr Read start addressS
    198            * @param  Size Size of data to read
    199            * @note   Only OPI mode support DTR transfer rate
    200            * @retval OSPI memory status
    201            */

   \                                 In section .text, align 2, keep-with-next
    202          int32_t MX25LM51245G_ReadDTR(OSPI_HandleTypeDef *Ctx, uint8_t *pData, uint32_t ReadAddr, uint32_t Size)
    203          {
   \                     MX25LM51245G_ReadDTR: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
    204            OSPI_RegularCmdTypeDef s_command = {0};
    205          
    206            /* Initialize the read command */
    207            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0x9000             STR      R0,[SP, #+0]
    208            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x9001             STR      R0,[SP, #+4]
    209            s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x1E   0x2004             MOVS     R0,#+4
   \       0x20   0x9003             STR      R0,[SP, #+12]
    210            s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_ENABLE;
   \       0x22   0x2008             MOVS     R0,#+8
   \       0x24   0x9005             STR      R0,[SP, #+20]
    211            s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x26   0x2010             MOVS     R0,#+16
   \       0x28   0x9004             STR      R0,[SP, #+16]
    212            s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
   \       0x2A   0xF64E 0x6011      MOVW     R0,#+60945
   \       0x2E   0x9002             STR      R0,[SP, #+8]
    213            s_command.AddressMode        = HAL_OSPI_ADDRESS_8_LINES;
   \       0x30   0xF44F 0x6080      MOV      R0,#+1024
   \       0x34   0x9007             STR      R0,[SP, #+28]
    214            s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_ENABLE;
   \       0x36   0xF44F 0x6000      MOV      R0,#+2048
   \       0x3A   0x9009             STR      R0,[SP, #+36]
    215            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0x3C   0xF44F 0x5040      MOV      R0,#+12288
   \       0x40   0x9008             STR      R0,[SP, #+32]
    216            s_command.Address            = ReadAddr;
   \       0x42   0x9606             STR      R6,[SP, #+24]
    217            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x44   0x2000             MOVS     R0,#+0
   \       0x46   0x900B             STR      R0,[SP, #+44]
    218            s_command.DataMode           = HAL_OSPI_DATA_8_LINES;
   \       0x48   0xF05F 0x6080      MOVS     R0,#+67108864
   \       0x4C   0x900E             STR      R0,[SP, #+56]
    219            s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_ENABLE;
   \       0x4E   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0x52   0x9010             STR      R0,[SP, #+64]
    220            s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
   \       0x54   0x2006             MOVS     R0,#+6
   \       0x56   0x9011             STR      R0,[SP, #+68]
    221            s_command.NbData             = Size;
   \       0x58   0x970F             STR      R7,[SP, #+60]
    222            s_command.DQSMode            = HAL_OSPI_DQS_ENABLE;
   \       0x5A   0xF05F 0x5000      MOVS     R0,#+536870912
   \       0x5E   0x9012             STR      R0,[SP, #+72]
    223            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x60   0x2000             MOVS     R0,#+0
   \       0x62   0x9013             STR      R0,[SP, #+76]
    224          
    225            /* Send the command */
    226            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x64   0xF241 0x3688      MOVW     R6,#+5000
   \       0x68   0x0032             MOVS     R2,R6
   \       0x6A   0x4669             MOV      R1,SP
   \       0x6C   0x0020             MOVS     R0,R4
   \       0x6E   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD002             BEQ.N    ??MX25LM51245G_ReadDTR_0
    227            {
    228              return MX25LM51245G_ERROR;
   \       0x76   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x7A   0xE00A             B.N      ??MX25LM51245G_ReadDTR_1
    229            }
    230          
    231            /* Reception of the data */
    232            if (HAL_OSPI_Receive(Ctx, pData, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_ReadDTR_0: (+1)
   \       0x7C   0x0032             MOVS     R2,R6
   \       0x7E   0x0029             MOVS     R1,R5
   \       0x80   0x0020             MOVS     R0,R4
   \       0x82   0x.... 0x....      BL       HAL_OSPI_Receive
   \       0x86   0x2800             CMP      R0,#+0
   \       0x88   0xD002             BEQ.N    ??MX25LM51245G_ReadDTR_2
    233            {
    234              return MX25LM51245G_ERROR;
   \       0x8A   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x8E   0xE000             B.N      ??MX25LM51245G_ReadDTR_1
    235            }
    236          
    237            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ReadDTR_2: (+1)
   \       0x90   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadDTR_1: (+1)
   \       0x92   0xB015             ADD      SP,SP,#+84
   \       0x94   0xBDF0             POP      {R4-R7,PC}
    238          }
    239          
    240          /**
    241            * @brief  Writes an amount of data to the OSPI memory.
    242            *         SPI/OPI
    243            * @param  Ctx Component object pointer
    244            * @param  Mode Interface mode
    245            * @param  AddressSize Address size
    246            * @param  pData Pointer to data to be written
    247            * @param  WriteAddr Write start address
    248            * @param  Size Size of data to write. Range 1 ~ MX25LM51245G_PAGE_SIZE
    249            * @note   Address size is forced to 3 Bytes when the 4 Bytes address size
    250            *         command is not available for the specified interface mode
    251            * @retval OSPI memory status
    252            */

   \                                 In section .text, align 2, keep-with-next
    253          int32_t MX25LM51245G_PageProgram(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_AddressSize_t AddressSize, uint8_t *pData, uint32_t WriteAddr, uint32_t Size)
    254          {
   \                     MX25LM51245G_PageProgram: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
    255            OSPI_RegularCmdTypeDef s_command = {0};
    256          
    257            /* OPI mode and 3-bytes address size not supported by memory */
    258            if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2801             CMP      R0,#+1
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_PageProgram_0
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_PageProgram_0
    259            {
    260              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE067             B.N      ??MX25LM51245G_PageProgram_1
    261            }
    262          
    263            /* Initialize the program command */
    264            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_PageProgram_0: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x9000             STR      R0,[SP, #+0]
    265            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x9001             STR      R0,[SP, #+4]
    266            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x34   0x0028             MOVS     R0,R5
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD101             BNE.N    ??MX25LM51245G_PageProgram_2
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0xE000             B.N      ??MX25LM51245G_PageProgram_3
   \                     ??MX25LM51245G_PageProgram_2: (+1)
   \       0x40   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_PageProgram_3: (+1)
   \       0x42   0x9003             STR      R0,[SP, #+12]
    267            s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x44   0x2000             MOVS     R0,#+0
   \       0x46   0x9005             STR      R0,[SP, #+20]
    268            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x48   0x0028             MOVS     R0,R5
   \       0x4A   0xB2C0             UXTB     R0,R0
   \       0x4C   0x2800             CMP      R0,#+0
   \       0x4E   0xD101             BNE.N    ??MX25LM51245G_PageProgram_4
   \       0x50   0x2000             MOVS     R0,#+0
   \       0x52   0xE000             B.N      ??MX25LM51245G_PageProgram_5
   \                     ??MX25LM51245G_PageProgram_4: (+1)
   \       0x54   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_PageProgram_5: (+1)
   \       0x56   0x9004             STR      R0,[SP, #+16]
    269            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_PAGE_PROG_CMD : MX25LM51245G_4_BYTE_PAGE_PROG_CMD) : MX25LM51245G_OCTA_PAGE_PROG_CMD;
   \       0x58   0x0028             MOVS     R0,R5
   \       0x5A   0xB2C0             UXTB     R0,R0
   \       0x5C   0x2800             CMP      R0,#+0
   \       0x5E   0xD107             BNE.N    ??MX25LM51245G_PageProgram_6
   \       0x60   0x0030             MOVS     R0,R6
   \       0x62   0xB2C0             UXTB     R0,R0
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD101             BNE.N    ??MX25LM51245G_PageProgram_7
   \       0x68   0x2002             MOVS     R0,#+2
   \       0x6A   0xE003             B.N      ??MX25LM51245G_PageProgram_8
   \                     ??MX25LM51245G_PageProgram_7: (+1)
   \       0x6C   0x2012             MOVS     R0,#+18
   \       0x6E   0xE001             B.N      ??MX25LM51245G_PageProgram_8
   \                     ??MX25LM51245G_PageProgram_6: (+1)
   \       0x70   0xF241 0x20ED      MOVW     R0,#+4845
   \                     ??MX25LM51245G_PageProgram_8: (+1)
   \       0x74   0x9002             STR      R0,[SP, #+8]
    270            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0xB2C0             UXTB     R0,R0
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD102             BNE.N    ??MX25LM51245G_PageProgram_9
   \       0x7E   0xF44F 0x7080      MOV      R0,#+256
   \       0x82   0xE001             B.N      ??MX25LM51245G_PageProgram_10
   \                     ??MX25LM51245G_PageProgram_9: (+1)
   \       0x84   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_PageProgram_10: (+1)
   \       0x88   0x9007             STR      R0,[SP, #+28]
    271            s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x8A   0x2000             MOVS     R0,#+0
   \       0x8C   0x9009             STR      R0,[SP, #+36]
    272            s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
   \       0x8E   0xB2F6             UXTB     R6,R6
   \       0x90   0x2E00             CMP      R6,#+0
   \       0x92   0xD102             BNE.N    ??MX25LM51245G_PageProgram_11
   \       0x94   0xF44F 0x5100      MOV      R1,#+8192
   \       0x98   0xE001             B.N      ??MX25LM51245G_PageProgram_12
   \                     ??MX25LM51245G_PageProgram_11: (+1)
   \       0x9A   0xF44F 0x5140      MOV      R1,#+12288
   \                     ??MX25LM51245G_PageProgram_12: (+1)
   \       0x9E   0x981A             LDR      R0,[SP, #+104]
   \       0xA0   0x9108             STR      R1,[SP, #+32]
    273            s_command.Address            = WriteAddr;
   \       0xA2   0x9006             STR      R0,[SP, #+24]
    274            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x900B             STR      R0,[SP, #+44]
    275            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xA8   0xB2ED             UXTB     R5,R5
   \       0xAA   0x2D00             CMP      R5,#+0
   \       0xAC   0xD102             BNE.N    ??MX25LM51245G_PageProgram_13
   \       0xAE   0xF05F 0x7180      MOVS     R1,#+16777216
   \       0xB2   0xE001             B.N      ??MX25LM51245G_PageProgram_14
   \                     ??MX25LM51245G_PageProgram_13: (+1)
   \       0xB4   0xF05F 0x6180      MOVS     R1,#+67108864
   \                     ??MX25LM51245G_PageProgram_14: (+1)
   \       0xB8   0x981B             LDR      R0,[SP, #+108]
   \       0xBA   0x910E             STR      R1,[SP, #+56]
    276            s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
   \       0xBC   0x2100             MOVS     R1,#+0
   \       0xBE   0x9110             STR      R1,[SP, #+64]
    277            s_command.DummyCycles        = 0U;
   \       0xC0   0x2100             MOVS     R1,#+0
   \       0xC2   0x9111             STR      R1,[SP, #+68]
    278            s_command.NbData             = Size;
   \       0xC4   0x900F             STR      R0,[SP, #+60]
    279            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0xC6   0x2000             MOVS     R0,#+0
   \       0xC8   0x9012             STR      R0,[SP, #+72]
    280            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0xCA   0x2000             MOVS     R0,#+0
   \       0xCC   0x9013             STR      R0,[SP, #+76]
    281          
    282            /* Configure the command */
    283            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0xCE   0xF241 0x3588      MOVW     R5,#+5000
   \       0xD2   0x002A             MOVS     R2,R5
   \       0xD4   0x4669             MOV      R1,SP
   \       0xD6   0x0020             MOVS     R0,R4
   \       0xD8   0x.... 0x....      BL       HAL_OSPI_Command
   \       0xDC   0x2800             CMP      R0,#+0
   \       0xDE   0xD002             BEQ.N    ??MX25LM51245G_PageProgram_15
    284            {
    285              return MX25LM51245G_ERROR;
   \       0xE0   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0xE4   0xE00A             B.N      ??MX25LM51245G_PageProgram_1
    286            }
    287          
    288            /* Transmission of the data */
    289            if (HAL_OSPI_Transmit(Ctx, pData, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_PageProgram_15: (+1)
   \       0xE6   0x002A             MOVS     R2,R5
   \       0xE8   0x0039             MOVS     R1,R7
   \       0xEA   0x0020             MOVS     R0,R4
   \       0xEC   0x.... 0x....      BL       HAL_OSPI_Transmit
   \       0xF0   0x2800             CMP      R0,#+0
   \       0xF2   0xD002             BEQ.N    ??MX25LM51245G_PageProgram_16
    290            {
    291              return MX25LM51245G_ERROR;
   \       0xF4   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0xF8   0xE000             B.N      ??MX25LM51245G_PageProgram_1
    292            }
    293          
    294            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_PageProgram_16: (+1)
   \       0xFA   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_PageProgram_1: (+1)
   \       0xFC   0xB015             ADD      SP,SP,#+84
   \       0xFE   0xBDF0             POP      {R4-R7,PC}
    295          }
    296          
    297          /**
    298            * @brief  Writes an amount of data to the OSPI memory on DTR mode.
    299            *         SPI/OPI
    300            * @param  Ctx Component object pointer
    301            * @param  pData Pointer to data to be written
    302            * @param  WriteAddr Write start address
    303            * @param  Size Size of data to write. Range 1 ~ MX25LM51245G_PAGE_SIZE
    304            * @note   Only OPI mode support DTR transfer rate
    305            * @retval OSPI memory status
    306            */

   \                                 In section .text, align 2, keep-with-next
    307          int32_t MX25LM51245G_PageProgramDTR(OSPI_HandleTypeDef *Ctx, uint8_t *pData, uint32_t WriteAddr, uint32_t Size)
    308          {
   \                     MX25LM51245G_PageProgramDTR: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
    309            OSPI_RegularCmdTypeDef s_command = {0};
    310          
    311            /* Initialize the program command */
    312            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0x9000             STR      R0,[SP, #+0]
    313            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x9001             STR      R0,[SP, #+4]
    314            s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x1E   0x2004             MOVS     R0,#+4
   \       0x20   0x9003             STR      R0,[SP, #+12]
    315            s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_ENABLE;
   \       0x22   0x2008             MOVS     R0,#+8
   \       0x24   0x9005             STR      R0,[SP, #+20]
    316            s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x26   0x2010             MOVS     R0,#+16
   \       0x28   0x9004             STR      R0,[SP, #+16]
    317            s_command.Instruction        = MX25LM51245G_OCTA_PAGE_PROG_CMD;
   \       0x2A   0xF241 0x20ED      MOVW     R0,#+4845
   \       0x2E   0x9002             STR      R0,[SP, #+8]
    318            s_command.AddressMode        = HAL_OSPI_ADDRESS_8_LINES;
   \       0x30   0xF44F 0x6080      MOV      R0,#+1024
   \       0x34   0x9007             STR      R0,[SP, #+28]
    319            s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_ENABLE;
   \       0x36   0xF44F 0x6000      MOV      R0,#+2048
   \       0x3A   0x9009             STR      R0,[SP, #+36]
    320            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0x3C   0xF44F 0x5040      MOV      R0,#+12288
   \       0x40   0x9008             STR      R0,[SP, #+32]
    321            s_command.Address            = WriteAddr;
   \       0x42   0x9606             STR      R6,[SP, #+24]
    322            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x44   0x2000             MOVS     R0,#+0
   \       0x46   0x900B             STR      R0,[SP, #+44]
    323            s_command.DataMode           = HAL_OSPI_DATA_8_LINES;
   \       0x48   0xF05F 0x6080      MOVS     R0,#+67108864
   \       0x4C   0x900E             STR      R0,[SP, #+56]
    324            s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_ENABLE;
   \       0x4E   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0x52   0x9010             STR      R0,[SP, #+64]
    325            s_command.DummyCycles        = 0U;
   \       0x54   0x2000             MOVS     R0,#+0
   \       0x56   0x9011             STR      R0,[SP, #+68]
    326            s_command.NbData             = Size;
   \       0x58   0x970F             STR      R7,[SP, #+60]
    327            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x5A   0x2000             MOVS     R0,#+0
   \       0x5C   0x9012             STR      R0,[SP, #+72]
    328            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x5E   0x2000             MOVS     R0,#+0
   \       0x60   0x9013             STR      R0,[SP, #+76]
    329          
    330            /* Configure the command */
    331            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x62   0xF241 0x3688      MOVW     R6,#+5000
   \       0x66   0x0032             MOVS     R2,R6
   \       0x68   0x4669             MOV      R1,SP
   \       0x6A   0x0020             MOVS     R0,R4
   \       0x6C   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x70   0x2800             CMP      R0,#+0
   \       0x72   0xD002             BEQ.N    ??MX25LM51245G_PageProgramDTR_0
    332            {
    333              return MX25LM51245G_ERROR;
   \       0x74   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x78   0xE00A             B.N      ??MX25LM51245G_PageProgramDTR_1
    334            }
    335          
    336            /* Transmission of the data */
    337            if (HAL_OSPI_Transmit(Ctx, pData, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_PageProgramDTR_0: (+1)
   \       0x7A   0x0032             MOVS     R2,R6
   \       0x7C   0x0029             MOVS     R1,R5
   \       0x7E   0x0020             MOVS     R0,R4
   \       0x80   0x.... 0x....      BL       HAL_OSPI_Transmit
   \       0x84   0x2800             CMP      R0,#+0
   \       0x86   0xD002             BEQ.N    ??MX25LM51245G_PageProgramDTR_2
    338            {
    339              return MX25LM51245G_ERROR;
   \       0x88   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x8C   0xE000             B.N      ??MX25LM51245G_PageProgramDTR_1
    340            }
    341          
    342            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_PageProgramDTR_2: (+1)
   \       0x8E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_PageProgramDTR_1: (+1)
   \       0x90   0xB015             ADD      SP,SP,#+84
   \       0x92   0xBDF0             POP      {R4-R7,PC}
    343          }
    344          
    345          /**
    346            * @brief  Erases the specified block of the OSPI memory.
    347            *         MX25LM51245G support 4K, 64K size block erase commands.
    348            *         SPI/OPI; 1-1-1/8-8-8
    349            * @param  Ctx Component object pointer
    350            * @param  Mode Interface mode
    351            * @param  AddressSize Address size
    352            * @param  BlockAddress Block address to erase
    353            * @param  BlockSize Block size to erase
    354            * @retval OSPI memory status
    355            */

   \                                 In section .text, align 2, keep-with-next
    356          int32_t MX25LM51245G_BlockErase(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, MX25LM51245G_AddressSize_t AddressSize, uint32_t BlockAddress, MX25LM51245G_Erase_t BlockSize)
    357          {
   \                     MX25LM51245G_BlockErase: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
    358            OSPI_RegularCmdTypeDef s_command = {0};
    359          
    360            /* SPI mode and DTR transfer not supported by memory */
    361            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_BlockErase_0
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_BlockErase_0
    362            {
    363              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE07B             B.N      ??MX25LM51245G_BlockErase_1
    364            }
    365          
    366            /* OPI mode and 3-bytes address size not supported by memory */
    367            if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
   \                     ??MX25LM51245G_BlockErase_0: (+1)
   \       0x2C   0x0028             MOVS     R0,R5
   \       0x2E   0xB2C0             UXTB     R0,R0
   \       0x30   0x2801             CMP      R0,#+1
   \       0x32   0xD106             BNE.N    ??MX25LM51245G_BlockErase_2
   \       0x34   0x0038             MOVS     R0,R7
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD102             BNE.N    ??MX25LM51245G_BlockErase_2
    368            {
    369              return MX25LM51245G_ERROR;
   \       0x3C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x40   0xE070             B.N      ??MX25LM51245G_BlockErase_1
    370            }
    371          
    372            /* Initialize the erase command */
    373            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_BlockErase_2: (+1)
   \       0x42   0x2000             MOVS     R0,#+0
   \       0x44   0x9000             STR      R0,[SP, #+0]
    374            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x46   0x2000             MOVS     R0,#+0
   \       0x48   0x9001             STR      R0,[SP, #+4]
    375            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x4A   0x0028             MOVS     R0,R5
   \       0x4C   0xB2C0             UXTB     R0,R0
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD101             BNE.N    ??MX25LM51245G_BlockErase_3
   \       0x52   0x2001             MOVS     R0,#+1
   \       0x54   0xE000             B.N      ??MX25LM51245G_BlockErase_4
   \                     ??MX25LM51245G_BlockErase_3: (+1)
   \       0x56   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_BlockErase_4: (+1)
   \       0x58   0x9003             STR      R0,[SP, #+12]
    376            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x5A   0x0030             MOVS     R0,R6
   \       0x5C   0xB2C0             UXTB     R0,R0
   \       0x5E   0x2801             CMP      R0,#+1
   \       0x60   0xD101             BNE.N    ??MX25LM51245G_BlockErase_5
   \       0x62   0x2008             MOVS     R0,#+8
   \       0x64   0xE000             B.N      ??MX25LM51245G_BlockErase_6
   \                     ??MX25LM51245G_BlockErase_5: (+1)
   \       0x66   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_BlockErase_6: (+1)
   \       0x68   0x9005             STR      R0,[SP, #+20]
    377            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x6A   0x0028             MOVS     R0,R5
   \       0x6C   0xB2C0             UXTB     R0,R0
   \       0x6E   0x2800             CMP      R0,#+0
   \       0x70   0xD101             BNE.N    ??MX25LM51245G_BlockErase_7
   \       0x72   0x2000             MOVS     R0,#+0
   \       0x74   0xE000             B.N      ??MX25LM51245G_BlockErase_8
   \                     ??MX25LM51245G_BlockErase_7: (+1)
   \       0x76   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_BlockErase_8: (+1)
   \       0x78   0x9004             STR      R0,[SP, #+16]
    378            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x7A   0x0028             MOVS     R0,R5
   \       0x7C   0xB2C0             UXTB     R0,R0
   \       0x7E   0x2800             CMP      R0,#+0
   \       0x80   0xD102             BNE.N    ??MX25LM51245G_BlockErase_9
   \       0x82   0xF44F 0x7080      MOV      R0,#+256
   \       0x86   0xE001             B.N      ??MX25LM51245G_BlockErase_10
   \                     ??MX25LM51245G_BlockErase_9: (+1)
   \       0x88   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_BlockErase_10: (+1)
   \       0x8C   0x9007             STR      R0,[SP, #+28]
    379            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x8E   0xB2F6             UXTB     R6,R6
   \       0x90   0x2E01             CMP      R6,#+1
   \       0x92   0xD102             BNE.N    ??MX25LM51245G_BlockErase_11
   \       0x94   0xF44F 0x6000      MOV      R0,#+2048
   \       0x98   0xE000             B.N      ??MX25LM51245G_BlockErase_12
   \                     ??MX25LM51245G_BlockErase_11: (+1)
   \       0x9A   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_BlockErase_12: (+1)
   \       0x9C   0x9009             STR      R0,[SP, #+36]
    380            s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
   \       0x9E   0x0038             MOVS     R0,R7
   \       0xA0   0xB2C0             UXTB     R0,R0
   \       0xA2   0x2800             CMP      R0,#+0
   \       0xA4   0xD102             BNE.N    ??MX25LM51245G_BlockErase_13
   \       0xA6   0xF44F 0x5100      MOV      R1,#+8192
   \       0xAA   0xE001             B.N      ??MX25LM51245G_BlockErase_14
   \                     ??MX25LM51245G_BlockErase_13: (+1)
   \       0xAC   0xF44F 0x5140      MOV      R1,#+12288
   \                     ??MX25LM51245G_BlockErase_14: (+1)
   \       0xB0   0x981A             LDR      R0,[SP, #+104]
   \       0xB2   0x9108             STR      R1,[SP, #+32]
    381            s_command.Address            = BlockAddress;
   \       0xB4   0x9006             STR      R0,[SP, #+24]
    382            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xB6   0x2000             MOVS     R0,#+0
   \       0xB8   0x900B             STR      R0,[SP, #+44]
    383            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0xBA   0x2000             MOVS     R0,#+0
   \       0xBC   0x900E             STR      R0,[SP, #+56]
    384            s_command.DummyCycles        = 0U;
   \       0xBE   0x2000             MOVS     R0,#+0
   \       0xC0   0x9011             STR      R0,[SP, #+68]
    385            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0xC2   0x2000             MOVS     R0,#+0
   \       0xC4   0x9012             STR      R0,[SP, #+72]
    386            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0xC6   0x2000             MOVS     R0,#+0
   \       0xC8   0x9013             STR      R0,[SP, #+76]
   \       0xCA   0x981B             LDR      R0,[SP, #+108]
    387          
    388            switch(Mode)
   \       0xCC   0xB2ED             UXTB     R5,R5
   \       0xCE   0x2D01             CMP      R5,#+1
   \       0xD0   0xD10A             BNE.N    ??MX25LM51245G_BlockErase_15
    389            {
    390            case MX25LM51245G_OPI_MODE :
    391              if(BlockSize == MX25LM51245G_ERASE_64K)
   \       0xD2   0xB2C0             UXTB     R0,R0
   \       0xD4   0x2801             CMP      R0,#+1
   \       0xD6   0xD103             BNE.N    ??MX25LM51245G_BlockErase_16
    392              {
    393                s_command.Instruction = MX25LM51245G_OCTA_SECTOR_ERASE_64K_CMD;
   \       0xD8   0xF64D 0x4023      MOVW     R0,#+56355
   \       0xDC   0x9002             STR      R0,[SP, #+8]
   \       0xDE   0xE002             B.N      ??MX25LM51245G_BlockErase_17
    394              }
    395              else
    396              {
    397                s_command.Instruction = MX25LM51245G_OCTA_SUBSECTOR_ERASE_4K_CMD;
   \                     ??MX25LM51245G_BlockErase_16: (+1)
   \       0xE0   0xF242 0x10DE      MOVW     R0,#+8670
   \       0xE4   0x9002             STR      R0,[SP, #+8]
    398              }
    399              break;
   \                     ??MX25LM51245G_BlockErase_17: (+1)
   \       0xE6   0xE011             B.N      ??MX25LM51245G_BlockErase_18
    400          
    401            case MX25LM51245G_SPI_MODE :
    402            default:
    403              if(BlockSize == MX25LM51245G_ERASE_64K)
   \                     ??MX25LM51245G_BlockErase_15: (+1)
   \       0xE8   0xB2C0             UXTB     R0,R0
   \       0xEA   0x2801             CMP      R0,#+1
   \       0xEC   0xD107             BNE.N    ??MX25LM51245G_BlockErase_19
    404              {
    405                s_command.Instruction = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_SECTOR_ERASE_64K_CMD : MX25LM51245G_4_BYTE_SECTOR_ERASE_64K_CMD;
   \       0xEE   0xB2FF             UXTB     R7,R7
   \       0xF0   0x2F00             CMP      R7,#+0
   \       0xF2   0xD101             BNE.N    ??MX25LM51245G_BlockErase_20
   \       0xF4   0x20D8             MOVS     R0,#+216
   \       0xF6   0xE000             B.N      ??MX25LM51245G_BlockErase_21
   \                     ??MX25LM51245G_BlockErase_20: (+1)
   \       0xF8   0x20DC             MOVS     R0,#+220
   \                     ??MX25LM51245G_BlockErase_21: (+1)
   \       0xFA   0x9002             STR      R0,[SP, #+8]
   \       0xFC   0xE006             B.N      ??MX25LM51245G_BlockErase_22
    406              }
    407              else
    408              {
    409                s_command.Instruction = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_SUBSECTOR_ERASE_4K_CMD : MX25LM51245G_4_BYTE_SUBSECTOR_ERASE_4K_CMD;
   \                     ??MX25LM51245G_BlockErase_19: (+1)
   \       0xFE   0xB2FF             UXTB     R7,R7
   \      0x100   0x2F00             CMP      R7,#+0
   \      0x102   0xD101             BNE.N    ??MX25LM51245G_BlockErase_23
   \      0x104   0x2020             MOVS     R0,#+32
   \      0x106   0xE000             B.N      ??MX25LM51245G_BlockErase_24
   \                     ??MX25LM51245G_BlockErase_23: (+1)
   \      0x108   0x2021             MOVS     R0,#+33
   \                     ??MX25LM51245G_BlockErase_24: (+1)
   \      0x10A   0x9002             STR      R0,[SP, #+8]
    410              }
    411              break;
    412            }
    413          
    414            /* Send the command */
    415            if(HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_BlockErase_22: (+1)
   \                     ??MX25LM51245G_BlockErase_18: (+1)
   \      0x10C   0xF241 0x3288      MOVW     R2,#+5000
   \      0x110   0x4669             MOV      R1,SP
   \      0x112   0x0020             MOVS     R0,R4
   \      0x114   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x118   0x2800             CMP      R0,#+0
   \      0x11A   0xD002             BEQ.N    ??MX25LM51245G_BlockErase_25
    416            {
    417              return MX25LM51245G_ERROR;
   \      0x11C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x120   0xE000             B.N      ??MX25LM51245G_BlockErase_1
    418            }
    419          
    420            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_BlockErase_25: (+1)
   \      0x122   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_BlockErase_1: (+1)
   \      0x124   0xB015             ADD      SP,SP,#+84
   \      0x126   0xBDF0             POP      {R4-R7,PC}
    421          }
    422          
    423          /**
    424            * @brief  Whole chip erase.
    425            *         SPI/OPI; 1-0-0/8-0-0
    426            * @param  Ctx Component object pointer
    427            * @param  Mode Interface mode
    428            * @retval error status
    429            */

   \                                 In section .text, align 2, keep-with-next
    430          int32_t MX25LM51245G_ChipErase(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
    431          {
   \                     MX25LM51245G_ChipErase: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       memset
    432            OSPI_RegularCmdTypeDef s_command = {0};
    433          
    434            /* SPI mode and DTR transfer not supported by memory */
    435            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??MX25LM51245G_ChipErase_0
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD102             BNE.N    ??MX25LM51245G_ChipErase_0
    436            {
    437              return MX25LM51245G_ERROR;
   \       0x24   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x28   0xE03A             B.N      ??MX25LM51245G_ChipErase_1
    438            }
    439          
    440            /* Initialize the erase command */
    441            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_ChipErase_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
    442            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x9001             STR      R0,[SP, #+4]
    443            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??MX25LM51245G_ChipErase_2
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xE000             B.N      ??MX25LM51245G_ChipErase_3
   \                     ??MX25LM51245G_ChipErase_2: (+1)
   \       0x3E   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_ChipErase_3: (+1)
   \       0x40   0x9003             STR      R0,[SP, #+12]
    444            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x2E01             CMP      R6,#+1
   \       0x46   0xD101             BNE.N    ??MX25LM51245G_ChipErase_4
   \       0x48   0x2008             MOVS     R0,#+8
   \       0x4A   0xE000             B.N      ??MX25LM51245G_ChipErase_5
   \                     ??MX25LM51245G_ChipErase_4: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ChipErase_5: (+1)
   \       0x4E   0x9005             STR      R0,[SP, #+20]
    445            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_ChipErase_6
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_ChipErase_7
   \                     ??MX25LM51245G_ChipErase_6: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_ChipErase_7: (+1)
   \       0x5E   0x9004             STR      R0,[SP, #+16]
    446            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_BULK_ERASE_CMD : MX25LM51245G_OCTA_BULK_ERASE_CMD;
   \       0x60   0xB2ED             UXTB     R5,R5
   \       0x62   0x2D00             CMP      R5,#+0
   \       0x64   0xD101             BNE.N    ??MX25LM51245G_ChipErase_8
   \       0x66   0x2060             MOVS     R0,#+96
   \       0x68   0xE001             B.N      ??MX25LM51245G_ChipErase_9
   \                     ??MX25LM51245G_ChipErase_8: (+1)
   \       0x6A   0xF246 0x009F      MOVW     R0,#+24735
   \                     ??MX25LM51245G_ChipErase_9: (+1)
   \       0x6E   0x9002             STR      R0,[SP, #+8]
    447            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0x9007             STR      R0,[SP, #+28]
    448            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x900B             STR      R0,[SP, #+44]
    449            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0x900E             STR      R0,[SP, #+56]
    450            s_command.DummyCycles        = 0U;
   \       0x7C   0x2000             MOVS     R0,#+0
   \       0x7E   0x9011             STR      R0,[SP, #+68]
    451            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x9012             STR      R0,[SP, #+72]
    452            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x9013             STR      R0,[SP, #+76]
    453          
    454            /* Send the command */
    455            if(HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x88   0xF241 0x3288      MOVW     R2,#+5000
   \       0x8C   0x4669             MOV      R1,SP
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD002             BEQ.N    ??MX25LM51245G_ChipErase_10
    456            {
    457              return MX25LM51245G_ERROR;
   \       0x98   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x9C   0xE000             B.N      ??MX25LM51245G_ChipErase_1
    458            }
    459          
    460            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ChipErase_10: (+1)
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ChipErase_1: (+1)
   \       0xA0   0xB014             ADD      SP,SP,#+80
   \       0xA2   0xBD70             POP      {R4-R6,PC}
    461          }
    462          
    463          /**
    464            * @brief  Enable memory mapped mode for the OSPI memory on STR mode.
    465            *         SPI/OPI; 1-1-1/8-8-8
    466            * @param  Ctx Component object pointer
    467            * @param  Mode Interface mode
    468            * @param  AddressSize Address size
    469            * @retval OSPI memory status
    470            */

   \                                 In section .text, align 2, keep-with-next
    471          int32_t MX25LM51245G_EnableMemoryMappedModeSTR(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_AddressSize_t AddressSize)
    472          {
   \                     MX25LM51245G_EnableMemoryMappedModeSTR: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB096             SUB      SP,SP,#+88
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0xA802             ADD      R0,SP,#+8
   \       0x10   0x.... 0x....      BL       memset
   \       0x14   0x2208             MOVS     R2,#+8
   \       0x16   0x2100             MOVS     R1,#+0
   \       0x18   0x4668             MOV      R0,SP
   \       0x1A   0x.... 0x....      BL       memset
    473            OSPI_RegularCmdTypeDef      s_command = {0};
    474            OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
    475          
    476            /* OPI mode and 3-bytes address size not supported by memory */
    477            if ((Mode == MX25LM51245G_OPI_MODE) && (AddressSize == MX25LM51245G_3BYTES_SIZE))
   \       0x1E   0x0028             MOVS     R0,R5
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD106             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_0
   \       0x26   0x0030             MOVS     R0,R6
   \       0x28   0xB2C0             UXTB     R0,R0
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD102             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_0
    478            {
    479              return MX25LM51245G_ERROR;
   \       0x2E   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x32   0xE087             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_1
    480            }
    481          
    482            /* Initialize the read command */
    483            s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_0: (+1)
   \       0x34   0x2001             MOVS     R0,#+1
   \       0x36   0x9002             STR      R0,[SP, #+8]
    484            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x9003             STR      R0,[SP, #+12]
    485            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x3C   0x0028             MOVS     R0,R5
   \       0x3E   0xB2C0             UXTB     R0,R0
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD101             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_2
   \       0x44   0x2001             MOVS     R0,#+1
   \       0x46   0xE000             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_3
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_2: (+1)
   \       0x48   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_3: (+1)
   \       0x4A   0x9005             STR      R0,[SP, #+20]
    486            s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x4C   0x2000             MOVS     R0,#+0
   \       0x4E   0x9007             STR      R0,[SP, #+28]
    487            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_4
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_5
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_4: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_5: (+1)
   \       0x5E   0x9006             STR      R0,[SP, #+24]
    488            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_FAST_READ_CMD : MX25LM51245G_4_BYTE_ADDR_FAST_READ_CMD) : MX25LM51245G_OCTA_READ_CMD;
   \       0x60   0x0028             MOVS     R0,R5
   \       0x62   0xB2C0             UXTB     R0,R0
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD107             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_6
   \       0x68   0x0030             MOVS     R0,R6
   \       0x6A   0xB2C0             UXTB     R0,R0
   \       0x6C   0x2800             CMP      R0,#+0
   \       0x6E   0xD101             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_7
   \       0x70   0x200B             MOVS     R0,#+11
   \       0x72   0xE003             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_8
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_7: (+1)
   \       0x74   0x200C             MOVS     R0,#+12
   \       0x76   0xE001             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_8
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_6: (+1)
   \       0x78   0xF64E 0x4013      MOVW     R0,#+60435
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_8: (+1)
   \       0x7C   0x9004             STR      R0,[SP, #+16]
    489            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x7E   0x0028             MOVS     R0,R5
   \       0x80   0xB2C0             UXTB     R0,R0
   \       0x82   0x2800             CMP      R0,#+0
   \       0x84   0xD102             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_9
   \       0x86   0xF44F 0x7080      MOV      R0,#+256
   \       0x8A   0xE001             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_10
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_9: (+1)
   \       0x8C   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_10: (+1)
   \       0x90   0x9009             STR      R0,[SP, #+36]
    490            s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x92   0x2000             MOVS     R0,#+0
   \       0x94   0x900B             STR      R0,[SP, #+44]
    491            s_command.AddressSize        = (AddressSize == MX25LM51245G_3BYTES_SIZE) ? HAL_OSPI_ADDRESS_24_BITS : HAL_OSPI_ADDRESS_32_BITS;
   \       0x96   0x0030             MOVS     R0,R6
   \       0x98   0xB2C0             UXTB     R0,R0
   \       0x9A   0x2800             CMP      R0,#+0
   \       0x9C   0xD102             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_11
   \       0x9E   0xF44F 0x5000      MOV      R0,#+8192
   \       0xA2   0xE001             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_12
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_11: (+1)
   \       0xA4   0xF44F 0x5040      MOV      R0,#+12288
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_12: (+1)
   \       0xA8   0x900A             STR      R0,[SP, #+40]
    492            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xAA   0x2000             MOVS     R0,#+0
   \       0xAC   0x900D             STR      R0,[SP, #+52]
    493            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xAE   0x0028             MOVS     R0,R5
   \       0xB0   0xB2C0             UXTB     R0,R0
   \       0xB2   0x2800             CMP      R0,#+0
   \       0xB4   0xD102             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_13
   \       0xB6   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xBA   0xE001             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_14
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_13: (+1)
   \       0xBC   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_14: (+1)
   \       0xC0   0x9010             STR      R0,[SP, #+64]
    494            s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
   \       0xC2   0x2000             MOVS     R0,#+0
   \       0xC4   0x9012             STR      R0,[SP, #+72]
    495            s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? DUMMY_CYCLES_READ : DUMMY_CYCLES_READ_OCTAL;
   \       0xC6   0x0028             MOVS     R0,R5
   \       0xC8   0xB2C0             UXTB     R0,R0
   \       0xCA   0x2800             CMP      R0,#+0
   \       0xCC   0xD101             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_15
   \       0xCE   0x2008             MOVS     R0,#+8
   \       0xD0   0xE000             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_16
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_15: (+1)
   \       0xD2   0x2006             MOVS     R0,#+6
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_16: (+1)
   \       0xD4   0x9013             STR      R0,[SP, #+76]
    496            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0xD6   0x2000             MOVS     R0,#+0
   \       0xD8   0x9014             STR      R0,[SP, #+80]
    497            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0xDA   0x2000             MOVS     R0,#+0
   \       0xDC   0x9015             STR      R0,[SP, #+84]
    498          
    499            /* Send the read command */
    500            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0xDE   0xF241 0x3788      MOVW     R7,#+5000
   \       0xE2   0x003A             MOVS     R2,R7
   \       0xE4   0xA902             ADD      R1,SP,#+8
   \       0xE6   0x0020             MOVS     R0,R4
   \       0xE8   0x.... 0x....      BL       HAL_OSPI_Command
   \       0xEC   0x2800             CMP      R0,#+0
   \       0xEE   0xD002             BEQ.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_17
    501            {
    502              return MX25LM51245G_ERROR;
   \       0xF0   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0xF4   0xE026             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_1
    503            }
    504          
    505            /* Initialize the program command */
    506            s_command.OperationType      = HAL_OSPI_OPTYPE_WRITE_CFG;
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_17: (+1)
   \       0xF6   0x2002             MOVS     R0,#+2
   \       0xF8   0x9002             STR      R0,[SP, #+8]
    507            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? ((AddressSize == MX25LM51245G_3BYTES_SIZE) ? MX25LM51245G_PAGE_PROG_CMD : MX25LM51245G_4_BYTE_PAGE_PROG_CMD) : MX25LM51245G_OCTA_PAGE_PROG_CMD;
   \       0xFA   0xB2ED             UXTB     R5,R5
   \       0xFC   0x2D00             CMP      R5,#+0
   \       0xFE   0xD106             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_18
   \      0x100   0xB2F6             UXTB     R6,R6
   \      0x102   0x2E00             CMP      R6,#+0
   \      0x104   0xD101             BNE.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_19
   \      0x106   0x2002             MOVS     R0,#+2
   \      0x108   0xE003             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_20
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_19: (+1)
   \      0x10A   0x2012             MOVS     R0,#+18
   \      0x10C   0xE001             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_20
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_18: (+1)
   \      0x10E   0xF241 0x20ED      MOVW     R0,#+4845
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_20: (+1)
   \      0x112   0x9004             STR      R0,[SP, #+16]
    508            s_command.DummyCycles        = 0U;
   \      0x114   0x2000             MOVS     R0,#+0
   \      0x116   0x9013             STR      R0,[SP, #+76]
    509          
    510            /* Send the write command */
    511            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x118   0x003A             MOVS     R2,R7
   \      0x11A   0xA902             ADD      R1,SP,#+8
   \      0x11C   0x0020             MOVS     R0,R4
   \      0x11E   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x122   0x2800             CMP      R0,#+0
   \      0x124   0xD002             BEQ.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_21
    512            {
    513              return MX25LM51245G_ERROR;
   \      0x126   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x12A   0xE00B             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_1
    514            }
    515          
    516            /* Configure the memory mapped mode */
    517            s_mem_mapped_cfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_21: (+1)
   \      0x12C   0x2000             MOVS     R0,#+0
   \      0x12E   0x9000             STR      R0,[SP, #+0]
    518          
    519            if (HAL_OSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
   \      0x130   0x4669             MOV      R1,SP
   \      0x132   0x0020             MOVS     R0,R4
   \      0x134   0x.... 0x....      BL       HAL_OSPI_MemoryMapped
   \      0x138   0x2800             CMP      R0,#+0
   \      0x13A   0xD002             BEQ.N    ??MX25LM51245G_EnableMemoryMappedModeSTR_22
    520            {
    521              return MX25LM51245G_ERROR;
   \      0x13C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x140   0xE000             B.N      ??MX25LM51245G_EnableMemoryMappedModeSTR_1
    522            }
    523          
    524            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_22: (+1)
   \      0x142   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_EnableMemoryMappedModeSTR_1: (+1)
   \      0x144   0xB017             ADD      SP,SP,#+92
   \      0x146   0xBDF0             POP      {R4-R7,PC}
    525          }
    526          
    527          /**
    528            * @brief  Enable memory mapped mode for the OSPI memory on DTR mode.
    529            * @param  Ctx Component object pointer
    530            * @param  Mode Interface mode
    531            * @param  AddressSize Address size
    532            * @note   Only OPI mode support DTR transfer rate
    533            * @retval OSPI memory status
    534            */

   \                                 In section .text, align 2, keep-with-next
    535          int32_t MX25LM51245G_EnableMemoryMappedModeDTR(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode)
    536          {
   \                     MX25LM51245G_EnableMemoryMappedModeDTR: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0xB096             SUB      SP,SP,#+88
   \        0x4   0x0004             MOVS     R4,R0
    537            /* Prevent unused argument(s) compilation warning */
    538            UNUSED(Mode);
   \        0x6   0x2250             MOVS     R2,#+80
   \        0x8   0x2100             MOVS     R1,#+0
   \        0xA   0xA802             ADD      R0,SP,#+8
   \        0xC   0x.... 0x....      BL       memset
   \       0x10   0x2208             MOVS     R2,#+8
   \       0x12   0x2100             MOVS     R1,#+0
   \       0x14   0x4668             MOV      R0,SP
   \       0x16   0x.... 0x....      BL       memset
    539          
    540            OSPI_RegularCmdTypeDef      s_command = {0};
    541            OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
    542          
    543            /* Initialize the read command */
    544            s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
   \       0x1A   0x2001             MOVS     R0,#+1
   \       0x1C   0x9002             STR      R0,[SP, #+8]
    545            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x1E   0x2000             MOVS     R0,#+0
   \       0x20   0x9003             STR      R0,[SP, #+12]
    546            s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x22   0x2004             MOVS     R0,#+4
   \       0x24   0x9005             STR      R0,[SP, #+20]
    547            s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_ENABLE;
   \       0x26   0x2008             MOVS     R0,#+8
   \       0x28   0x9007             STR      R0,[SP, #+28]
    548            s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x2A   0x2010             MOVS     R0,#+16
   \       0x2C   0x9006             STR      R0,[SP, #+24]
    549            s_command.Instruction        = MX25LM51245G_OCTA_READ_DTR_CMD;
   \       0x2E   0xF64E 0x6011      MOVW     R0,#+60945
   \       0x32   0x9004             STR      R0,[SP, #+16]
    550            s_command.AddressMode        = HAL_OSPI_ADDRESS_8_LINES;
   \       0x34   0xF44F 0x6080      MOV      R0,#+1024
   \       0x38   0x9009             STR      R0,[SP, #+36]
    551            s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_ENABLE;
   \       0x3A   0xF44F 0x6000      MOV      R0,#+2048
   \       0x3E   0x900B             STR      R0,[SP, #+44]
    552            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0x40   0xF44F 0x5040      MOV      R0,#+12288
   \       0x44   0x900A             STR      R0,[SP, #+40]
    553            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x46   0x2000             MOVS     R0,#+0
   \       0x48   0x900D             STR      R0,[SP, #+52]
    554            s_command.DataMode           = HAL_OSPI_DATA_8_LINES;
   \       0x4A   0xF05F 0x6080      MOVS     R0,#+67108864
   \       0x4E   0x9010             STR      R0,[SP, #+64]
    555            s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_ENABLE;
   \       0x50   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0x54   0x9012             STR      R0,[SP, #+72]
    556            s_command.DummyCycles        = DUMMY_CYCLES_READ_OCTAL_DTR;
   \       0x56   0x2006             MOVS     R0,#+6
   \       0x58   0x9013             STR      R0,[SP, #+76]
    557            s_command.DQSMode            = HAL_OSPI_DQS_ENABLE;
   \       0x5A   0xF05F 0x5000      MOVS     R0,#+536870912
   \       0x5E   0x9014             STR      R0,[SP, #+80]
    558            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x60   0x2000             MOVS     R0,#+0
   \       0x62   0x9015             STR      R0,[SP, #+84]
    559          
    560            /* Send the command */
    561            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x64   0xF241 0x3588      MOVW     R5,#+5000
   \       0x68   0x002A             MOVS     R2,R5
   \       0x6A   0xA902             ADD      R1,SP,#+8
   \       0x6C   0x0020             MOVS     R0,R4
   \       0x6E   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x72   0x2800             CMP      R0,#+0
   \       0x74   0xD002             BEQ.N    ??MX25LM51245G_EnableMemoryMappedModeDTR_0
    562            {
    563              return MX25LM51245G_ERROR;
   \       0x76   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x7A   0xE01E             B.N      ??MX25LM51245G_EnableMemoryMappedModeDTR_1
    564            }
    565          
    566            /* Initialize the program command */
    567            s_command.OperationType = HAL_OSPI_OPTYPE_WRITE_CFG;
   \                     ??MX25LM51245G_EnableMemoryMappedModeDTR_0: (+1)
   \       0x7C   0x2002             MOVS     R0,#+2
   \       0x7E   0x9002             STR      R0,[SP, #+8]
    568            s_command.Instruction   = MX25LM51245G_OCTA_PAGE_PROG_CMD;
   \       0x80   0xF241 0x20ED      MOVW     R0,#+4845
   \       0x84   0x9004             STR      R0,[SP, #+16]
    569            s_command.DummyCycles   = 0U;
   \       0x86   0x2000             MOVS     R0,#+0
   \       0x88   0x9013             STR      R0,[SP, #+76]
    570            s_command.DQSMode       = HAL_OSPI_DQS_DISABLE;
   \       0x8A   0x2000             MOVS     R0,#+0
   \       0x8C   0x9014             STR      R0,[SP, #+80]
    571          
    572            /* Send the command */
    573            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x8E   0x002A             MOVS     R2,R5
   \       0x90   0xA902             ADD      R1,SP,#+8
   \       0x92   0x0020             MOVS     R0,R4
   \       0x94   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x98   0x2800             CMP      R0,#+0
   \       0x9A   0xD002             BEQ.N    ??MX25LM51245G_EnableMemoryMappedModeDTR_2
    574            {
    575              return MX25LM51245G_ERROR;
   \       0x9C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0xA0   0xE00B             B.N      ??MX25LM51245G_EnableMemoryMappedModeDTR_1
    576            }
    577            /* Configure the memory mapped mode */
    578            s_mem_mapped_cfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_DISABLE;
   \                     ??MX25LM51245G_EnableMemoryMappedModeDTR_2: (+1)
   \       0xA2   0x2000             MOVS     R0,#+0
   \       0xA4   0x9000             STR      R0,[SP, #+0]
    579          
    580            if (HAL_OSPI_MemoryMapped(Ctx, &s_mem_mapped_cfg) != HAL_OK)
   \       0xA6   0x4669             MOV      R1,SP
   \       0xA8   0x0020             MOVS     R0,R4
   \       0xAA   0x.... 0x....      BL       HAL_OSPI_MemoryMapped
   \       0xAE   0x2800             CMP      R0,#+0
   \       0xB0   0xD002             BEQ.N    ??MX25LM51245G_EnableMemoryMappedModeDTR_3
    581            {
    582              return MX25LM51245G_ERROR;
   \       0xB2   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0xB6   0xE000             B.N      ??MX25LM51245G_EnableMemoryMappedModeDTR_1
    583            }
    584          
    585            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_EnableMemoryMappedModeDTR_3: (+1)
   \       0xB8   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_EnableMemoryMappedModeDTR_1: (+1)
   \       0xBA   0xB017             ADD      SP,SP,#+92
   \       0xBC   0xBD30             POP      {R4,R5,PC}
    586          }
    587          
    588          /**
    589            * @brief  Flash suspend program or erase command
    590            *         SPI/OPI
    591            * @param  Ctx Component object pointer
    592            * @param  Mode Interface select
    593            * @param  Rate Transfer rate STR or DTR
    594            * @retval error status
    595            */

   \                                 In section .text, align 2, keep-with-next
    596          int32_t MX25LM51245G_Suspend(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
    597          {
   \                     MX25LM51245G_Suspend: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       memset
    598            OSPI_RegularCmdTypeDef s_command = {0};
    599          
    600            /* SPI mode and DTR transfer not supported by memory */
    601            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??MX25LM51245G_Suspend_0
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD102             BNE.N    ??MX25LM51245G_Suspend_0
    602            {
    603              return MX25LM51245G_ERROR;
   \       0x24   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x28   0xE03A             B.N      ??MX25LM51245G_Suspend_1
    604            }
    605          
    606            /* Initialize the suspend command */
    607            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_Suspend_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
    608            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x9001             STR      R0,[SP, #+4]
    609            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??MX25LM51245G_Suspend_2
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xE000             B.N      ??MX25LM51245G_Suspend_3
   \                     ??MX25LM51245G_Suspend_2: (+1)
   \       0x3E   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_Suspend_3: (+1)
   \       0x40   0x9003             STR      R0,[SP, #+12]
    610            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x2E01             CMP      R6,#+1
   \       0x46   0xD101             BNE.N    ??MX25LM51245G_Suspend_4
   \       0x48   0x2008             MOVS     R0,#+8
   \       0x4A   0xE000             B.N      ??MX25LM51245G_Suspend_5
   \                     ??MX25LM51245G_Suspend_4: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_Suspend_5: (+1)
   \       0x4E   0x9005             STR      R0,[SP, #+20]
    611            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_Suspend_6
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_Suspend_7
   \                     ??MX25LM51245G_Suspend_6: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_Suspend_7: (+1)
   \       0x5E   0x9004             STR      R0,[SP, #+16]
    612            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_PROG_ERASE_SUSPEND_CMD : MX25LM51245G_OCTA_PROG_ERASE_SUSPEND_CMD;
   \       0x60   0xB2ED             UXTB     R5,R5
   \       0x62   0x2D00             CMP      R5,#+0
   \       0x64   0xD101             BNE.N    ??MX25LM51245G_Suspend_8
   \       0x66   0x20B0             MOVS     R0,#+176
   \       0x68   0xE001             B.N      ??MX25LM51245G_Suspend_9
   \                     ??MX25LM51245G_Suspend_8: (+1)
   \       0x6A   0xF24B 0x004F      MOVW     R0,#+45135
   \                     ??MX25LM51245G_Suspend_9: (+1)
   \       0x6E   0x9002             STR      R0,[SP, #+8]
    613            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0x9007             STR      R0,[SP, #+28]
    614            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x900B             STR      R0,[SP, #+44]
    615            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0x900E             STR      R0,[SP, #+56]
    616            s_command.DummyCycles        = 0U;
   \       0x7C   0x2000             MOVS     R0,#+0
   \       0x7E   0x9011             STR      R0,[SP, #+68]
    617            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x9012             STR      R0,[SP, #+72]
    618            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x9013             STR      R0,[SP, #+76]
    619          
    620            /* Send the command */
    621            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x88   0xF241 0x3288      MOVW     R2,#+5000
   \       0x8C   0x4669             MOV      R1,SP
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD002             BEQ.N    ??MX25LM51245G_Suspend_10
    622            {
    623              return MX25LM51245G_ERROR;
   \       0x98   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x9C   0xE000             B.N      ??MX25LM51245G_Suspend_1
    624            }
    625          
    626            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_Suspend_10: (+1)
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_Suspend_1: (+1)
   \       0xA0   0xB014             ADD      SP,SP,#+80
   \       0xA2   0xBD70             POP      {R4-R6,PC}
    627          }
    628          
    629          /**
    630            * @brief  Flash resume program or erase command
    631            *         SPI/OPI
    632            * @param  Ctx Component object pointer
    633            * @param  Mode Interface select
    634            * @param  Rate Transfer rate STR or DTR
    635            * @retval error status
    636            */

   \                                 In section .text, align 2, keep-with-next
    637          int32_t MX25LM51245G_Resume(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
    638          {
   \                     MX25LM51245G_Resume: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       memset
    639            OSPI_RegularCmdTypeDef s_command = {0};
    640          
    641            /* SPI mode and DTR transfer not supported by memory */
    642            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??MX25LM51245G_Resume_0
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD102             BNE.N    ??MX25LM51245G_Resume_0
    643            {
    644              return MX25LM51245G_ERROR;
   \       0x24   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x28   0xE03A             B.N      ??MX25LM51245G_Resume_1
    645            }
    646          
    647            /* Initialize the resume command */
    648            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_Resume_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
    649            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x9001             STR      R0,[SP, #+4]
    650            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??MX25LM51245G_Resume_2
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xE000             B.N      ??MX25LM51245G_Resume_3
   \                     ??MX25LM51245G_Resume_2: (+1)
   \       0x3E   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_Resume_3: (+1)
   \       0x40   0x9003             STR      R0,[SP, #+12]
    651            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x2E01             CMP      R6,#+1
   \       0x46   0xD101             BNE.N    ??MX25LM51245G_Resume_4
   \       0x48   0x2008             MOVS     R0,#+8
   \       0x4A   0xE000             B.N      ??MX25LM51245G_Resume_5
   \                     ??MX25LM51245G_Resume_4: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_Resume_5: (+1)
   \       0x4E   0x9005             STR      R0,[SP, #+20]
    652            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_Resume_6
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_Resume_7
   \                     ??MX25LM51245G_Resume_6: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_Resume_7: (+1)
   \       0x5E   0x9004             STR      R0,[SP, #+16]
    653            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_PROG_ERASE_RESUME_CMD : MX25LM51245G_OCTA_PROG_ERASE_RESUME_CMD;
   \       0x60   0xB2ED             UXTB     R5,R5
   \       0x62   0x2D00             CMP      R5,#+0
   \       0x64   0xD101             BNE.N    ??MX25LM51245G_Resume_8
   \       0x66   0x2030             MOVS     R0,#+48
   \       0x68   0xE001             B.N      ??MX25LM51245G_Resume_9
   \                     ??MX25LM51245G_Resume_8: (+1)
   \       0x6A   0xF243 0x00CF      MOVW     R0,#+12495
   \                     ??MX25LM51245G_Resume_9: (+1)
   \       0x6E   0x9002             STR      R0,[SP, #+8]
    654            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0x9007             STR      R0,[SP, #+28]
    655            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x900B             STR      R0,[SP, #+44]
    656            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0x900E             STR      R0,[SP, #+56]
    657            s_command.DummyCycles        = 0U;
   \       0x7C   0x2000             MOVS     R0,#+0
   \       0x7E   0x9011             STR      R0,[SP, #+68]
    658            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x9012             STR      R0,[SP, #+72]
    659            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x9013             STR      R0,[SP, #+76]
    660          
    661            /* Send the command */
    662            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x88   0xF241 0x3288      MOVW     R2,#+5000
   \       0x8C   0x4669             MOV      R1,SP
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD002             BEQ.N    ??MX25LM51245G_Resume_10
    663            {
    664              return MX25LM51245G_ERROR;
   \       0x98   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x9C   0xE000             B.N      ??MX25LM51245G_Resume_1
    665            }
    666          
    667            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_Resume_10: (+1)
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_Resume_1: (+1)
   \       0xA0   0xB014             ADD      SP,SP,#+80
   \       0xA2   0xBD70             POP      {R4-R6,PC}
    668          }
    669          
    670          /* Register/Setting Commands **************************************************/
    671          /**
    672            * @brief  This function send a Write Enable and wait it is effective.
    673            *         SPI/OPI
    674            * @param  Ctx Component object pointer
    675            * @param  Mode Interface mode
    676            * @param  Rate Transfer rate STR or DTR
    677            * @retval error status
    678            */

   \                                 In section .text, align 2, keep-with-next
    679          int32_t MX25LM51245G_WriteEnable(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
    680          {
   \                     MX25LM51245G_WriteEnable: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB099             SUB      SP,SP,#+100
   \        0x4   0x0007             MOVS     R7,R0
   \        0x6   0x000C             MOVS     R4,R1
   \        0x8   0x0015             MOVS     R5,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0xA805             ADD      R0,SP,#+20
   \       0x10   0x.... 0x....      BL       memset
   \       0x14   0x2214             MOVS     R2,#+20
   \       0x16   0x2100             MOVS     R1,#+0
   \       0x18   0x4668             MOV      R0,SP
   \       0x1A   0x.... 0x....      BL       memset
    681            OSPI_RegularCmdTypeDef     s_command = {0};
    682            OSPI_AutoPollingTypeDef s_config = {0};
    683          
    684            /* SPI mode and DTR transfer not supported by memory */
    685            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x1E   0x0020             MOVS     R0,R4
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD106             BNE.N    ??MX25LM51245G_WriteEnable_0
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0xB2C0             UXTB     R0,R0
   \       0x2A   0x2801             CMP      R0,#+1
   \       0x2C   0xD102             BNE.N    ??MX25LM51245G_WriteEnable_0
    686            {
    687              return MX25LM51245G_ERROR;
   \       0x2E   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x32   0xE0AC             B.N      ??MX25LM51245G_WriteEnable_1
    688            }
    689          
    690            /* Initialize the write enable command */
    691            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_WriteEnable_0: (+1)
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0x9005             STR      R0,[SP, #+20]
    692            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x9006             STR      R0,[SP, #+24]
    693            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0xB2C0             UXTB     R0,R0
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD101             BNE.N    ??MX25LM51245G_WriteEnable_2
   \       0x44   0x2001             MOVS     R0,#+1
   \       0x46   0xE000             B.N      ??MX25LM51245G_WriteEnable_3
   \                     ??MX25LM51245G_WriteEnable_2: (+1)
   \       0x48   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_WriteEnable_3: (+1)
   \       0x4A   0x9008             STR      R0,[SP, #+32]
    694            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x4C   0x0028             MOVS     R0,R5
   \       0x4E   0xB2C0             UXTB     R0,R0
   \       0x50   0x2801             CMP      R0,#+1
   \       0x52   0xD101             BNE.N    ??MX25LM51245G_WriteEnable_4
   \       0x54   0x2008             MOVS     R0,#+8
   \       0x56   0xE000             B.N      ??MX25LM51245G_WriteEnable_5
   \                     ??MX25LM51245G_WriteEnable_4: (+1)
   \       0x58   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteEnable_5: (+1)
   \       0x5A   0x900A             STR      R0,[SP, #+40]
    695            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x5C   0x0020             MOVS     R0,R4
   \       0x5E   0xB2C0             UXTB     R0,R0
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD101             BNE.N    ??MX25LM51245G_WriteEnable_6
   \       0x64   0x2000             MOVS     R0,#+0
   \       0x66   0xE000             B.N      ??MX25LM51245G_WriteEnable_7
   \                     ??MX25LM51245G_WriteEnable_6: (+1)
   \       0x68   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_WriteEnable_7: (+1)
   \       0x6A   0x9009             STR      R0,[SP, #+36]
    696            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_ENABLE_CMD : MX25LM51245G_OCTA_WRITE_ENABLE_CMD;
   \       0x6C   0x0020             MOVS     R0,R4
   \       0x6E   0xB2C0             UXTB     R0,R0
   \       0x70   0x2800             CMP      R0,#+0
   \       0x72   0xD101             BNE.N    ??MX25LM51245G_WriteEnable_8
   \       0x74   0x2006             MOVS     R0,#+6
   \       0x76   0xE001             B.N      ??MX25LM51245G_WriteEnable_9
   \                     ??MX25LM51245G_WriteEnable_8: (+1)
   \       0x78   0xF240 0x60F9      MOVW     R0,#+1785
   \                     ??MX25LM51245G_WriteEnable_9: (+1)
   \       0x7C   0x9007             STR      R0,[SP, #+28]
    697            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0x900C             STR      R0,[SP, #+48]
    698            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x82   0x2000             MOVS     R0,#+0
   \       0x84   0x9010             STR      R0,[SP, #+64]
    699            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x86   0x2000             MOVS     R0,#+0
   \       0x88   0x9013             STR      R0,[SP, #+76]
    700            s_command.DummyCycles        = 0U;
   \       0x8A   0x2000             MOVS     R0,#+0
   \       0x8C   0x9016             STR      R0,[SP, #+88]
    701            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x8E   0x2000             MOVS     R0,#+0
   \       0x90   0x9017             STR      R0,[SP, #+92]
    702            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x92   0x2000             MOVS     R0,#+0
   \       0x94   0x9018             STR      R0,[SP, #+96]
    703          
    704            /* Send the command */
    705            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x96   0xF241 0x3688      MOVW     R6,#+5000
   \       0x9A   0x0032             MOVS     R2,R6
   \       0x9C   0xA905             ADD      R1,SP,#+20
   \       0x9E   0x0038             MOVS     R0,R7
   \       0xA0   0x.... 0x....      BL       HAL_OSPI_Command
   \       0xA4   0x2800             CMP      R0,#+0
   \       0xA6   0xD002             BEQ.N    ??MX25LM51245G_WriteEnable_10
    706            {
    707              return MX25LM51245G_ERROR;
   \       0xA8   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0xAC   0xE06F             B.N      ??MX25LM51245G_WriteEnable_1
    708            }
    709          
    710            /* Configure automatic polling mode to wait for write enabling */
    711            s_command.Instruction    = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
   \                     ??MX25LM51245G_WriteEnable_10: (+1)
   \       0xAE   0x0020             MOVS     R0,R4
   \       0xB0   0xB2C0             UXTB     R0,R0
   \       0xB2   0x2800             CMP      R0,#+0
   \       0xB4   0xD101             BNE.N    ??MX25LM51245G_WriteEnable_11
   \       0xB6   0x2005             MOVS     R0,#+5
   \       0xB8   0xE001             B.N      ??MX25LM51245G_WriteEnable_12
   \                     ??MX25LM51245G_WriteEnable_11: (+1)
   \       0xBA   0xF240 0x50FA      MOVW     R0,#+1530
   \                     ??MX25LM51245G_WriteEnable_12: (+1)
   \       0xBE   0x9007             STR      R0,[SP, #+28]
    712            s_command.AddressMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
   \       0xC0   0x0020             MOVS     R0,R4
   \       0xC2   0xB2C0             UXTB     R0,R0
   \       0xC4   0x2800             CMP      R0,#+0
   \       0xC6   0xD101             BNE.N    ??MX25LM51245G_WriteEnable_13
   \       0xC8   0x2000             MOVS     R0,#+0
   \       0xCA   0xE001             B.N      ??MX25LM51245G_WriteEnable_14
   \                     ??MX25LM51245G_WriteEnable_13: (+1)
   \       0xCC   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_WriteEnable_14: (+1)
   \       0xD0   0x900C             STR      R0,[SP, #+48]
    713            s_command.AddressDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0xD2   0x0028             MOVS     R0,R5
   \       0xD4   0xB2C0             UXTB     R0,R0
   \       0xD6   0x2801             CMP      R0,#+1
   \       0xD8   0xD102             BNE.N    ??MX25LM51245G_WriteEnable_15
   \       0xDA   0xF44F 0x6000      MOV      R0,#+2048
   \       0xDE   0xE000             B.N      ??MX25LM51245G_WriteEnable_16
   \                     ??MX25LM51245G_WriteEnable_15: (+1)
   \       0xE0   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteEnable_16: (+1)
   \       0xE2   0x900E             STR      R0,[SP, #+56]
    714            s_command.AddressSize    = HAL_OSPI_ADDRESS_32_BITS;
   \       0xE4   0xF44F 0x5040      MOV      R0,#+12288
   \       0xE8   0x900D             STR      R0,[SP, #+52]
    715            s_command.Address        = 0U;
   \       0xEA   0x2000             MOVS     R0,#+0
   \       0xEC   0x900B             STR      R0,[SP, #+44]
    716            s_command.DataMode       = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xEE   0x0020             MOVS     R0,R4
   \       0xF0   0xB2C0             UXTB     R0,R0
   \       0xF2   0x2800             CMP      R0,#+0
   \       0xF4   0xD102             BNE.N    ??MX25LM51245G_WriteEnable_17
   \       0xF6   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xFA   0xE001             B.N      ??MX25LM51245G_WriteEnable_18
   \                     ??MX25LM51245G_WriteEnable_17: (+1)
   \       0xFC   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_WriteEnable_18: (+1)
   \      0x100   0x9013             STR      R0,[SP, #+76]
    717            s_command.DataDtrMode    = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \      0x102   0x0028             MOVS     R0,R5
   \      0x104   0xB2C0             UXTB     R0,R0
   \      0x106   0x2801             CMP      R0,#+1
   \      0x108   0xD102             BNE.N    ??MX25LM51245G_WriteEnable_19
   \      0x10A   0xF05F 0x6000      MOVS     R0,#+134217728
   \      0x10E   0xE000             B.N      ??MX25LM51245G_WriteEnable_20
   \                     ??MX25LM51245G_WriteEnable_19: (+1)
   \      0x110   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteEnable_20: (+1)
   \      0x112   0x9015             STR      R0,[SP, #+84]
    718            s_command.DummyCycles    = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
   \      0x114   0xB2E4             UXTB     R4,R4
   \      0x116   0x2C00             CMP      R4,#+0
   \      0x118   0xD101             BNE.N    ??MX25LM51245G_WriteEnable_21
   \      0x11A   0x2000             MOVS     R0,#+0
   \      0x11C   0xE006             B.N      ??MX25LM51245G_WriteEnable_22
   \                     ??MX25LM51245G_WriteEnable_21: (+1)
   \      0x11E   0x0028             MOVS     R0,R5
   \      0x120   0xB2C0             UXTB     R0,R0
   \      0x122   0x2801             CMP      R0,#+1
   \      0x124   0xD101             BNE.N    ??MX25LM51245G_WriteEnable_23
   \      0x126   0x2005             MOVS     R0,#+5
   \      0x128   0xE000             B.N      ??MX25LM51245G_WriteEnable_22
   \                     ??MX25LM51245G_WriteEnable_23: (+1)
   \      0x12A   0x2005             MOVS     R0,#+5
   \                     ??MX25LM51245G_WriteEnable_22: (+1)
   \      0x12C   0x9016             STR      R0,[SP, #+88]
    719            s_command.NbData         = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
   \      0x12E   0x0028             MOVS     R0,R5
   \      0x130   0xB2C0             UXTB     R0,R0
   \      0x132   0x2801             CMP      R0,#+1
   \      0x134   0xD101             BNE.N    ??MX25LM51245G_WriteEnable_24
   \      0x136   0x2002             MOVS     R0,#+2
   \      0x138   0xE000             B.N      ??MX25LM51245G_WriteEnable_25
   \                     ??MX25LM51245G_WriteEnable_24: (+1)
   \      0x13A   0x2001             MOVS     R0,#+1
   \                     ??MX25LM51245G_WriteEnable_25: (+1)
   \      0x13C   0x9014             STR      R0,[SP, #+80]
    720            s_command.DQSMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
   \      0x13E   0xB2ED             UXTB     R5,R5
   \      0x140   0x2D01             CMP      R5,#+1
   \      0x142   0xD102             BNE.N    ??MX25LM51245G_WriteEnable_26
   \      0x144   0xF05F 0x5000      MOVS     R0,#+536870912
   \      0x148   0xE000             B.N      ??MX25LM51245G_WriteEnable_27
   \                     ??MX25LM51245G_WriteEnable_26: (+1)
   \      0x14A   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteEnable_27: (+1)
   \      0x14C   0x9017             STR      R0,[SP, #+92]
    721          
    722            /* Send the command */
    723            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x14E   0x0032             MOVS     R2,R6
   \      0x150   0xA905             ADD      R1,SP,#+20
   \      0x152   0x0038             MOVS     R0,R7
   \      0x154   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x158   0x2800             CMP      R0,#+0
   \      0x15A   0xD002             BEQ.N    ??MX25LM51245G_WriteEnable_28
    724            {
    725              return MX25LM51245G_ERROR;
   \      0x15C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x160   0xE015             B.N      ??MX25LM51245G_WriteEnable_1
    726            }
    727          
    728            s_config.Match           = 2U;
   \                     ??MX25LM51245G_WriteEnable_28: (+1)
   \      0x162   0x2002             MOVS     R0,#+2
   \      0x164   0x9000             STR      R0,[SP, #+0]
    729            s_config.Mask            = 2U;
   \      0x166   0x2002             MOVS     R0,#+2
   \      0x168   0x9001             STR      R0,[SP, #+4]
    730            s_config.MatchMode       = HAL_OSPI_MATCH_MODE_AND;
   \      0x16A   0x2000             MOVS     R0,#+0
   \      0x16C   0x9002             STR      R0,[SP, #+8]
    731            s_config.Interval        = MX25LM51245G_AUTOPOLLING_INTERVAL_TIME;
   \      0x16E   0x2010             MOVS     R0,#+16
   \      0x170   0x9004             STR      R0,[SP, #+16]
    732            s_config.AutomaticStop   = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
   \      0x172   0xF45F 0x0080      MOVS     R0,#+4194304
   \      0x176   0x9003             STR      R0,[SP, #+12]
    733          
    734            if (HAL_OSPI_AutoPolling(Ctx, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x178   0x0032             MOVS     R2,R6
   \      0x17A   0x4669             MOV      R1,SP
   \      0x17C   0x0038             MOVS     R0,R7
   \      0x17E   0x.... 0x....      BL       HAL_OSPI_AutoPolling
   \      0x182   0x2800             CMP      R0,#+0
   \      0x184   0xD002             BEQ.N    ??MX25LM51245G_WriteEnable_29
    735            {
    736              return MX25LM51245G_ERROR;
   \      0x186   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x18A   0xE000             B.N      ??MX25LM51245G_WriteEnable_1
    737            }
    738          
    739            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_WriteEnable_29: (+1)
   \      0x18C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteEnable_1: (+1)
   \      0x18E   0xB019             ADD      SP,SP,#+100
   \      0x190   0xBDF0             POP      {R4-R7,PC}
    740          }
    741          
    742          /**
    743            * @brief  This function reset the (WEN) Write Enable Latch bit.
    744            *         SPI/OPI
    745            * @param  Ctx Component object pointer
    746            * @param  Mode Interface mode
    747            * @param  Rate Transfer rate STR or DTR
    748            * @retval error status
    749            */

   \                                 In section .text, align 2, keep-with-next
    750          int32_t MX25LM51245G_WriteDisable(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
    751          {
   \                     MX25LM51245G_WriteDisable: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       memset
    752            OSPI_RegularCmdTypeDef s_command = {0};
    753          
    754            /* SPI mode and DTR transfer not supported by memory */
    755            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??MX25LM51245G_WriteDisable_0
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD102             BNE.N    ??MX25LM51245G_WriteDisable_0
    756            {
    757              return MX25LM51245G_ERROR;
   \       0x24   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x28   0xE03A             B.N      ??MX25LM51245G_WriteDisable_1
    758            }
    759          
    760            /* Initialize the write disable command */
    761            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_WriteDisable_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
    762            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x9001             STR      R0,[SP, #+4]
    763            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??MX25LM51245G_WriteDisable_2
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xE000             B.N      ??MX25LM51245G_WriteDisable_3
   \                     ??MX25LM51245G_WriteDisable_2: (+1)
   \       0x3E   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_WriteDisable_3: (+1)
   \       0x40   0x9003             STR      R0,[SP, #+12]
    764            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x2E01             CMP      R6,#+1
   \       0x46   0xD101             BNE.N    ??MX25LM51245G_WriteDisable_4
   \       0x48   0x2008             MOVS     R0,#+8
   \       0x4A   0xE000             B.N      ??MX25LM51245G_WriteDisable_5
   \                     ??MX25LM51245G_WriteDisable_4: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteDisable_5: (+1)
   \       0x4E   0x9005             STR      R0,[SP, #+20]
    765            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_WriteDisable_6
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_WriteDisable_7
   \                     ??MX25LM51245G_WriteDisable_6: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_WriteDisable_7: (+1)
   \       0x5E   0x9004             STR      R0,[SP, #+16]
    766            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_DISABLE_CMD : MX25LM51245G_OCTA_WRITE_DISABLE_CMD;
   \       0x60   0xB2ED             UXTB     R5,R5
   \       0x62   0x2D00             CMP      R5,#+0
   \       0x64   0xD101             BNE.N    ??MX25LM51245G_WriteDisable_8
   \       0x66   0x2004             MOVS     R0,#+4
   \       0x68   0xE001             B.N      ??MX25LM51245G_WriteDisable_9
   \                     ??MX25LM51245G_WriteDisable_8: (+1)
   \       0x6A   0xF240 0x40FB      MOVW     R0,#+1275
   \                     ??MX25LM51245G_WriteDisable_9: (+1)
   \       0x6E   0x9002             STR      R0,[SP, #+8]
    767            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0x9007             STR      R0,[SP, #+28]
    768            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x900B             STR      R0,[SP, #+44]
    769            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0x900E             STR      R0,[SP, #+56]
    770            s_command.DummyCycles        = 0U;
   \       0x7C   0x2000             MOVS     R0,#+0
   \       0x7E   0x9011             STR      R0,[SP, #+68]
    771            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x9012             STR      R0,[SP, #+72]
    772            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x9013             STR      R0,[SP, #+76]
    773          
    774            /* Send the command */
    775            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x88   0xF241 0x3288      MOVW     R2,#+5000
   \       0x8C   0x4669             MOV      R1,SP
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD002             BEQ.N    ??MX25LM51245G_WriteDisable_10
    776            {
    777              return MX25LM51245G_ERROR;
   \       0x98   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x9C   0xE000             B.N      ??MX25LM51245G_WriteDisable_1
    778            }
    779          
    780            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_WriteDisable_10: (+1)
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteDisable_1: (+1)
   \       0xA0   0xB014             ADD      SP,SP,#+80
   \       0xA2   0xBD70             POP      {R4-R6,PC}
    781          }
    782          
    783          /**
    784            * @brief  Read Flash Status register value
    785            *         SPI/OPI
    786            * @param  Ctx Component object pointer
    787            * @param  Mode Interface mode
    788            * @param  Rate Transfer rate STR or DTR
    789            * @param  Value Status register value pointer
    790            * @retval error status
    791            */

   \                                 In section .text, align 2, keep-with-next
    792          int32_t MX25LM51245G_ReadStatusRegister(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint8_t *Value)
    793          {
   \                     MX25LM51245G_ReadStatusRegister: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
    794            OSPI_RegularCmdTypeDef s_command = {0};
    795          
    796            /* SPI mode and DTR transfer not supported by memory */
    797            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_ReadStatusRegister_0
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_ReadStatusRegister_0
    798            {
    799              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE086             B.N      ??MX25LM51245G_ReadStatusRegister_1
    800            }
    801          
    802            /* Initialize the reading of status register */
    803            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_ReadStatusRegister_0: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x9000             STR      R0,[SP, #+0]
    804            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x9001             STR      R0,[SP, #+4]
    805            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x34   0x0028             MOVS     R0,R5
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD101             BNE.N    ??MX25LM51245G_ReadStatusRegister_2
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0xE000             B.N      ??MX25LM51245G_ReadStatusRegister_3
   \                     ??MX25LM51245G_ReadStatusRegister_2: (+1)
   \       0x40   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_ReadStatusRegister_3: (+1)
   \       0x42   0x9003             STR      R0,[SP, #+12]
    806            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x44   0x0030             MOVS     R0,R6
   \       0x46   0xB2C0             UXTB     R0,R0
   \       0x48   0x2801             CMP      R0,#+1
   \       0x4A   0xD101             BNE.N    ??MX25LM51245G_ReadStatusRegister_4
   \       0x4C   0x2008             MOVS     R0,#+8
   \       0x4E   0xE000             B.N      ??MX25LM51245G_ReadStatusRegister_5
   \                     ??MX25LM51245G_ReadStatusRegister_4: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadStatusRegister_5: (+1)
   \       0x52   0x9005             STR      R0,[SP, #+20]
    807            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x54   0x0028             MOVS     R0,R5
   \       0x56   0xB2C0             UXTB     R0,R0
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD101             BNE.N    ??MX25LM51245G_ReadStatusRegister_6
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0xE000             B.N      ??MX25LM51245G_ReadStatusRegister_7
   \                     ??MX25LM51245G_ReadStatusRegister_6: (+1)
   \       0x60   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_ReadStatusRegister_7: (+1)
   \       0x62   0x9004             STR      R0,[SP, #+16]
    808            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_STATUS_REG_CMD : MX25LM51245G_OCTA_READ_STATUS_REG_CMD;
   \       0x64   0x0028             MOVS     R0,R5
   \       0x66   0xB2C0             UXTB     R0,R0
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD101             BNE.N    ??MX25LM51245G_ReadStatusRegister_8
   \       0x6C   0x2005             MOVS     R0,#+5
   \       0x6E   0xE001             B.N      ??MX25LM51245G_ReadStatusRegister_9
   \                     ??MX25LM51245G_ReadStatusRegister_8: (+1)
   \       0x70   0xF240 0x50FA      MOVW     R0,#+1530
   \                     ??MX25LM51245G_ReadStatusRegister_9: (+1)
   \       0x74   0x9002             STR      R0,[SP, #+8]
    809            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0xB2C0             UXTB     R0,R0
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD101             BNE.N    ??MX25LM51245G_ReadStatusRegister_10
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0xE001             B.N      ??MX25LM51245G_ReadStatusRegister_11
   \                     ??MX25LM51245G_ReadStatusRegister_10: (+1)
   \       0x82   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_ReadStatusRegister_11: (+1)
   \       0x86   0x9007             STR      R0,[SP, #+28]
    810            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x88   0x0030             MOVS     R0,R6
   \       0x8A   0xB2C0             UXTB     R0,R0
   \       0x8C   0x2801             CMP      R0,#+1
   \       0x8E   0xD102             BNE.N    ??MX25LM51245G_ReadStatusRegister_12
   \       0x90   0xF44F 0x6000      MOV      R0,#+2048
   \       0x94   0xE000             B.N      ??MX25LM51245G_ReadStatusRegister_13
   \                     ??MX25LM51245G_ReadStatusRegister_12: (+1)
   \       0x96   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadStatusRegister_13: (+1)
   \       0x98   0x9009             STR      R0,[SP, #+36]
    811            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0x9A   0xF44F 0x5040      MOV      R0,#+12288
   \       0x9E   0x9008             STR      R0,[SP, #+32]
    812            s_command.Address            = 0U;
   \       0xA0   0x2000             MOVS     R0,#+0
   \       0xA2   0x9006             STR      R0,[SP, #+24]
    813            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x900B             STR      R0,[SP, #+44]
    814            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xA8   0x0028             MOVS     R0,R5
   \       0xAA   0xB2C0             UXTB     R0,R0
   \       0xAC   0x2800             CMP      R0,#+0
   \       0xAE   0xD102             BNE.N    ??MX25LM51245G_ReadStatusRegister_14
   \       0xB0   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xB4   0xE001             B.N      ??MX25LM51245G_ReadStatusRegister_15
   \                     ??MX25LM51245G_ReadStatusRegister_14: (+1)
   \       0xB6   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_ReadStatusRegister_15: (+1)
   \       0xBA   0x900E             STR      R0,[SP, #+56]
    815            s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \       0xBC   0x0030             MOVS     R0,R6
   \       0xBE   0xB2C0             UXTB     R0,R0
   \       0xC0   0x2801             CMP      R0,#+1
   \       0xC2   0xD102             BNE.N    ??MX25LM51245G_ReadStatusRegister_16
   \       0xC4   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0xC8   0xE000             B.N      ??MX25LM51245G_ReadStatusRegister_17
   \                     ??MX25LM51245G_ReadStatusRegister_16: (+1)
   \       0xCA   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadStatusRegister_17: (+1)
   \       0xCC   0x9010             STR      R0,[SP, #+64]
    816            s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
   \       0xCE   0xB2ED             UXTB     R5,R5
   \       0xD0   0x2D00             CMP      R5,#+0
   \       0xD2   0xD101             BNE.N    ??MX25LM51245G_ReadStatusRegister_18
   \       0xD4   0x2000             MOVS     R0,#+0
   \       0xD6   0xE006             B.N      ??MX25LM51245G_ReadStatusRegister_19
   \                     ??MX25LM51245G_ReadStatusRegister_18: (+1)
   \       0xD8   0x0030             MOVS     R0,R6
   \       0xDA   0xB2C0             UXTB     R0,R0
   \       0xDC   0x2801             CMP      R0,#+1
   \       0xDE   0xD101             BNE.N    ??MX25LM51245G_ReadStatusRegister_20
   \       0xE0   0x2005             MOVS     R0,#+5
   \       0xE2   0xE000             B.N      ??MX25LM51245G_ReadStatusRegister_19
   \                     ??MX25LM51245G_ReadStatusRegister_20: (+1)
   \       0xE4   0x2005             MOVS     R0,#+5
   \                     ??MX25LM51245G_ReadStatusRegister_19: (+1)
   \       0xE6   0x9011             STR      R0,[SP, #+68]
    817            s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
   \       0xE8   0x0030             MOVS     R0,R6
   \       0xEA   0xB2C0             UXTB     R0,R0
   \       0xEC   0x2801             CMP      R0,#+1
   \       0xEE   0xD101             BNE.N    ??MX25LM51245G_ReadStatusRegister_21
   \       0xF0   0x2002             MOVS     R0,#+2
   \       0xF2   0xE000             B.N      ??MX25LM51245G_ReadStatusRegister_22
   \                     ??MX25LM51245G_ReadStatusRegister_21: (+1)
   \       0xF4   0x2001             MOVS     R0,#+1
   \                     ??MX25LM51245G_ReadStatusRegister_22: (+1)
   \       0xF6   0x900F             STR      R0,[SP, #+60]
    818            s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
   \       0xF8   0xB2F6             UXTB     R6,R6
   \       0xFA   0x2E01             CMP      R6,#+1
   \       0xFC   0xD102             BNE.N    ??MX25LM51245G_ReadStatusRegister_23
   \       0xFE   0xF05F 0x5000      MOVS     R0,#+536870912
   \      0x102   0xE000             B.N      ??MX25LM51245G_ReadStatusRegister_24
   \                     ??MX25LM51245G_ReadStatusRegister_23: (+1)
   \      0x104   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadStatusRegister_24: (+1)
   \      0x106   0x9012             STR      R0,[SP, #+72]
    819            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \      0x108   0x2000             MOVS     R0,#+0
   \      0x10A   0x9013             STR      R0,[SP, #+76]
    820          
    821            /* Send the command */
    822            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x10C   0xF241 0x3588      MOVW     R5,#+5000
   \      0x110   0x002A             MOVS     R2,R5
   \      0x112   0x4669             MOV      R1,SP
   \      0x114   0x0020             MOVS     R0,R4
   \      0x116   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x11A   0x2800             CMP      R0,#+0
   \      0x11C   0xD002             BEQ.N    ??MX25LM51245G_ReadStatusRegister_25
    823            {
    824              return MX25LM51245G_ERROR;
   \      0x11E   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x122   0xE00A             B.N      ??MX25LM51245G_ReadStatusRegister_1
    825            }
    826          
    827            /* Reception of the data */
    828            if (HAL_OSPI_Receive(Ctx, Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_ReadStatusRegister_25: (+1)
   \      0x124   0x002A             MOVS     R2,R5
   \      0x126   0x0039             MOVS     R1,R7
   \      0x128   0x0020             MOVS     R0,R4
   \      0x12A   0x.... 0x....      BL       HAL_OSPI_Receive
   \      0x12E   0x2800             CMP      R0,#+0
   \      0x130   0xD002             BEQ.N    ??MX25LM51245G_ReadStatusRegister_26
    829            {
    830              return MX25LM51245G_ERROR;
   \      0x132   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x136   0xE000             B.N      ??MX25LM51245G_ReadStatusRegister_1
    831            }
    832          
    833            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ReadStatusRegister_26: (+1)
   \      0x138   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadStatusRegister_1: (+1)
   \      0x13A   0xB015             ADD      SP,SP,#+84
   \      0x13C   0xBDF0             POP      {R4-R7,PC}
    834          }
    835          
    836          /**
    837            * @brief  Write Flash Status register
    838            *         SPI/OPI
    839            * @param  Ctx Component object pointer
    840            * @param  Mode Interface mode
    841            * @param  Rate Transfer rate STR or DTR
    842            * @param  Value Value to write to Status register
    843            * @retval error status
    844            */

   \                                 In section .text, align 2, keep-with-next
    845          int32_t MX25LM51245G_WriteStatusRegister(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint8_t Value)
    846          {
   \                     MX25LM51245G_WriteStatusRegister: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB095             SUB      SP,SP,#+84
   \        0x4   0x0006             MOVS     R6,R0
   \        0x6   0x000C             MOVS     R4,R1
   \        0x8   0x0015             MOVS     R5,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0xA801             ADD      R0,SP,#+4
   \       0x12   0x.... 0x....      BL       memset
    847            OSPI_RegularCmdTypeDef s_command = {0};
    848            uint8_t reg[2];
    849          
    850            /* SPI mode and DTR transfer not supported by memory */
    851            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x16   0x0020             MOVS     R0,R4
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_WriteStatusRegister_0
   \       0x1E   0x0028             MOVS     R0,R5
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_WriteStatusRegister_0
    852            {
    853              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE08D             B.N      ??MX25LM51245G_WriteStatusRegister_1
    854            }
    855          
    856            /* In SPI mode, the status register is configured with configuration register */
    857            if (Mode == MX25LM51245G_SPI_MODE)
   \                     ??MX25LM51245G_WriteStatusRegister_0: (+1)
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0xB2C0             UXTB     R0,R0
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD10D             BNE.N    ??MX25LM51245G_WriteStatusRegister_2
    858            {
    859              if (MX25LM51245G_ReadCfgRegister(Ctx, Mode, Rate, &reg[1]) != MX25LM51245G_OK)
   \       0x34   0xF10D 0x0301      ADD      R3,SP,#+1
   \       0x38   0x002A             MOVS     R2,R5
   \       0x3A   0xB2D2             UXTB     R2,R2
   \       0x3C   0x0021             MOVS     R1,R4
   \       0x3E   0xB2C9             UXTB     R1,R1
   \       0x40   0x0030             MOVS     R0,R6
   \       0x42   0x.... 0x....      BL       MX25LM51245G_ReadCfgRegister
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD002             BEQ.N    ??MX25LM51245G_WriteStatusRegister_2
    860              {
    861                return MX25LM51245G_ERROR;
   \       0x4A   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x4E   0xE07B             B.N      ??MX25LM51245G_WriteStatusRegister_1
    862              }
    863            }
    864            reg[0] = Value;
   \                     ??MX25LM51245G_WriteStatusRegister_2: (+1)
   \       0x50   0xF88D 0x7000      STRB     R7,[SP, #+0]
    865          
    866            /* Initialize the writing of status register */
    867            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \       0x54   0x2000             MOVS     R0,#+0
   \       0x56   0x9001             STR      R0,[SP, #+4]
    868            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0x9002             STR      R0,[SP, #+8]
    869            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x5C   0x0020             MOVS     R0,R4
   \       0x5E   0xB2C0             UXTB     R0,R0
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD101             BNE.N    ??MX25LM51245G_WriteStatusRegister_3
   \       0x64   0x2001             MOVS     R0,#+1
   \       0x66   0xE000             B.N      ??MX25LM51245G_WriteStatusRegister_4
   \                     ??MX25LM51245G_WriteStatusRegister_3: (+1)
   \       0x68   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_WriteStatusRegister_4: (+1)
   \       0x6A   0x9004             STR      R0,[SP, #+16]
    870            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x6C   0x0028             MOVS     R0,R5
   \       0x6E   0xB2C0             UXTB     R0,R0
   \       0x70   0x2801             CMP      R0,#+1
   \       0x72   0xD101             BNE.N    ??MX25LM51245G_WriteStatusRegister_5
   \       0x74   0x2008             MOVS     R0,#+8
   \       0x76   0xE000             B.N      ??MX25LM51245G_WriteStatusRegister_6
   \                     ??MX25LM51245G_WriteStatusRegister_5: (+1)
   \       0x78   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteStatusRegister_6: (+1)
   \       0x7A   0x9006             STR      R0,[SP, #+24]
    871            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x7C   0x0020             MOVS     R0,R4
   \       0x7E   0xB2C0             UXTB     R0,R0
   \       0x80   0x2800             CMP      R0,#+0
   \       0x82   0xD101             BNE.N    ??MX25LM51245G_WriteStatusRegister_7
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0xE000             B.N      ??MX25LM51245G_WriteStatusRegister_8
   \                     ??MX25LM51245G_WriteStatusRegister_7: (+1)
   \       0x88   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_WriteStatusRegister_8: (+1)
   \       0x8A   0x9005             STR      R0,[SP, #+20]
    872            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_STATUS_REG_CMD : MX25LM51245G_OCTA_WRITE_STATUS_REG_CMD;
   \       0x8C   0x0020             MOVS     R0,R4
   \       0x8E   0xB2C0             UXTB     R0,R0
   \       0x90   0x2800             CMP      R0,#+0
   \       0x92   0xD101             BNE.N    ??MX25LM51245G_WriteStatusRegister_9
   \       0x94   0x2001             MOVS     R0,#+1
   \       0x96   0xE001             B.N      ??MX25LM51245G_WriteStatusRegister_10
   \                     ??MX25LM51245G_WriteStatusRegister_9: (+1)
   \       0x98   0xF44F 0x70FF      MOV      R0,#+510
   \                     ??MX25LM51245G_WriteStatusRegister_10: (+1)
   \       0x9C   0x9003             STR      R0,[SP, #+12]
    873            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x9E   0x0020             MOVS     R0,R4
   \       0xA0   0xB2C0             UXTB     R0,R0
   \       0xA2   0x2800             CMP      R0,#+0
   \       0xA4   0xD101             BNE.N    ??MX25LM51245G_WriteStatusRegister_11
   \       0xA6   0x2000             MOVS     R0,#+0
   \       0xA8   0xE001             B.N      ??MX25LM51245G_WriteStatusRegister_12
   \                     ??MX25LM51245G_WriteStatusRegister_11: (+1)
   \       0xAA   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_WriteStatusRegister_12: (+1)
   \       0xAE   0x9008             STR      R0,[SP, #+32]
    874            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0xB0   0x0028             MOVS     R0,R5
   \       0xB2   0xB2C0             UXTB     R0,R0
   \       0xB4   0x2801             CMP      R0,#+1
   \       0xB6   0xD102             BNE.N    ??MX25LM51245G_WriteStatusRegister_13
   \       0xB8   0xF44F 0x6000      MOV      R0,#+2048
   \       0xBC   0xE000             B.N      ??MX25LM51245G_WriteStatusRegister_14
   \                     ??MX25LM51245G_WriteStatusRegister_13: (+1)
   \       0xBE   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteStatusRegister_14: (+1)
   \       0xC0   0x900A             STR      R0,[SP, #+40]
    875            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0xC2   0xF44F 0x5040      MOV      R0,#+12288
   \       0xC6   0x9009             STR      R0,[SP, #+36]
    876            s_command.Address            = 0U;
   \       0xC8   0x2000             MOVS     R0,#+0
   \       0xCA   0x9007             STR      R0,[SP, #+28]
    877            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xCC   0x2000             MOVS     R0,#+0
   \       0xCE   0x900C             STR      R0,[SP, #+48]
    878            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xD0   0x0020             MOVS     R0,R4
   \       0xD2   0xB2C0             UXTB     R0,R0
   \       0xD4   0x2800             CMP      R0,#+0
   \       0xD6   0xD102             BNE.N    ??MX25LM51245G_WriteStatusRegister_15
   \       0xD8   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xDC   0xE001             B.N      ??MX25LM51245G_WriteStatusRegister_16
   \                     ??MX25LM51245G_WriteStatusRegister_15: (+1)
   \       0xDE   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_WriteStatusRegister_16: (+1)
   \       0xE2   0x900F             STR      R0,[SP, #+60]
    879            s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \       0xE4   0x0028             MOVS     R0,R5
   \       0xE6   0xB2C0             UXTB     R0,R0
   \       0xE8   0x2801             CMP      R0,#+1
   \       0xEA   0xD102             BNE.N    ??MX25LM51245G_WriteStatusRegister_17
   \       0xEC   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0xF0   0xE000             B.N      ??MX25LM51245G_WriteStatusRegister_18
   \                     ??MX25LM51245G_WriteStatusRegister_17: (+1)
   \       0xF2   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteStatusRegister_18: (+1)
   \       0xF4   0x9011             STR      R0,[SP, #+68]
    880            s_command.DummyCycles        = 0U;
   \       0xF6   0x2000             MOVS     R0,#+0
   \       0xF8   0x9012             STR      R0,[SP, #+72]
    881            s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 2U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
   \       0xFA   0xB2E4             UXTB     R4,R4
   \       0xFC   0x2C00             CMP      R4,#+0
   \       0xFE   0xD101             BNE.N    ??MX25LM51245G_WriteStatusRegister_19
   \      0x100   0x2002             MOVS     R0,#+2
   \      0x102   0xE005             B.N      ??MX25LM51245G_WriteStatusRegister_20
   \                     ??MX25LM51245G_WriteStatusRegister_19: (+1)
   \      0x104   0xB2ED             UXTB     R5,R5
   \      0x106   0x2D01             CMP      R5,#+1
   \      0x108   0xD101             BNE.N    ??MX25LM51245G_WriteStatusRegister_21
   \      0x10A   0x2002             MOVS     R0,#+2
   \      0x10C   0xE000             B.N      ??MX25LM51245G_WriteStatusRegister_20
   \                     ??MX25LM51245G_WriteStatusRegister_21: (+1)
   \      0x10E   0x2001             MOVS     R0,#+1
   \                     ??MX25LM51245G_WriteStatusRegister_20: (+1)
   \      0x110   0x9010             STR      R0,[SP, #+64]
    882            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \      0x112   0x2000             MOVS     R0,#+0
   \      0x114   0x9013             STR      R0,[SP, #+76]
    883            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \      0x116   0x2000             MOVS     R0,#+0
   \      0x118   0x9014             STR      R0,[SP, #+80]
    884          
    885            /* Send the command */
    886            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x11A   0xF241 0x3488      MOVW     R4,#+5000
   \      0x11E   0x0022             MOVS     R2,R4
   \      0x120   0xA901             ADD      R1,SP,#+4
   \      0x122   0x0030             MOVS     R0,R6
   \      0x124   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x128   0x2800             CMP      R0,#+0
   \      0x12A   0xD002             BEQ.N    ??MX25LM51245G_WriteStatusRegister_22
    887            {
    888              return MX25LM51245G_ERROR;
   \      0x12C   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x130   0xE00A             B.N      ??MX25LM51245G_WriteStatusRegister_1
    889            }
    890          
    891            if (HAL_OSPI_Transmit(Ctx, reg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_WriteStatusRegister_22: (+1)
   \      0x132   0x0022             MOVS     R2,R4
   \      0x134   0x4669             MOV      R1,SP
   \      0x136   0x0030             MOVS     R0,R6
   \      0x138   0x.... 0x....      BL       HAL_OSPI_Transmit
   \      0x13C   0x2800             CMP      R0,#+0
   \      0x13E   0xD002             BEQ.N    ??MX25LM51245G_WriteStatusRegister_23
    892            {
    893              return MX25LM51245G_ERROR;
   \      0x140   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x144   0xE000             B.N      ??MX25LM51245G_WriteStatusRegister_1
    894            }
    895          
    896            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_WriteStatusRegister_23: (+1)
   \      0x146   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteStatusRegister_1: (+1)
   \      0x148   0xB015             ADD      SP,SP,#+84
   \      0x14A   0xBDF0             POP      {R4-R7,PC}
    897          }
    898          
    899          /**
    900            * @brief  Write Flash configuration register
    901            *         SPI/OPI
    902            * @param  Ctx Component object pointer
    903            * @param  Mode Interface mode
    904            * @param  Rate Transfer rate STR or DTR
    905            * @param  Value Value to write to configuration register
    906            * @retval error status
    907            */

   \                                 In section .text, align 2, keep-with-next
    908          int32_t MX25LM51245G_WriteCfgRegister(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint8_t Value)
    909          {
   \                     MX25LM51245G_WriteCfgRegister: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0xB095             SUB      SP,SP,#+84
   \        0x4   0x0006             MOVS     R6,R0
   \        0x6   0x000C             MOVS     R4,R1
   \        0x8   0x0015             MOVS     R5,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0xA801             ADD      R0,SP,#+4
   \       0x12   0x.... 0x....      BL       memset
    910            OSPI_RegularCmdTypeDef s_command = {0};
    911            uint8_t reg[2];
    912          
    913            /* SPI mode and DTR transfer not supported by memory */
    914            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x16   0x0020             MOVS     R0,R4
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_WriteCfgRegister_0
   \       0x1E   0x0028             MOVS     R0,R5
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_WriteCfgRegister_0
    915            {
    916              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE08F             B.N      ??MX25LM51245G_WriteCfgRegister_1
    917            }
    918          
    919            /* In SPI mode, the configuration register is configured with status register */
    920            if (Mode == MX25LM51245G_SPI_MODE)
   \                     ??MX25LM51245G_WriteCfgRegister_0: (+1)
   \       0x2C   0x0020             MOVS     R0,R4
   \       0x2E   0xB2C0             UXTB     R0,R0
   \       0x30   0x2800             CMP      R0,#+0
   \       0x32   0xD10F             BNE.N    ??MX25LM51245G_WriteCfgRegister_2
    921            {
    922              if (MX25LM51245G_ReadStatusRegister(Ctx, Mode, Rate, &reg[0]) != MX25LM51245G_OK)
   \       0x34   0x466B             MOV      R3,SP
   \       0x36   0x002A             MOVS     R2,R5
   \       0x38   0xB2D2             UXTB     R2,R2
   \       0x3A   0x0021             MOVS     R1,R4
   \       0x3C   0xB2C9             UXTB     R1,R1
   \       0x3E   0x0030             MOVS     R0,R6
   \       0x40   0x.... 0x....      BL       MX25LM51245G_ReadStatusRegister
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD002             BEQ.N    ??MX25LM51245G_WriteCfgRegister_3
    923              {
    924                return MX25LM51245G_ERROR;
   \       0x48   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x4C   0xE07E             B.N      ??MX25LM51245G_WriteCfgRegister_1
    925              }
    926              reg[1] = Value;
   \                     ??MX25LM51245G_WriteCfgRegister_3: (+1)
   \       0x4E   0xF88D 0x7001      STRB     R7,[SP, #+1]
   \       0x52   0xE001             B.N      ??MX25LM51245G_WriteCfgRegister_4
    927            }
    928            else
    929            {
    930              reg[0] = Value;
   \                     ??MX25LM51245G_WriteCfgRegister_2: (+1)
   \       0x54   0xF88D 0x7000      STRB     R7,[SP, #+0]
    931            }
    932          
    933            /* Initialize the writing of configuration register */
    934            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_WriteCfgRegister_4: (+1)
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0x9001             STR      R0,[SP, #+4]
    935            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0x9002             STR      R0,[SP, #+8]
    936            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x60   0x0020             MOVS     R0,R4
   \       0x62   0xB2C0             UXTB     R0,R0
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD101             BNE.N    ??MX25LM51245G_WriteCfgRegister_5
   \       0x68   0x2001             MOVS     R0,#+1
   \       0x6A   0xE000             B.N      ??MX25LM51245G_WriteCfgRegister_6
   \                     ??MX25LM51245G_WriteCfgRegister_5: (+1)
   \       0x6C   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_WriteCfgRegister_6: (+1)
   \       0x6E   0x9004             STR      R0,[SP, #+16]
    937            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x70   0x0028             MOVS     R0,R5
   \       0x72   0xB2C0             UXTB     R0,R0
   \       0x74   0x2801             CMP      R0,#+1
   \       0x76   0xD101             BNE.N    ??MX25LM51245G_WriteCfgRegister_7
   \       0x78   0x2008             MOVS     R0,#+8
   \       0x7A   0xE000             B.N      ??MX25LM51245G_WriteCfgRegister_8
   \                     ??MX25LM51245G_WriteCfgRegister_7: (+1)
   \       0x7C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteCfgRegister_8: (+1)
   \       0x7E   0x9006             STR      R0,[SP, #+24]
    938            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x80   0x0020             MOVS     R0,R4
   \       0x82   0xB2C0             UXTB     R0,R0
   \       0x84   0x2800             CMP      R0,#+0
   \       0x86   0xD101             BNE.N    ??MX25LM51245G_WriteCfgRegister_9
   \       0x88   0x2000             MOVS     R0,#+0
   \       0x8A   0xE000             B.N      ??MX25LM51245G_WriteCfgRegister_10
   \                     ??MX25LM51245G_WriteCfgRegister_9: (+1)
   \       0x8C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_WriteCfgRegister_10: (+1)
   \       0x8E   0x9005             STR      R0,[SP, #+20]
    939            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_STATUS_REG_CMD : MX25LM51245G_OCTA_WRITE_STATUS_REG_CMD;
   \       0x90   0x0020             MOVS     R0,R4
   \       0x92   0xB2C0             UXTB     R0,R0
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD101             BNE.N    ??MX25LM51245G_WriteCfgRegister_11
   \       0x98   0x2001             MOVS     R0,#+1
   \       0x9A   0xE001             B.N      ??MX25LM51245G_WriteCfgRegister_12
   \                     ??MX25LM51245G_WriteCfgRegister_11: (+1)
   \       0x9C   0xF44F 0x70FF      MOV      R0,#+510
   \                     ??MX25LM51245G_WriteCfgRegister_12: (+1)
   \       0xA0   0x9003             STR      R0,[SP, #+12]
    940            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
   \       0xA2   0x0020             MOVS     R0,R4
   \       0xA4   0xB2C0             UXTB     R0,R0
   \       0xA6   0x2800             CMP      R0,#+0
   \       0xA8   0xD101             BNE.N    ??MX25LM51245G_WriteCfgRegister_13
   \       0xAA   0x2000             MOVS     R0,#+0
   \       0xAC   0xE001             B.N      ??MX25LM51245G_WriteCfgRegister_14
   \                     ??MX25LM51245G_WriteCfgRegister_13: (+1)
   \       0xAE   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_WriteCfgRegister_14: (+1)
   \       0xB2   0x9008             STR      R0,[SP, #+32]
    941            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0xB4   0x0028             MOVS     R0,R5
   \       0xB6   0xB2C0             UXTB     R0,R0
   \       0xB8   0x2801             CMP      R0,#+1
   \       0xBA   0xD102             BNE.N    ??MX25LM51245G_WriteCfgRegister_15
   \       0xBC   0xF44F 0x6000      MOV      R0,#+2048
   \       0xC0   0xE000             B.N      ??MX25LM51245G_WriteCfgRegister_16
   \                     ??MX25LM51245G_WriteCfgRegister_15: (+1)
   \       0xC2   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteCfgRegister_16: (+1)
   \       0xC4   0x900A             STR      R0,[SP, #+40]
    942            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0xC6   0xF44F 0x5040      MOV      R0,#+12288
   \       0xCA   0x9009             STR      R0,[SP, #+36]
    943            s_command.Address            = 1U;
   \       0xCC   0x2001             MOVS     R0,#+1
   \       0xCE   0x9007             STR      R0,[SP, #+28]
    944            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xD0   0x2000             MOVS     R0,#+0
   \       0xD2   0x900C             STR      R0,[SP, #+48]
    945            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xD4   0x0020             MOVS     R0,R4
   \       0xD6   0xB2C0             UXTB     R0,R0
   \       0xD8   0x2800             CMP      R0,#+0
   \       0xDA   0xD102             BNE.N    ??MX25LM51245G_WriteCfgRegister_17
   \       0xDC   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xE0   0xE001             B.N      ??MX25LM51245G_WriteCfgRegister_18
   \                     ??MX25LM51245G_WriteCfgRegister_17: (+1)
   \       0xE2   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_WriteCfgRegister_18: (+1)
   \       0xE6   0x900F             STR      R0,[SP, #+60]
    946            s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \       0xE8   0x0028             MOVS     R0,R5
   \       0xEA   0xB2C0             UXTB     R0,R0
   \       0xEC   0x2801             CMP      R0,#+1
   \       0xEE   0xD102             BNE.N    ??MX25LM51245G_WriteCfgRegister_19
   \       0xF0   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0xF4   0xE000             B.N      ??MX25LM51245G_WriteCfgRegister_20
   \                     ??MX25LM51245G_WriteCfgRegister_19: (+1)
   \       0xF6   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteCfgRegister_20: (+1)
   \       0xF8   0x9011             STR      R0,[SP, #+68]
    947            s_command.DummyCycles        = 0U;
   \       0xFA   0x2000             MOVS     R0,#+0
   \       0xFC   0x9012             STR      R0,[SP, #+72]
    948            s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 2U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
   \       0xFE   0xB2E4             UXTB     R4,R4
   \      0x100   0x2C00             CMP      R4,#+0
   \      0x102   0xD101             BNE.N    ??MX25LM51245G_WriteCfgRegister_21
   \      0x104   0x2002             MOVS     R0,#+2
   \      0x106   0xE005             B.N      ??MX25LM51245G_WriteCfgRegister_22
   \                     ??MX25LM51245G_WriteCfgRegister_21: (+1)
   \      0x108   0xB2ED             UXTB     R5,R5
   \      0x10A   0x2D01             CMP      R5,#+1
   \      0x10C   0xD101             BNE.N    ??MX25LM51245G_WriteCfgRegister_23
   \      0x10E   0x2002             MOVS     R0,#+2
   \      0x110   0xE000             B.N      ??MX25LM51245G_WriteCfgRegister_22
   \                     ??MX25LM51245G_WriteCfgRegister_23: (+1)
   \      0x112   0x2001             MOVS     R0,#+1
   \                     ??MX25LM51245G_WriteCfgRegister_22: (+1)
   \      0x114   0x9010             STR      R0,[SP, #+64]
    949            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \      0x116   0x2000             MOVS     R0,#+0
   \      0x118   0x9013             STR      R0,[SP, #+76]
    950            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \      0x11A   0x2000             MOVS     R0,#+0
   \      0x11C   0x9014             STR      R0,[SP, #+80]
    951          
    952            /* Send the command */
    953            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x11E   0xF241 0x3488      MOVW     R4,#+5000
   \      0x122   0x0022             MOVS     R2,R4
   \      0x124   0xA901             ADD      R1,SP,#+4
   \      0x126   0x0030             MOVS     R0,R6
   \      0x128   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x12C   0x2800             CMP      R0,#+0
   \      0x12E   0xD002             BEQ.N    ??MX25LM51245G_WriteCfgRegister_24
    954            {
    955              return MX25LM51245G_ERROR;
   \      0x130   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x134   0xE00A             B.N      ??MX25LM51245G_WriteCfgRegister_1
    956            }
    957          
    958            if (HAL_OSPI_Transmit(Ctx, reg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_WriteCfgRegister_24: (+1)
   \      0x136   0x0022             MOVS     R2,R4
   \      0x138   0x4669             MOV      R1,SP
   \      0x13A   0x0030             MOVS     R0,R6
   \      0x13C   0x.... 0x....      BL       HAL_OSPI_Transmit
   \      0x140   0x2800             CMP      R0,#+0
   \      0x142   0xD002             BEQ.N    ??MX25LM51245G_WriteCfgRegister_25
    959            {
    960              return MX25LM51245G_ERROR;
   \      0x144   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x148   0xE000             B.N      ??MX25LM51245G_WriteCfgRegister_1
    961            }
    962          
    963            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_WriteCfgRegister_25: (+1)
   \      0x14A   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteCfgRegister_1: (+1)
   \      0x14C   0xB015             ADD      SP,SP,#+84
   \      0x14E   0xBDF0             POP      {R4-R7,PC}
    964          }
    965          
    966          /**
    967            * @brief  Read Flash configuration register value
    968            *         SPI/OPI
    969            * @param  Ctx Component object pointer
    970            * @param  Mode Interface mode
    971            * @param  Rate Transfer rate STR or DTR
    972            * @param  Value configuration register value pointer
    973            * @retval error status
    974            */

   \                                 In section .text, align 2, keep-with-next
    975          int32_t MX25LM51245G_ReadCfgRegister(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint8_t *Value)
    976          {
   \                     MX25LM51245G_ReadCfgRegister: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
    977            OSPI_RegularCmdTypeDef s_command = {0};
    978          
    979            /* SPI mode and DTR transfer not supported by memory */
    980            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_ReadCfgRegister_0
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_ReadCfgRegister_0
    981            {
    982              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE086             B.N      ??MX25LM51245G_ReadCfgRegister_1
    983            }
    984          
    985            /* Initialize the reading of configuration register */
    986            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_ReadCfgRegister_0: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x9000             STR      R0,[SP, #+0]
    987            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x9001             STR      R0,[SP, #+4]
    988            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x34   0x0028             MOVS     R0,R5
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD101             BNE.N    ??MX25LM51245G_ReadCfgRegister_2
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0xE000             B.N      ??MX25LM51245G_ReadCfgRegister_3
   \                     ??MX25LM51245G_ReadCfgRegister_2: (+1)
   \       0x40   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_ReadCfgRegister_3: (+1)
   \       0x42   0x9003             STR      R0,[SP, #+12]
    989            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x44   0x0030             MOVS     R0,R6
   \       0x46   0xB2C0             UXTB     R0,R0
   \       0x48   0x2801             CMP      R0,#+1
   \       0x4A   0xD101             BNE.N    ??MX25LM51245G_ReadCfgRegister_4
   \       0x4C   0x2008             MOVS     R0,#+8
   \       0x4E   0xE000             B.N      ??MX25LM51245G_ReadCfgRegister_5
   \                     ??MX25LM51245G_ReadCfgRegister_4: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfgRegister_5: (+1)
   \       0x52   0x9005             STR      R0,[SP, #+20]
    990            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x54   0x0028             MOVS     R0,R5
   \       0x56   0xB2C0             UXTB     R0,R0
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD101             BNE.N    ??MX25LM51245G_ReadCfgRegister_6
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0xE000             B.N      ??MX25LM51245G_ReadCfgRegister_7
   \                     ??MX25LM51245G_ReadCfgRegister_6: (+1)
   \       0x60   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_ReadCfgRegister_7: (+1)
   \       0x62   0x9004             STR      R0,[SP, #+16]
    991            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_CFG_REG_CMD : MX25LM51245G_OCTA_READ_CFG_REG_CMD;
   \       0x64   0x0028             MOVS     R0,R5
   \       0x66   0xB2C0             UXTB     R0,R0
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD101             BNE.N    ??MX25LM51245G_ReadCfgRegister_8
   \       0x6C   0x2015             MOVS     R0,#+21
   \       0x6E   0xE001             B.N      ??MX25LM51245G_ReadCfgRegister_9
   \                     ??MX25LM51245G_ReadCfgRegister_8: (+1)
   \       0x70   0xF241 0x50EA      MOVW     R0,#+5610
   \                     ??MX25LM51245G_ReadCfgRegister_9: (+1)
   \       0x74   0x9002             STR      R0,[SP, #+8]
    992            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0xB2C0             UXTB     R0,R0
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD101             BNE.N    ??MX25LM51245G_ReadCfgRegister_10
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0xE001             B.N      ??MX25LM51245G_ReadCfgRegister_11
   \                     ??MX25LM51245G_ReadCfgRegister_10: (+1)
   \       0x82   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_ReadCfgRegister_11: (+1)
   \       0x86   0x9007             STR      R0,[SP, #+28]
    993            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x88   0x0030             MOVS     R0,R6
   \       0x8A   0xB2C0             UXTB     R0,R0
   \       0x8C   0x2801             CMP      R0,#+1
   \       0x8E   0xD102             BNE.N    ??MX25LM51245G_ReadCfgRegister_12
   \       0x90   0xF44F 0x6000      MOV      R0,#+2048
   \       0x94   0xE000             B.N      ??MX25LM51245G_ReadCfgRegister_13
   \                     ??MX25LM51245G_ReadCfgRegister_12: (+1)
   \       0x96   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfgRegister_13: (+1)
   \       0x98   0x9009             STR      R0,[SP, #+36]
    994            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0x9A   0xF44F 0x5040      MOV      R0,#+12288
   \       0x9E   0x9008             STR      R0,[SP, #+32]
    995            s_command.Address            = 1U;
   \       0xA0   0x2001             MOVS     R0,#+1
   \       0xA2   0x9006             STR      R0,[SP, #+24]
    996            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x900B             STR      R0,[SP, #+44]
    997            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xA8   0x0028             MOVS     R0,R5
   \       0xAA   0xB2C0             UXTB     R0,R0
   \       0xAC   0x2800             CMP      R0,#+0
   \       0xAE   0xD102             BNE.N    ??MX25LM51245G_ReadCfgRegister_14
   \       0xB0   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xB4   0xE001             B.N      ??MX25LM51245G_ReadCfgRegister_15
   \                     ??MX25LM51245G_ReadCfgRegister_14: (+1)
   \       0xB6   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_ReadCfgRegister_15: (+1)
   \       0xBA   0x900E             STR      R0,[SP, #+56]
    998            s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \       0xBC   0x0030             MOVS     R0,R6
   \       0xBE   0xB2C0             UXTB     R0,R0
   \       0xC0   0x2801             CMP      R0,#+1
   \       0xC2   0xD102             BNE.N    ??MX25LM51245G_ReadCfgRegister_16
   \       0xC4   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0xC8   0xE000             B.N      ??MX25LM51245G_ReadCfgRegister_17
   \                     ??MX25LM51245G_ReadCfgRegister_16: (+1)
   \       0xCA   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfgRegister_17: (+1)
   \       0xCC   0x9010             STR      R0,[SP, #+64]
    999            s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
   \       0xCE   0xB2ED             UXTB     R5,R5
   \       0xD0   0x2D00             CMP      R5,#+0
   \       0xD2   0xD101             BNE.N    ??MX25LM51245G_ReadCfgRegister_18
   \       0xD4   0x2000             MOVS     R0,#+0
   \       0xD6   0xE006             B.N      ??MX25LM51245G_ReadCfgRegister_19
   \                     ??MX25LM51245G_ReadCfgRegister_18: (+1)
   \       0xD8   0x0030             MOVS     R0,R6
   \       0xDA   0xB2C0             UXTB     R0,R0
   \       0xDC   0x2801             CMP      R0,#+1
   \       0xDE   0xD101             BNE.N    ??MX25LM51245G_ReadCfgRegister_20
   \       0xE0   0x2005             MOVS     R0,#+5
   \       0xE2   0xE000             B.N      ??MX25LM51245G_ReadCfgRegister_19
   \                     ??MX25LM51245G_ReadCfgRegister_20: (+1)
   \       0xE4   0x2005             MOVS     R0,#+5
   \                     ??MX25LM51245G_ReadCfgRegister_19: (+1)
   \       0xE6   0x9011             STR      R0,[SP, #+68]
   1000            s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
   \       0xE8   0x0030             MOVS     R0,R6
   \       0xEA   0xB2C0             UXTB     R0,R0
   \       0xEC   0x2801             CMP      R0,#+1
   \       0xEE   0xD101             BNE.N    ??MX25LM51245G_ReadCfgRegister_21
   \       0xF0   0x2002             MOVS     R0,#+2
   \       0xF2   0xE000             B.N      ??MX25LM51245G_ReadCfgRegister_22
   \                     ??MX25LM51245G_ReadCfgRegister_21: (+1)
   \       0xF4   0x2001             MOVS     R0,#+1
   \                     ??MX25LM51245G_ReadCfgRegister_22: (+1)
   \       0xF6   0x900F             STR      R0,[SP, #+60]
   1001            s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
   \       0xF8   0xB2F6             UXTB     R6,R6
   \       0xFA   0x2E01             CMP      R6,#+1
   \       0xFC   0xD102             BNE.N    ??MX25LM51245G_ReadCfgRegister_23
   \       0xFE   0xF05F 0x5000      MOVS     R0,#+536870912
   \      0x102   0xE000             B.N      ??MX25LM51245G_ReadCfgRegister_24
   \                     ??MX25LM51245G_ReadCfgRegister_23: (+1)
   \      0x104   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfgRegister_24: (+1)
   \      0x106   0x9012             STR      R0,[SP, #+72]
   1002            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \      0x108   0x2000             MOVS     R0,#+0
   \      0x10A   0x9013             STR      R0,[SP, #+76]
   1003          
   1004            /* Send the command */
   1005            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x10C   0xF241 0x3588      MOVW     R5,#+5000
   \      0x110   0x002A             MOVS     R2,R5
   \      0x112   0x4669             MOV      R1,SP
   \      0x114   0x0020             MOVS     R0,R4
   \      0x116   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x11A   0x2800             CMP      R0,#+0
   \      0x11C   0xD002             BEQ.N    ??MX25LM51245G_ReadCfgRegister_25
   1006            {
   1007              return MX25LM51245G_ERROR;
   \      0x11E   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x122   0xE00A             B.N      ??MX25LM51245G_ReadCfgRegister_1
   1008            }
   1009          
   1010            /* Reception of the data */
   1011            if (HAL_OSPI_Receive(Ctx, Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_ReadCfgRegister_25: (+1)
   \      0x124   0x002A             MOVS     R2,R5
   \      0x126   0x0039             MOVS     R1,R7
   \      0x128   0x0020             MOVS     R0,R4
   \      0x12A   0x.... 0x....      BL       HAL_OSPI_Receive
   \      0x12E   0x2800             CMP      R0,#+0
   \      0x130   0xD002             BEQ.N    ??MX25LM51245G_ReadCfgRegister_26
   1012            {
   1013              return MX25LM51245G_ERROR;
   \      0x132   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x136   0xE000             B.N      ??MX25LM51245G_ReadCfgRegister_1
   1014            }
   1015          
   1016            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ReadCfgRegister_26: (+1)
   \      0x138   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfgRegister_1: (+1)
   \      0x13A   0xB015             ADD      SP,SP,#+84
   \      0x13C   0xBDF0             POP      {R4-R7,PC}
   1017          }
   1018          
   1019          /**
   1020            * @brief  Write Flash configuration register 2
   1021            *         SPI/OPI
   1022            * @param  Ctx Component object pointer
   1023            * @param  Mode Interface mode
   1024            * @param  Rate Transfer rate STR or DTR
   1025            * @param  Value Value to write to configuration register
   1026            * @retval error status
   1027            */

   \                                 In section .text, align 2, keep-with-next
   1028          int32_t MX25LM51245G_WriteCfg2Register(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint32_t WriteAddr, uint8_t Value)
   1029          {
   \                     MX25LM51245G_WriteCfg2Register: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
   1030            OSPI_RegularCmdTypeDef s_command = {0};
   1031          
   1032            /* SPI mode and DTR transfer not supported by memory */
   1033            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_WriteCfg2Register_0
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_WriteCfg2Register_0
   1034            {
   1035              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE079             B.N      ??MX25LM51245G_WriteCfg2Register_1
   1036            }
   1037          
   1038            /* Initialize the writing of configuration register 2 */
   1039            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_WriteCfg2Register_0: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   1040            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x9001             STR      R0,[SP, #+4]
   1041            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x34   0x0028             MOVS     R0,R5
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD101             BNE.N    ??MX25LM51245G_WriteCfg2Register_2
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0xE000             B.N      ??MX25LM51245G_WriteCfg2Register_3
   \                     ??MX25LM51245G_WriteCfg2Register_2: (+1)
   \       0x40   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_WriteCfg2Register_3: (+1)
   \       0x42   0x9003             STR      R0,[SP, #+12]
   1042            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x44   0x0030             MOVS     R0,R6
   \       0x46   0xB2C0             UXTB     R0,R0
   \       0x48   0x2801             CMP      R0,#+1
   \       0x4A   0xD101             BNE.N    ??MX25LM51245G_WriteCfg2Register_4
   \       0x4C   0x2008             MOVS     R0,#+8
   \       0x4E   0xE000             B.N      ??MX25LM51245G_WriteCfg2Register_5
   \                     ??MX25LM51245G_WriteCfg2Register_4: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteCfg2Register_5: (+1)
   \       0x52   0x9005             STR      R0,[SP, #+20]
   1043            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x54   0x0028             MOVS     R0,R5
   \       0x56   0xB2C0             UXTB     R0,R0
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD101             BNE.N    ??MX25LM51245G_WriteCfg2Register_6
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0xE000             B.N      ??MX25LM51245G_WriteCfg2Register_7
   \                     ??MX25LM51245G_WriteCfg2Register_6: (+1)
   \       0x60   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_WriteCfg2Register_7: (+1)
   \       0x62   0x9004             STR      R0,[SP, #+16]
   1044            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_CFG_REG2_CMD : MX25LM51245G_OCTA_WRITE_CFG_REG2_CMD;
   \       0x64   0x0028             MOVS     R0,R5
   \       0x66   0xB2C0             UXTB     R0,R0
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD101             BNE.N    ??MX25LM51245G_WriteCfg2Register_8
   \       0x6C   0x2072             MOVS     R0,#+114
   \       0x6E   0xE001             B.N      ??MX25LM51245G_WriteCfg2Register_9
   \                     ??MX25LM51245G_WriteCfg2Register_8: (+1)
   \       0x70   0xF247 0x208D      MOVW     R0,#+29325
   \                     ??MX25LM51245G_WriteCfg2Register_9: (+1)
   \       0x74   0x9002             STR      R0,[SP, #+8]
   1045            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0xB2C0             UXTB     R0,R0
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD102             BNE.N    ??MX25LM51245G_WriteCfg2Register_10
   \       0x7E   0xF44F 0x7080      MOV      R0,#+256
   \       0x82   0xE001             B.N      ??MX25LM51245G_WriteCfg2Register_11
   \                     ??MX25LM51245G_WriteCfg2Register_10: (+1)
   \       0x84   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_WriteCfg2Register_11: (+1)
   \       0x88   0x9007             STR      R0,[SP, #+28]
   1046            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x8A   0x0030             MOVS     R0,R6
   \       0x8C   0xB2C0             UXTB     R0,R0
   \       0x8E   0x2801             CMP      R0,#+1
   \       0x90   0xD102             BNE.N    ??MX25LM51245G_WriteCfg2Register_12
   \       0x92   0xF44F 0x6000      MOV      R0,#+2048
   \       0x96   0xE000             B.N      ??MX25LM51245G_WriteCfg2Register_13
   \                     ??MX25LM51245G_WriteCfg2Register_12: (+1)
   \       0x98   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteCfg2Register_13: (+1)
   \       0x9A   0x9009             STR      R0,[SP, #+36]
   1047            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0x9C   0xF44F 0x5040      MOV      R0,#+12288
   \       0xA0   0x9008             STR      R0,[SP, #+32]
   1048            s_command.Address            = WriteAddr;
   \       0xA2   0x9706             STR      R7,[SP, #+24]
   1049            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x900B             STR      R0,[SP, #+44]
   1050            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xA8   0x0028             MOVS     R0,R5
   \       0xAA   0xB2C0             UXTB     R0,R0
   \       0xAC   0x2800             CMP      R0,#+0
   \       0xAE   0xD102             BNE.N    ??MX25LM51245G_WriteCfg2Register_14
   \       0xB0   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xB4   0xE001             B.N      ??MX25LM51245G_WriteCfg2Register_15
   \                     ??MX25LM51245G_WriteCfg2Register_14: (+1)
   \       0xB6   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_WriteCfg2Register_15: (+1)
   \       0xBA   0x900E             STR      R0,[SP, #+56]
   1051            s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \       0xBC   0x0030             MOVS     R0,R6
   \       0xBE   0xB2C0             UXTB     R0,R0
   \       0xC0   0x2801             CMP      R0,#+1
   \       0xC2   0xD102             BNE.N    ??MX25LM51245G_WriteCfg2Register_16
   \       0xC4   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0xC8   0xE000             B.N      ??MX25LM51245G_WriteCfg2Register_17
   \                     ??MX25LM51245G_WriteCfg2Register_16: (+1)
   \       0xCA   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteCfg2Register_17: (+1)
   \       0xCC   0x9010             STR      R0,[SP, #+64]
   1052            s_command.DummyCycles        = 0U;
   \       0xCE   0x2000             MOVS     R0,#+0
   \       0xD0   0x9011             STR      R0,[SP, #+68]
   1053            s_command.NbData             = (Mode == MX25LM51245G_SPI_MODE) ? 1U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U);
   \       0xD2   0xB2ED             UXTB     R5,R5
   \       0xD4   0x2D00             CMP      R5,#+0
   \       0xD6   0xD101             BNE.N    ??MX25LM51245G_WriteCfg2Register_18
   \       0xD8   0x2001             MOVS     R0,#+1
   \       0xDA   0xE005             B.N      ??MX25LM51245G_WriteCfg2Register_19
   \                     ??MX25LM51245G_WriteCfg2Register_18: (+1)
   \       0xDC   0xB2F6             UXTB     R6,R6
   \       0xDE   0x2E01             CMP      R6,#+1
   \       0xE0   0xD101             BNE.N    ??MX25LM51245G_WriteCfg2Register_20
   \       0xE2   0x2002             MOVS     R0,#+2
   \       0xE4   0xE000             B.N      ??MX25LM51245G_WriteCfg2Register_19
   \                     ??MX25LM51245G_WriteCfg2Register_20: (+1)
   \       0xE6   0x2001             MOVS     R0,#+1
   \                     ??MX25LM51245G_WriteCfg2Register_19: (+1)
   \       0xE8   0x900F             STR      R0,[SP, #+60]
   1054            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0xEA   0x2000             MOVS     R0,#+0
   \       0xEC   0x9012             STR      R0,[SP, #+72]
   1055            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0xEE   0x2000             MOVS     R0,#+0
   \       0xF0   0x9013             STR      R0,[SP, #+76]
   1056          
   1057            /* Send the command */
   1058            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0xF2   0xF241 0x3588      MOVW     R5,#+5000
   \       0xF6   0x002A             MOVS     R2,R5
   \       0xF8   0x4669             MOV      R1,SP
   \       0xFA   0x0020             MOVS     R0,R4
   \       0xFC   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x100   0x2800             CMP      R0,#+0
   \      0x102   0xD002             BEQ.N    ??MX25LM51245G_WriteCfg2Register_21
   1059            {
   1060              return MX25LM51245G_ERROR;
   \      0x104   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x108   0xE00A             B.N      ??MX25LM51245G_WriteCfg2Register_1
   1061            }
   1062          
   1063            if (HAL_OSPI_Transmit(Ctx, &Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_WriteCfg2Register_21: (+1)
   \      0x10A   0x002A             MOVS     R2,R5
   \      0x10C   0xA91A             ADD      R1,SP,#+104
   \      0x10E   0x0020             MOVS     R0,R4
   \      0x110   0x.... 0x....      BL       HAL_OSPI_Transmit
   \      0x114   0x2800             CMP      R0,#+0
   \      0x116   0xD002             BEQ.N    ??MX25LM51245G_WriteCfg2Register_22
   1064            {
   1065              return MX25LM51245G_ERROR;
   \      0x118   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x11C   0xE000             B.N      ??MX25LM51245G_WriteCfg2Register_1
   1066            }
   1067          
   1068            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_WriteCfg2Register_22: (+1)
   \      0x11E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteCfg2Register_1: (+1)
   \      0x120   0xB015             ADD      SP,SP,#+84
   \      0x122   0xBDF0             POP      {R4-R7,PC}
   1069          }
   1070          
   1071          /**
   1072            * @brief  Read Flash configuration register 2 value
   1073            *         SPI/OPI
   1074            * @param  Ctx Component object pointer
   1075            * @param  Mode Interface mode
   1076            * @param  Rate Transfer rate STR or DTR
   1077            * @param  Value configuration register 2 value pointer
   1078            * @retval error status
   1079            */

   \                                 In section .text, align 2, keep-with-next
   1080          int32_t MX25LM51245G_ReadCfg2Register(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint32_t ReadAddr, uint8_t *Value)
   1081          {
   \                     MX25LM51245G_ReadCfg2Register: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
   1082            OSPI_RegularCmdTypeDef s_command = {0};
   1083          
   1084            /* SPI mode and DTR transfer not supported by memory */
   1085            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_ReadCfg2Register_0
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_ReadCfg2Register_0
   1086            {
   1087              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE086             B.N      ??MX25LM51245G_ReadCfg2Register_1
   1088            }
   1089          
   1090            /* Initialize the reading of status register */
   1091            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_ReadCfg2Register_0: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   1092            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x9001             STR      R0,[SP, #+4]
   1093            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x34   0x0028             MOVS     R0,R5
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD101             BNE.N    ??MX25LM51245G_ReadCfg2Register_2
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0xE000             B.N      ??MX25LM51245G_ReadCfg2Register_3
   \                     ??MX25LM51245G_ReadCfg2Register_2: (+1)
   \       0x40   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_ReadCfg2Register_3: (+1)
   \       0x42   0x9003             STR      R0,[SP, #+12]
   1094            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x44   0x0030             MOVS     R0,R6
   \       0x46   0xB2C0             UXTB     R0,R0
   \       0x48   0x2801             CMP      R0,#+1
   \       0x4A   0xD101             BNE.N    ??MX25LM51245G_ReadCfg2Register_4
   \       0x4C   0x2008             MOVS     R0,#+8
   \       0x4E   0xE000             B.N      ??MX25LM51245G_ReadCfg2Register_5
   \                     ??MX25LM51245G_ReadCfg2Register_4: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfg2Register_5: (+1)
   \       0x52   0x9005             STR      R0,[SP, #+20]
   1095            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x54   0x0028             MOVS     R0,R5
   \       0x56   0xB2C0             UXTB     R0,R0
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD101             BNE.N    ??MX25LM51245G_ReadCfg2Register_6
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0xE000             B.N      ??MX25LM51245G_ReadCfg2Register_7
   \                     ??MX25LM51245G_ReadCfg2Register_6: (+1)
   \       0x60   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_ReadCfg2Register_7: (+1)
   \       0x62   0x9004             STR      R0,[SP, #+16]
   1096            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_CFG_REG2_CMD : MX25LM51245G_OCTA_READ_CFG_REG2_CMD;
   \       0x64   0x0028             MOVS     R0,R5
   \       0x66   0xB2C0             UXTB     R0,R0
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD101             BNE.N    ??MX25LM51245G_ReadCfg2Register_8
   \       0x6C   0x2071             MOVS     R0,#+113
   \       0x6E   0xE001             B.N      ??MX25LM51245G_ReadCfg2Register_9
   \                     ??MX25LM51245G_ReadCfg2Register_8: (+1)
   \       0x70   0xF247 0x108E      MOVW     R0,#+29070
   \                     ??MX25LM51245G_ReadCfg2Register_9: (+1)
   \       0x74   0x9002             STR      R0,[SP, #+8]
   1097            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_1_LINE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0xB2C0             UXTB     R0,R0
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD102             BNE.N    ??MX25LM51245G_ReadCfg2Register_10
   \       0x7E   0xF44F 0x7080      MOV      R0,#+256
   \       0x82   0xE001             B.N      ??MX25LM51245G_ReadCfg2Register_11
   \                     ??MX25LM51245G_ReadCfg2Register_10: (+1)
   \       0x84   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_ReadCfg2Register_11: (+1)
   \       0x88   0x9007             STR      R0,[SP, #+28]
   1098            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x8A   0x0030             MOVS     R0,R6
   \       0x8C   0xB2C0             UXTB     R0,R0
   \       0x8E   0x2801             CMP      R0,#+1
   \       0x90   0xD102             BNE.N    ??MX25LM51245G_ReadCfg2Register_12
   \       0x92   0xF44F 0x6000      MOV      R0,#+2048
   \       0x96   0xE000             B.N      ??MX25LM51245G_ReadCfg2Register_13
   \                     ??MX25LM51245G_ReadCfg2Register_12: (+1)
   \       0x98   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfg2Register_13: (+1)
   \       0x9A   0x9009             STR      R0,[SP, #+36]
   1099            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0x9C   0xF44F 0x5040      MOV      R0,#+12288
   \       0xA0   0x9008             STR      R0,[SP, #+32]
   1100            s_command.Address            = ReadAddr;
   \       0xA2   0x9706             STR      R7,[SP, #+24]
   1101            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x900B             STR      R0,[SP, #+44]
   1102            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xA8   0x0028             MOVS     R0,R5
   \       0xAA   0xB2C0             UXTB     R0,R0
   \       0xAC   0x2800             CMP      R0,#+0
   \       0xAE   0xD102             BNE.N    ??MX25LM51245G_ReadCfg2Register_14
   \       0xB0   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xB4   0xE001             B.N      ??MX25LM51245G_ReadCfg2Register_15
   \                     ??MX25LM51245G_ReadCfg2Register_14: (+1)
   \       0xB6   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_ReadCfg2Register_15: (+1)
   \       0xBA   0x900E             STR      R0,[SP, #+56]
   1103            s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \       0xBC   0x0030             MOVS     R0,R6
   \       0xBE   0xB2C0             UXTB     R0,R0
   \       0xC0   0x2801             CMP      R0,#+1
   \       0xC2   0xD102             BNE.N    ??MX25LM51245G_ReadCfg2Register_16
   \       0xC4   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0xC8   0xE000             B.N      ??MX25LM51245G_ReadCfg2Register_17
   \                     ??MX25LM51245G_ReadCfg2Register_16: (+1)
   \       0xCA   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfg2Register_17: (+1)
   \       0xCC   0x9010             STR      R0,[SP, #+64]
   1104            s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
   \       0xCE   0xB2ED             UXTB     R5,R5
   \       0xD0   0x2D00             CMP      R5,#+0
   \       0xD2   0xD101             BNE.N    ??MX25LM51245G_ReadCfg2Register_18
   \       0xD4   0x2000             MOVS     R0,#+0
   \       0xD6   0xE006             B.N      ??MX25LM51245G_ReadCfg2Register_19
   \                     ??MX25LM51245G_ReadCfg2Register_18: (+1)
   \       0xD8   0x0030             MOVS     R0,R6
   \       0xDA   0xB2C0             UXTB     R0,R0
   \       0xDC   0x2801             CMP      R0,#+1
   \       0xDE   0xD101             BNE.N    ??MX25LM51245G_ReadCfg2Register_20
   \       0xE0   0x2005             MOVS     R0,#+5
   \       0xE2   0xE000             B.N      ??MX25LM51245G_ReadCfg2Register_19
   \                     ??MX25LM51245G_ReadCfg2Register_20: (+1)
   \       0xE4   0x2005             MOVS     R0,#+5
   \                     ??MX25LM51245G_ReadCfg2Register_19: (+1)
   \       0xE6   0x9011             STR      R0,[SP, #+68]
   1105            s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
   \       0xE8   0x0030             MOVS     R0,R6
   \       0xEA   0xB2C0             UXTB     R0,R0
   \       0xEC   0x2801             CMP      R0,#+1
   \       0xEE   0xD101             BNE.N    ??MX25LM51245G_ReadCfg2Register_21
   \       0xF0   0x2002             MOVS     R0,#+2
   \       0xF2   0xE000             B.N      ??MX25LM51245G_ReadCfg2Register_22
   \                     ??MX25LM51245G_ReadCfg2Register_21: (+1)
   \       0xF4   0x2001             MOVS     R0,#+1
   \                     ??MX25LM51245G_ReadCfg2Register_22: (+1)
   \       0xF6   0x900F             STR      R0,[SP, #+60]
   1106            s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
   \       0xF8   0xB2F6             UXTB     R6,R6
   \       0xFA   0x2E01             CMP      R6,#+1
   \       0xFC   0xD102             BNE.N    ??MX25LM51245G_ReadCfg2Register_23
   \       0xFE   0xF05F 0x5000      MOVS     R0,#+536870912
   \      0x102   0xE000             B.N      ??MX25LM51245G_ReadCfg2Register_24
   \                     ??MX25LM51245G_ReadCfg2Register_23: (+1)
   \      0x104   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfg2Register_24: (+1)
   \      0x106   0x9012             STR      R0,[SP, #+72]
   1107            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \      0x108   0x2000             MOVS     R0,#+0
   \      0x10A   0x9013             STR      R0,[SP, #+76]
   1108          
   1109            /* Send the command */
   1110            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x10C   0xF241 0x3588      MOVW     R5,#+5000
   \      0x110   0x002A             MOVS     R2,R5
   \      0x112   0x4669             MOV      R1,SP
   \      0x114   0x0020             MOVS     R0,R4
   \      0x116   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x11A   0x2800             CMP      R0,#+0
   \      0x11C   0xD002             BEQ.N    ??MX25LM51245G_ReadCfg2Register_25
   1111            {
   1112              return MX25LM51245G_ERROR;
   \      0x11E   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x122   0xE00A             B.N      ??MX25LM51245G_ReadCfg2Register_1
   1113            }
   \                     ??MX25LM51245G_ReadCfg2Register_25: (+1)
   \      0x124   0x991A             LDR      R1,[SP, #+104]
   1114          
   1115            /* Reception of the data */
   1116            if (HAL_OSPI_Receive(Ctx, Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x126   0x002A             MOVS     R2,R5
   \      0x128   0x0020             MOVS     R0,R4
   \      0x12A   0x.... 0x....      BL       HAL_OSPI_Receive
   \      0x12E   0x2800             CMP      R0,#+0
   \      0x130   0xD002             BEQ.N    ??MX25LM51245G_ReadCfg2Register_26
   1117            {
   1118              return MX25LM51245G_ERROR;
   \      0x132   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x136   0xE000             B.N      ??MX25LM51245G_ReadCfg2Register_1
   1119            }
   1120          
   1121            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ReadCfg2Register_26: (+1)
   \      0x138   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadCfg2Register_1: (+1)
   \      0x13A   0xB015             ADD      SP,SP,#+84
   \      0x13C   0xBDF0             POP      {R4-R7,PC}
   1122          }
   1123          
   1124          /**
   1125            * @brief  Write Flash Security register
   1126            *         SPI/OPI
   1127            * @param  Ctx Component object pointer
   1128            * @param  Mode Interface mode
   1129            * @param  Rate Transfer rate STR or DTR
   1130            * @param  Value Value to write to Security register
   1131            * @retval error status
   1132            */

   \                                 In section .text, align 2, keep-with-next
   1133          int32_t MX25LM51245G_WriteSecurityRegister(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint8_t Value)
   1134          {
   \                     MX25LM51245G_WriteSecurityRegister: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   1135            /* Prevent unused argument(s) compilation warning */
   1136            UNUSED(Value);
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       memset
   1137          
   1138            OSPI_RegularCmdTypeDef s_command = {0};
   1139          
   1140            /* SPI mode and DTR transfer not supported by memory */
   1141            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??MX25LM51245G_WriteSecurityRegister_0
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD102             BNE.N    ??MX25LM51245G_WriteSecurityRegister_0
   1142            {
   1143              return MX25LM51245G_ERROR;
   \       0x24   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x28   0xE03A             B.N      ??MX25LM51245G_WriteSecurityRegister_1
   1144            }
   1145          
   1146            /* Initialize the write of security register */
   1147            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_WriteSecurityRegister_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
   1148            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x9001             STR      R0,[SP, #+4]
   1149            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??MX25LM51245G_WriteSecurityRegister_2
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xE000             B.N      ??MX25LM51245G_WriteSecurityRegister_3
   \                     ??MX25LM51245G_WriteSecurityRegister_2: (+1)
   \       0x3E   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_WriteSecurityRegister_3: (+1)
   \       0x40   0x9003             STR      R0,[SP, #+12]
   1150            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x2E01             CMP      R6,#+1
   \       0x46   0xD101             BNE.N    ??MX25LM51245G_WriteSecurityRegister_4
   \       0x48   0x2008             MOVS     R0,#+8
   \       0x4A   0xE000             B.N      ??MX25LM51245G_WriteSecurityRegister_5
   \                     ??MX25LM51245G_WriteSecurityRegister_4: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteSecurityRegister_5: (+1)
   \       0x4E   0x9005             STR      R0,[SP, #+20]
   1151            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_WriteSecurityRegister_6
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_WriteSecurityRegister_7
   \                     ??MX25LM51245G_WriteSecurityRegister_6: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_WriteSecurityRegister_7: (+1)
   \       0x5E   0x9004             STR      R0,[SP, #+16]
   1152            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_WRITE_SECURITY_REG_CMD : MX25LM51245G_OCTA_WRITE_SECURITY_REG_CMD;
   \       0x60   0xB2ED             UXTB     R5,R5
   \       0x62   0x2D00             CMP      R5,#+0
   \       0x64   0xD101             BNE.N    ??MX25LM51245G_WriteSecurityRegister_8
   \       0x66   0x202F             MOVS     R0,#+47
   \       0x68   0xE001             B.N      ??MX25LM51245G_WriteSecurityRegister_9
   \                     ??MX25LM51245G_WriteSecurityRegister_8: (+1)
   \       0x6A   0xF642 0x70D0      MOVW     R0,#+12240
   \                     ??MX25LM51245G_WriteSecurityRegister_9: (+1)
   \       0x6E   0x9002             STR      R0,[SP, #+8]
   1153            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0x9007             STR      R0,[SP, #+28]
   1154            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x900B             STR      R0,[SP, #+44]
   1155            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0x900E             STR      R0,[SP, #+56]
   1156            s_command.DummyCycles        = 0U;
   \       0x7C   0x2000             MOVS     R0,#+0
   \       0x7E   0x9011             STR      R0,[SP, #+68]
   1157            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x9012             STR      R0,[SP, #+72]
   1158            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x9013             STR      R0,[SP, #+76]
   1159          
   1160            /* Send the command */
   1161            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x88   0xF241 0x3288      MOVW     R2,#+5000
   \       0x8C   0x4669             MOV      R1,SP
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD002             BEQ.N    ??MX25LM51245G_WriteSecurityRegister_10
   1162            {
   1163              return MX25LM51245G_ERROR;
   \       0x98   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x9C   0xE000             B.N      ??MX25LM51245G_WriteSecurityRegister_1
   1164            }
   1165          
   1166            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_WriteSecurityRegister_10: (+1)
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_WriteSecurityRegister_1: (+1)
   \       0xA0   0xB014             ADD      SP,SP,#+80
   \       0xA2   0xBD70             POP      {R4-R6,PC}
   1167          }
   1168          
   1169          /**
   1170            * @brief  Read Flash Security register value
   1171            *         SPI/OPI
   1172            * @param  Ctx Component object pointer
   1173            * @param  Mode Interface mode
   1174            * @param  Rate Transfer rate STR or DTR
   1175            * @param  Value Security register value pointer
   1176            * @retval error status
   1177            */

   \                                 In section .text, align 2, keep-with-next
   1178          int32_t MX25LM51245G_ReadSecurityRegister(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint8_t *Value)
   1179          {
   \                     MX25LM51245G_ReadSecurityRegister: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
   1180            OSPI_RegularCmdTypeDef s_command = {0};
   1181          
   1182            /* SPI mode and DTR transfer not supported by memory */
   1183            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_ReadSecurityRegister_0
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_ReadSecurityRegister_0
   1184            {
   1185              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE086             B.N      ??MX25LM51245G_ReadSecurityRegister_1
   1186            }
   1187          
   1188            /* Initialize the reading of security register */
   1189            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_ReadSecurityRegister_0: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   1190            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x9001             STR      R0,[SP, #+4]
   1191            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x34   0x0028             MOVS     R0,R5
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD101             BNE.N    ??MX25LM51245G_ReadSecurityRegister_2
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0xE000             B.N      ??MX25LM51245G_ReadSecurityRegister_3
   \                     ??MX25LM51245G_ReadSecurityRegister_2: (+1)
   \       0x40   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_ReadSecurityRegister_3: (+1)
   \       0x42   0x9003             STR      R0,[SP, #+12]
   1192            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x44   0x0030             MOVS     R0,R6
   \       0x46   0xB2C0             UXTB     R0,R0
   \       0x48   0x2801             CMP      R0,#+1
   \       0x4A   0xD101             BNE.N    ??MX25LM51245G_ReadSecurityRegister_4
   \       0x4C   0x2008             MOVS     R0,#+8
   \       0x4E   0xE000             B.N      ??MX25LM51245G_ReadSecurityRegister_5
   \                     ??MX25LM51245G_ReadSecurityRegister_4: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadSecurityRegister_5: (+1)
   \       0x52   0x9005             STR      R0,[SP, #+20]
   1193            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x54   0x0028             MOVS     R0,R5
   \       0x56   0xB2C0             UXTB     R0,R0
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD101             BNE.N    ??MX25LM51245G_ReadSecurityRegister_6
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0xE000             B.N      ??MX25LM51245G_ReadSecurityRegister_7
   \                     ??MX25LM51245G_ReadSecurityRegister_6: (+1)
   \       0x60   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_ReadSecurityRegister_7: (+1)
   \       0x62   0x9004             STR      R0,[SP, #+16]
   1194            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_SECURITY_REG_CMD : MX25LM51245G_OCTA_READ_SECURITY_REG_CMD;
   \       0x64   0x0028             MOVS     R0,R5
   \       0x66   0xB2C0             UXTB     R0,R0
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD101             BNE.N    ??MX25LM51245G_ReadSecurityRegister_8
   \       0x6C   0x202B             MOVS     R0,#+43
   \       0x6E   0xE001             B.N      ??MX25LM51245G_ReadSecurityRegister_9
   \                     ??MX25LM51245G_ReadSecurityRegister_8: (+1)
   \       0x70   0xF642 0x30D4      MOVW     R0,#+11220
   \                     ??MX25LM51245G_ReadSecurityRegister_9: (+1)
   \       0x74   0x9002             STR      R0,[SP, #+8]
   1195            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0xB2C0             UXTB     R0,R0
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD101             BNE.N    ??MX25LM51245G_ReadSecurityRegister_10
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0xE001             B.N      ??MX25LM51245G_ReadSecurityRegister_11
   \                     ??MX25LM51245G_ReadSecurityRegister_10: (+1)
   \       0x82   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_ReadSecurityRegister_11: (+1)
   \       0x86   0x9007             STR      R0,[SP, #+28]
   1196            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x88   0x0030             MOVS     R0,R6
   \       0x8A   0xB2C0             UXTB     R0,R0
   \       0x8C   0x2801             CMP      R0,#+1
   \       0x8E   0xD102             BNE.N    ??MX25LM51245G_ReadSecurityRegister_12
   \       0x90   0xF44F 0x6000      MOV      R0,#+2048
   \       0x94   0xE000             B.N      ??MX25LM51245G_ReadSecurityRegister_13
   \                     ??MX25LM51245G_ReadSecurityRegister_12: (+1)
   \       0x96   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadSecurityRegister_13: (+1)
   \       0x98   0x9009             STR      R0,[SP, #+36]
   1197            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0x9A   0xF44F 0x5040      MOV      R0,#+12288
   \       0x9E   0x9008             STR      R0,[SP, #+32]
   1198            s_command.Address            = 0U;
   \       0xA0   0x2000             MOVS     R0,#+0
   \       0xA2   0x9006             STR      R0,[SP, #+24]
   1199            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x900B             STR      R0,[SP, #+44]
   1200            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xA8   0x0028             MOVS     R0,R5
   \       0xAA   0xB2C0             UXTB     R0,R0
   \       0xAC   0x2800             CMP      R0,#+0
   \       0xAE   0xD102             BNE.N    ??MX25LM51245G_ReadSecurityRegister_14
   \       0xB0   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xB4   0xE001             B.N      ??MX25LM51245G_ReadSecurityRegister_15
   \                     ??MX25LM51245G_ReadSecurityRegister_14: (+1)
   \       0xB6   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_ReadSecurityRegister_15: (+1)
   \       0xBA   0x900E             STR      R0,[SP, #+56]
   1201            s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \       0xBC   0x0030             MOVS     R0,R6
   \       0xBE   0xB2C0             UXTB     R0,R0
   \       0xC0   0x2801             CMP      R0,#+1
   \       0xC2   0xD102             BNE.N    ??MX25LM51245G_ReadSecurityRegister_16
   \       0xC4   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0xC8   0xE000             B.N      ??MX25LM51245G_ReadSecurityRegister_17
   \                     ??MX25LM51245G_ReadSecurityRegister_16: (+1)
   \       0xCA   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadSecurityRegister_17: (+1)
   \       0xCC   0x9010             STR      R0,[SP, #+64]
   1202            s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
   \       0xCE   0xB2ED             UXTB     R5,R5
   \       0xD0   0x2D00             CMP      R5,#+0
   \       0xD2   0xD101             BNE.N    ??MX25LM51245G_ReadSecurityRegister_18
   \       0xD4   0x2000             MOVS     R0,#+0
   \       0xD6   0xE006             B.N      ??MX25LM51245G_ReadSecurityRegister_19
   \                     ??MX25LM51245G_ReadSecurityRegister_18: (+1)
   \       0xD8   0x0030             MOVS     R0,R6
   \       0xDA   0xB2C0             UXTB     R0,R0
   \       0xDC   0x2801             CMP      R0,#+1
   \       0xDE   0xD101             BNE.N    ??MX25LM51245G_ReadSecurityRegister_20
   \       0xE0   0x2005             MOVS     R0,#+5
   \       0xE2   0xE000             B.N      ??MX25LM51245G_ReadSecurityRegister_19
   \                     ??MX25LM51245G_ReadSecurityRegister_20: (+1)
   \       0xE4   0x2005             MOVS     R0,#+5
   \                     ??MX25LM51245G_ReadSecurityRegister_19: (+1)
   \       0xE6   0x9011             STR      R0,[SP, #+68]
   1203            s_command.NbData             = (Rate == MX25LM51245G_DTR_TRANSFER) ? 2U : 1U;
   \       0xE8   0x0030             MOVS     R0,R6
   \       0xEA   0xB2C0             UXTB     R0,R0
   \       0xEC   0x2801             CMP      R0,#+1
   \       0xEE   0xD101             BNE.N    ??MX25LM51245G_ReadSecurityRegister_21
   \       0xF0   0x2002             MOVS     R0,#+2
   \       0xF2   0xE000             B.N      ??MX25LM51245G_ReadSecurityRegister_22
   \                     ??MX25LM51245G_ReadSecurityRegister_21: (+1)
   \       0xF4   0x2001             MOVS     R0,#+1
   \                     ??MX25LM51245G_ReadSecurityRegister_22: (+1)
   \       0xF6   0x900F             STR      R0,[SP, #+60]
   1204            s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
   \       0xF8   0xB2F6             UXTB     R6,R6
   \       0xFA   0x2E01             CMP      R6,#+1
   \       0xFC   0xD102             BNE.N    ??MX25LM51245G_ReadSecurityRegister_23
   \       0xFE   0xF05F 0x5000      MOVS     R0,#+536870912
   \      0x102   0xE000             B.N      ??MX25LM51245G_ReadSecurityRegister_24
   \                     ??MX25LM51245G_ReadSecurityRegister_23: (+1)
   \      0x104   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadSecurityRegister_24: (+1)
   \      0x106   0x9012             STR      R0,[SP, #+72]
   1205            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \      0x108   0x2000             MOVS     R0,#+0
   \      0x10A   0x9013             STR      R0,[SP, #+76]
   1206          
   1207            /* Send the command */
   1208            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x10C   0xF241 0x3588      MOVW     R5,#+5000
   \      0x110   0x002A             MOVS     R2,R5
   \      0x112   0x4669             MOV      R1,SP
   \      0x114   0x0020             MOVS     R0,R4
   \      0x116   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x11A   0x2800             CMP      R0,#+0
   \      0x11C   0xD002             BEQ.N    ??MX25LM51245G_ReadSecurityRegister_25
   1209            {
   1210              return MX25LM51245G_ERROR;
   \      0x11E   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x122   0xE00A             B.N      ??MX25LM51245G_ReadSecurityRegister_1
   1211            }
   1212          
   1213            /* Reception of the data */
   1214            if (HAL_OSPI_Receive(Ctx, Value, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_ReadSecurityRegister_25: (+1)
   \      0x124   0x002A             MOVS     R2,R5
   \      0x126   0x0039             MOVS     R1,R7
   \      0x128   0x0020             MOVS     R0,R4
   \      0x12A   0x.... 0x....      BL       HAL_OSPI_Receive
   \      0x12E   0x2800             CMP      R0,#+0
   \      0x130   0xD002             BEQ.N    ??MX25LM51245G_ReadSecurityRegister_26
   1215            {
   1216              return MX25LM51245G_ERROR;
   \      0x132   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x136   0xE000             B.N      ??MX25LM51245G_ReadSecurityRegister_1
   1217            }
   1218          
   1219            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ReadSecurityRegister_26: (+1)
   \      0x138   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadSecurityRegister_1: (+1)
   \      0x13A   0xB015             ADD      SP,SP,#+84
   \      0x13C   0xBDF0             POP      {R4-R7,PC}
   1220          }
   1221          
   1222          
   1223          /* ID Commands ****************************************************************/
   1224          /**
   1225            * @brief  Read Flash 3 Byte IDs.
   1226            *         Manufacturer ID, Memory type, Memory density
   1227            *         SPI/OPI; 1-0-1/1-0-8
   1228            * @param  Ctx Component object pointer
   1229            * @param  Mode Interface mode
   1230            * @param  ID 3 bytes IDs pointer
   1231            * @param  DualFlash Dual flash mode state
   1232            * @retval error status
   1233            */

   \                                 In section .text, align 2, keep-with-next
   1234          int32_t MX25LM51245G_ReadID(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate, uint8_t *ID)
   1235          {
   \                     MX25LM51245G_ReadID: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   \        0xC   0x2250             MOVS     R2,#+80
   \        0xE   0x2100             MOVS     R1,#+0
   \       0x10   0x4668             MOV      R0,SP
   \       0x12   0x.... 0x....      BL       memset
   1236            OSPI_RegularCmdTypeDef s_command = {0};
   1237          
   1238            /* SPI mode and DTR transfer not supported by memory */
   1239            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x16   0x0028             MOVS     R0,R5
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD106             BNE.N    ??MX25LM51245G_ReadID_0
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0x2801             CMP      R0,#+1
   \       0x24   0xD102             BNE.N    ??MX25LM51245G_ReadID_0
   1240            {
   1241              return MX25LM51245G_ERROR;
   \       0x26   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x2A   0xE080             B.N      ??MX25LM51245G_ReadID_1
   1242            }
   1243          
   1244            /* Initialize the read ID command */
   1245            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_ReadID_0: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x9000             STR      R0,[SP, #+0]
   1246            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x9001             STR      R0,[SP, #+4]
   1247            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x34   0x0028             MOVS     R0,R5
   \       0x36   0xB2C0             UXTB     R0,R0
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD101             BNE.N    ??MX25LM51245G_ReadID_2
   \       0x3C   0x2001             MOVS     R0,#+1
   \       0x3E   0xE000             B.N      ??MX25LM51245G_ReadID_3
   \                     ??MX25LM51245G_ReadID_2: (+1)
   \       0x40   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_ReadID_3: (+1)
   \       0x42   0x9003             STR      R0,[SP, #+12]
   1248            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x44   0x0030             MOVS     R0,R6
   \       0x46   0xB2C0             UXTB     R0,R0
   \       0x48   0x2801             CMP      R0,#+1
   \       0x4A   0xD101             BNE.N    ??MX25LM51245G_ReadID_4
   \       0x4C   0x2008             MOVS     R0,#+8
   \       0x4E   0xE000             B.N      ??MX25LM51245G_ReadID_5
   \                     ??MX25LM51245G_ReadID_4: (+1)
   \       0x50   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadID_5: (+1)
   \       0x52   0x9005             STR      R0,[SP, #+20]
   1249            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x54   0x0028             MOVS     R0,R5
   \       0x56   0xB2C0             UXTB     R0,R0
   \       0x58   0x2800             CMP      R0,#+0
   \       0x5A   0xD101             BNE.N    ??MX25LM51245G_ReadID_6
   \       0x5C   0x2000             MOVS     R0,#+0
   \       0x5E   0xE000             B.N      ??MX25LM51245G_ReadID_7
   \                     ??MX25LM51245G_ReadID_6: (+1)
   \       0x60   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_ReadID_7: (+1)
   \       0x62   0x9004             STR      R0,[SP, #+16]
   1250            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_READ_ID_CMD : MX25LM51245G_OCTA_READ_ID_CMD;
   \       0x64   0x0028             MOVS     R0,R5
   \       0x66   0xB2C0             UXTB     R0,R0
   \       0x68   0x2800             CMP      R0,#+0
   \       0x6A   0xD101             BNE.N    ??MX25LM51245G_ReadID_8
   \       0x6C   0x209F             MOVS     R0,#+159
   \       0x6E   0xE001             B.N      ??MX25LM51245G_ReadID_9
   \                     ??MX25LM51245G_ReadID_8: (+1)
   \       0x70   0xF649 0x7060      MOVW     R0,#+40800
   \                     ??MX25LM51245G_ReadID_9: (+1)
   \       0x74   0x9002             STR      R0,[SP, #+8]
   1251            s_command.AddressMode        = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_ADDRESS_NONE : HAL_OSPI_ADDRESS_8_LINES;
   \       0x76   0x0028             MOVS     R0,R5
   \       0x78   0xB2C0             UXTB     R0,R0
   \       0x7A   0x2800             CMP      R0,#+0
   \       0x7C   0xD101             BNE.N    ??MX25LM51245G_ReadID_10
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0xE001             B.N      ??MX25LM51245G_ReadID_11
   \                     ??MX25LM51245G_ReadID_10: (+1)
   \       0x82   0xF44F 0x6080      MOV      R0,#+1024
   \                     ??MX25LM51245G_ReadID_11: (+1)
   \       0x86   0x9007             STR      R0,[SP, #+28]
   1252            s_command.AddressDtrMode     = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_ADDRESS_DTR_ENABLE : HAL_OSPI_ADDRESS_DTR_DISABLE;
   \       0x88   0x0030             MOVS     R0,R6
   \       0x8A   0xB2C0             UXTB     R0,R0
   \       0x8C   0x2801             CMP      R0,#+1
   \       0x8E   0xD102             BNE.N    ??MX25LM51245G_ReadID_12
   \       0x90   0xF44F 0x6000      MOV      R0,#+2048
   \       0x94   0xE000             B.N      ??MX25LM51245G_ReadID_13
   \                     ??MX25LM51245G_ReadID_12: (+1)
   \       0x96   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadID_13: (+1)
   \       0x98   0x9009             STR      R0,[SP, #+36]
   1253            s_command.AddressSize        = HAL_OSPI_ADDRESS_32_BITS;
   \       0x9A   0xF44F 0x5040      MOV      R0,#+12288
   \       0x9E   0x9008             STR      R0,[SP, #+32]
   1254            s_command.Address            = 0U;
   \       0xA0   0x2000             MOVS     R0,#+0
   \       0xA2   0x9006             STR      R0,[SP, #+24]
   1255            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x900B             STR      R0,[SP, #+44]
   1256            s_command.DataMode           = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_DATA_1_LINE : HAL_OSPI_DATA_8_LINES;
   \       0xA8   0x0028             MOVS     R0,R5
   \       0xAA   0xB2C0             UXTB     R0,R0
   \       0xAC   0x2800             CMP      R0,#+0
   \       0xAE   0xD102             BNE.N    ??MX25LM51245G_ReadID_14
   \       0xB0   0xF05F 0x7080      MOVS     R0,#+16777216
   \       0xB4   0xE001             B.N      ??MX25LM51245G_ReadID_15
   \                     ??MX25LM51245G_ReadID_14: (+1)
   \       0xB6   0xF05F 0x6080      MOVS     R0,#+67108864
   \                     ??MX25LM51245G_ReadID_15: (+1)
   \       0xBA   0x900E             STR      R0,[SP, #+56]
   1257            s_command.DataDtrMode        = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DATA_DTR_ENABLE : HAL_OSPI_DATA_DTR_DISABLE;
   \       0xBC   0x0030             MOVS     R0,R6
   \       0xBE   0xB2C0             UXTB     R0,R0
   \       0xC0   0x2801             CMP      R0,#+1
   \       0xC2   0xD102             BNE.N    ??MX25LM51245G_ReadID_16
   \       0xC4   0xF05F 0x6000      MOVS     R0,#+134217728
   \       0xC8   0xE000             B.N      ??MX25LM51245G_ReadID_17
   \                     ??MX25LM51245G_ReadID_16: (+1)
   \       0xCA   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadID_17: (+1)
   \       0xCC   0x9010             STR      R0,[SP, #+64]
   1258            s_command.DummyCycles        = (Mode == MX25LM51245G_SPI_MODE) ? 0U : ((Rate == MX25LM51245G_DTR_TRANSFER) ? DUMMY_CYCLES_REG_OCTAL_DTR : DUMMY_CYCLES_REG_OCTAL);
   \       0xCE   0xB2ED             UXTB     R5,R5
   \       0xD0   0x2D00             CMP      R5,#+0
   \       0xD2   0xD101             BNE.N    ??MX25LM51245G_ReadID_18
   \       0xD4   0x2000             MOVS     R0,#+0
   \       0xD6   0xE006             B.N      ??MX25LM51245G_ReadID_19
   \                     ??MX25LM51245G_ReadID_18: (+1)
   \       0xD8   0x0030             MOVS     R0,R6
   \       0xDA   0xB2C0             UXTB     R0,R0
   \       0xDC   0x2801             CMP      R0,#+1
   \       0xDE   0xD101             BNE.N    ??MX25LM51245G_ReadID_20
   \       0xE0   0x2005             MOVS     R0,#+5
   \       0xE2   0xE000             B.N      ??MX25LM51245G_ReadID_19
   \                     ??MX25LM51245G_ReadID_20: (+1)
   \       0xE4   0x2005             MOVS     R0,#+5
   \                     ??MX25LM51245G_ReadID_19: (+1)
   \       0xE6   0x9011             STR      R0,[SP, #+68]
   1259            s_command.NbData             = 3U;
   \       0xE8   0x2003             MOVS     R0,#+3
   \       0xEA   0x900F             STR      R0,[SP, #+60]
   1260            s_command.DQSMode            = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_DQS_ENABLE : HAL_OSPI_DQS_DISABLE;
   \       0xEC   0xB2F6             UXTB     R6,R6
   \       0xEE   0x2E01             CMP      R6,#+1
   \       0xF0   0xD102             BNE.N    ??MX25LM51245G_ReadID_21
   \       0xF2   0xF05F 0x5000      MOVS     R0,#+536870912
   \       0xF6   0xE000             B.N      ??MX25LM51245G_ReadID_22
   \                     ??MX25LM51245G_ReadID_21: (+1)
   \       0xF8   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadID_22: (+1)
   \       0xFA   0x9012             STR      R0,[SP, #+72]
   1261            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0xFC   0x2000             MOVS     R0,#+0
   \       0xFE   0x9013             STR      R0,[SP, #+76]
   1262          
   1263            /* Configure the command */
   1264            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \      0x100   0xF241 0x3588      MOVW     R5,#+5000
   \      0x104   0x002A             MOVS     R2,R5
   \      0x106   0x4669             MOV      R1,SP
   \      0x108   0x0020             MOVS     R0,R4
   \      0x10A   0x.... 0x....      BL       HAL_OSPI_Command
   \      0x10E   0x2800             CMP      R0,#+0
   \      0x110   0xD002             BEQ.N    ??MX25LM51245G_ReadID_23
   1265            {
   1266              return MX25LM51245G_ERROR;
   \      0x112   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x116   0xE00A             B.N      ??MX25LM51245G_ReadID_1
   1267            }
   1268          
   1269            /* Reception of the data */
   1270            if (HAL_OSPI_Receive(Ctx, ID, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \                     ??MX25LM51245G_ReadID_23: (+1)
   \      0x118   0x002A             MOVS     R2,R5
   \      0x11A   0x0039             MOVS     R1,R7
   \      0x11C   0x0020             MOVS     R0,R4
   \      0x11E   0x.... 0x....      BL       HAL_OSPI_Receive
   \      0x122   0x2800             CMP      R0,#+0
   \      0x124   0xD002             BEQ.N    ??MX25LM51245G_ReadID_24
   1271            {
   1272              return MX25LM51245G_ERROR;
   \      0x126   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \      0x12A   0xE000             B.N      ??MX25LM51245G_ReadID_1
   1273            }
   1274          
   1275            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ReadID_24: (+1)
   \      0x12C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ReadID_1: (+1)
   \      0x12E   0xB015             ADD      SP,SP,#+84
   \      0x130   0xBDF0             POP      {R4-R7,PC}
   1276          }
   1277          
   1278          /* Reset Commands *************************************************************/
   1279          /**
   1280            * @brief  Flash reset enable command
   1281            *         SPI/OPI
   1282            * @param  Ctx Component object pointer
   1283            * @param  Mode Interface select
   1284            * @param  Rate Transfer rate STR or DTR
   1285            * @retval error status
   1286            */

   \                                 In section .text, align 2, keep-with-next
   1287          int32_t MX25LM51245G_ResetEnable(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
   1288          {
   \                     MX25LM51245G_ResetEnable: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       memset
   1289            OSPI_RegularCmdTypeDef s_command = {0};
   1290          
   1291            /* SPI mode and DTR transfer not supported by memory */
   1292            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??MX25LM51245G_ResetEnable_0
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD102             BNE.N    ??MX25LM51245G_ResetEnable_0
   1293            {
   1294              return MX25LM51245G_ERROR;
   \       0x24   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x28   0xE03A             B.N      ??MX25LM51245G_ResetEnable_1
   1295            }
   1296          
   1297            /* Initialize the reset enable command */
   1298            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_ResetEnable_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
   1299            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x9001             STR      R0,[SP, #+4]
   1300            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??MX25LM51245G_ResetEnable_2
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xE000             B.N      ??MX25LM51245G_ResetEnable_3
   \                     ??MX25LM51245G_ResetEnable_2: (+1)
   \       0x3E   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_ResetEnable_3: (+1)
   \       0x40   0x9003             STR      R0,[SP, #+12]
   1301            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x2E01             CMP      R6,#+1
   \       0x46   0xD101             BNE.N    ??MX25LM51245G_ResetEnable_4
   \       0x48   0x2008             MOVS     R0,#+8
   \       0x4A   0xE000             B.N      ??MX25LM51245G_ResetEnable_5
   \                     ??MX25LM51245G_ResetEnable_4: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ResetEnable_5: (+1)
   \       0x4E   0x9005             STR      R0,[SP, #+20]
   1302            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_ResetEnable_6
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_ResetEnable_7
   \                     ??MX25LM51245G_ResetEnable_6: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_ResetEnable_7: (+1)
   \       0x5E   0x9004             STR      R0,[SP, #+16]
   1303            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_RESET_ENABLE_CMD : MX25LM51245G_OCTA_RESET_ENABLE_CMD;
   \       0x60   0xB2ED             UXTB     R5,R5
   \       0x62   0x2D00             CMP      R5,#+0
   \       0x64   0xD101             BNE.N    ??MX25LM51245G_ResetEnable_8
   \       0x66   0x2066             MOVS     R0,#+102
   \       0x68   0xE001             B.N      ??MX25LM51245G_ResetEnable_9
   \                     ??MX25LM51245G_ResetEnable_8: (+1)
   \       0x6A   0xF246 0x6099      MOVW     R0,#+26265
   \                     ??MX25LM51245G_ResetEnable_9: (+1)
   \       0x6E   0x9002             STR      R0,[SP, #+8]
   1304            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0x9007             STR      R0,[SP, #+28]
   1305            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x900B             STR      R0,[SP, #+44]
   1306            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0x900E             STR      R0,[SP, #+56]
   1307            s_command.DummyCycles        = 0U;
   \       0x7C   0x2000             MOVS     R0,#+0
   \       0x7E   0x9011             STR      R0,[SP, #+68]
   1308            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x9012             STR      R0,[SP, #+72]
   1309            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x9013             STR      R0,[SP, #+76]
   1310          
   1311            /* Send the command */
   1312            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x88   0xF241 0x3288      MOVW     R2,#+5000
   \       0x8C   0x4669             MOV      R1,SP
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD002             BEQ.N    ??MX25LM51245G_ResetEnable_10
   1313            {
   1314              return MX25LM51245G_ERROR;
   \       0x98   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x9C   0xE000             B.N      ??MX25LM51245G_ResetEnable_1
   1315            }
   1316          
   1317            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ResetEnable_10: (+1)
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ResetEnable_1: (+1)
   \       0xA0   0xB014             ADD      SP,SP,#+80
   \       0xA2   0xBD70             POP      {R4-R6,PC}
   1318          }
   1319          
   1320          /**
   1321            * @brief  Flash reset memory command
   1322            *         SPI/OPI
   1323            * @param  Ctx Component object pointer
   1324            * @param  Mode Interface select
   1325            * @param  Rate Transfer rate STR or DTR
   1326            * @retval error status
   1327            */

   \                                 In section .text, align 2, keep-with-next
   1328          int32_t MX25LM51245G_ResetMemory(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
   1329          {
   \                     MX25LM51245G_ResetMemory: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       memset
   1330            OSPI_RegularCmdTypeDef s_command = {0};
   1331          
   1332            /* SPI mode and DTR transfer not supported by memory */
   1333            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??MX25LM51245G_ResetMemory_0
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD102             BNE.N    ??MX25LM51245G_ResetMemory_0
   1334            {
   1335              return MX25LM51245G_ERROR;
   \       0x24   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x28   0xE03A             B.N      ??MX25LM51245G_ResetMemory_1
   1336            }
   1337          
   1338            /* Initialize the reset enable command */
   1339            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_ResetMemory_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
   1340            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x9001             STR      R0,[SP, #+4]
   1341            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??MX25LM51245G_ResetMemory_2
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xE000             B.N      ??MX25LM51245G_ResetMemory_3
   \                     ??MX25LM51245G_ResetMemory_2: (+1)
   \       0x3E   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_ResetMemory_3: (+1)
   \       0x40   0x9003             STR      R0,[SP, #+12]
   1342            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x2E01             CMP      R6,#+1
   \       0x46   0xD101             BNE.N    ??MX25LM51245G_ResetMemory_4
   \       0x48   0x2008             MOVS     R0,#+8
   \       0x4A   0xE000             B.N      ??MX25LM51245G_ResetMemory_5
   \                     ??MX25LM51245G_ResetMemory_4: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ResetMemory_5: (+1)
   \       0x4E   0x9005             STR      R0,[SP, #+20]
   1343            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_ResetMemory_6
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_ResetMemory_7
   \                     ??MX25LM51245G_ResetMemory_6: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_ResetMemory_7: (+1)
   \       0x5E   0x9004             STR      R0,[SP, #+16]
   1344            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_RESET_MEMORY_CMD : MX25LM51245G_OCTA_RESET_MEMORY_CMD;
   \       0x60   0xB2ED             UXTB     R5,R5
   \       0x62   0x2D00             CMP      R5,#+0
   \       0x64   0xD101             BNE.N    ??MX25LM51245G_ResetMemory_8
   \       0x66   0x2099             MOVS     R0,#+153
   \       0x68   0xE001             B.N      ??MX25LM51245G_ResetMemory_9
   \                     ??MX25LM51245G_ResetMemory_8: (+1)
   \       0x6A   0xF649 0x1066      MOVW     R0,#+39270
   \                     ??MX25LM51245G_ResetMemory_9: (+1)
   \       0x6E   0x9002             STR      R0,[SP, #+8]
   1345            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0x9007             STR      R0,[SP, #+28]
   1346            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x900B             STR      R0,[SP, #+44]
   1347            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0x900E             STR      R0,[SP, #+56]
   1348            s_command.DummyCycles        = 0U;
   \       0x7C   0x2000             MOVS     R0,#+0
   \       0x7E   0x9011             STR      R0,[SP, #+68]
   1349            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x9012             STR      R0,[SP, #+72]
   1350            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x9013             STR      R0,[SP, #+76]
   1351          
   1352            /* Send the command */
   1353            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x88   0xF241 0x3288      MOVW     R2,#+5000
   \       0x8C   0x4669             MOV      R1,SP
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD002             BEQ.N    ??MX25LM51245G_ResetMemory_10
   1354            {
   1355              return MX25LM51245G_ERROR;
   \       0x98   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x9C   0xE000             B.N      ??MX25LM51245G_ResetMemory_1
   1356            }
   1357          
   1358            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_ResetMemory_10: (+1)
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_ResetMemory_1: (+1)
   \       0xA0   0xB014             ADD      SP,SP,#+80
   \       0xA2   0xBD70             POP      {R4-R6,PC}
   1359          }
   1360          
   1361          /**
   1362            * @brief  Flash no operation command
   1363            *         SPI/OPI
   1364            * @param  Ctx Component object pointer
   1365            * @param  Mode Interface select
   1366            * @param  Rate Transfer rate STR or DTR
   1367            * @retval error status
   1368            */

   \                                 In section .text, align 2, keep-with-next
   1369          int32_t MX25LM51245G_NoOperation(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
   1370          {
   \                     MX25LM51245G_NoOperation: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       memset
   1371            OSPI_RegularCmdTypeDef s_command = {0};
   1372          
   1373            /* SPI mode and DTR transfer not supported by memory */
   1374            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??MX25LM51245G_NoOperation_0
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD102             BNE.N    ??MX25LM51245G_NoOperation_0
   1375            {
   1376              return MX25LM51245G_ERROR;
   \       0x24   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x28   0xE039             B.N      ??MX25LM51245G_NoOperation_1
   1377            }
   1378          
   1379            /* Initialize the no operation command */
   1380            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_NoOperation_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
   1381            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x9001             STR      R0,[SP, #+4]
   1382            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??MX25LM51245G_NoOperation_2
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xE000             B.N      ??MX25LM51245G_NoOperation_3
   \                     ??MX25LM51245G_NoOperation_2: (+1)
   \       0x3E   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_NoOperation_3: (+1)
   \       0x40   0x9003             STR      R0,[SP, #+12]
   1383            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x2E01             CMP      R6,#+1
   \       0x46   0xD101             BNE.N    ??MX25LM51245G_NoOperation_4
   \       0x48   0x2008             MOVS     R0,#+8
   \       0x4A   0xE000             B.N      ??MX25LM51245G_NoOperation_5
   \                     ??MX25LM51245G_NoOperation_4: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_NoOperation_5: (+1)
   \       0x4E   0x9005             STR      R0,[SP, #+20]
   1384            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_NoOperation_6
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_NoOperation_7
   \                     ??MX25LM51245G_NoOperation_6: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_NoOperation_7: (+1)
   \       0x5E   0x9004             STR      R0,[SP, #+16]
   1385            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_NOP_CMD : MX25LM51245G_OCTA_NOP_CMD;
   \       0x60   0xB2ED             UXTB     R5,R5
   \       0x62   0x2D00             CMP      R5,#+0
   \       0x64   0xD101             BNE.N    ??MX25LM51245G_NoOperation_8
   \       0x66   0x2000             MOVS     R0,#+0
   \       0x68   0xE000             B.N      ??MX25LM51245G_NoOperation_9
   \                     ??MX25LM51245G_NoOperation_8: (+1)
   \       0x6A   0x20FF             MOVS     R0,#+255
   \                     ??MX25LM51245G_NoOperation_9: (+1)
   \       0x6C   0x9002             STR      R0,[SP, #+8]
   1386            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x6E   0x2000             MOVS     R0,#+0
   \       0x70   0x9007             STR      R0,[SP, #+28]
   1387            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x72   0x2000             MOVS     R0,#+0
   \       0x74   0x900B             STR      R0,[SP, #+44]
   1388            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x76   0x2000             MOVS     R0,#+0
   \       0x78   0x900E             STR      R0,[SP, #+56]
   1389            s_command.DummyCycles        = 0U;
   \       0x7A   0x2000             MOVS     R0,#+0
   \       0x7C   0x9011             STR      R0,[SP, #+68]
   1390            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x7E   0x2000             MOVS     R0,#+0
   \       0x80   0x9012             STR      R0,[SP, #+72]
   1391            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x82   0x2000             MOVS     R0,#+0
   \       0x84   0x9013             STR      R0,[SP, #+76]
   1392          
   1393            /* Send the command */
   1394            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x86   0xF241 0x3288      MOVW     R2,#+5000
   \       0x8A   0x4669             MOV      R1,SP
   \       0x8C   0x0020             MOVS     R0,R4
   \       0x8E   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x92   0x2800             CMP      R0,#+0
   \       0x94   0xD002             BEQ.N    ??MX25LM51245G_NoOperation_10
   1395            {
   1396              return MX25LM51245G_ERROR;
   \       0x96   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x9A   0xE000             B.N      ??MX25LM51245G_NoOperation_1
   1397            }
   1398          
   1399            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_NoOperation_10: (+1)
   \       0x9C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_NoOperation_1: (+1)
   \       0x9E   0xB014             ADD      SP,SP,#+80
   \       0xA0   0xBD70             POP      {R4-R6,PC}
   1400          }
   1401          
   1402          /**
   1403            * @brief  Flash enter deep power-down command
   1404            *         SPI/OPI
   1405            * @param  Ctx Component object pointer
   1406            * @param  Mode Interface select
   1407            * @param  Rate Transfer rate STR or DTR
   1408            * @retval error status
   1409            */

   \                                 In section .text, align 2, keep-with-next
   1410          int32_t MX25LM51245G_EnterPowerDown(OSPI_HandleTypeDef *Ctx, MX25LM51245G_Interface_t Mode, MX25LM51245G_Transfer_t Rate)
   1411          {
   \                     MX25LM51245G_EnterPowerDown: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0xB094             SUB      SP,SP,#+80
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x2250             MOVS     R2,#+80
   \        0xC   0x2100             MOVS     R1,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       memset
   1412            OSPI_RegularCmdTypeDef s_command = {0};
   1413          
   1414            /* SPI mode and DTR transfer not supported by memory */
   1415            if ((Mode == MX25LM51245G_SPI_MODE) && (Rate == MX25LM51245G_DTR_TRANSFER))
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??MX25LM51245G_EnterPowerDown_0
   \       0x1C   0x0030             MOVS     R0,R6
   \       0x1E   0xB2C0             UXTB     R0,R0
   \       0x20   0x2801             CMP      R0,#+1
   \       0x22   0xD102             BNE.N    ??MX25LM51245G_EnterPowerDown_0
   1416            {
   1417              return MX25LM51245G_ERROR;
   \       0x24   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x28   0xE03A             B.N      ??MX25LM51245G_EnterPowerDown_1
   1418            }
   1419          
   1420            /* Initialize the enter power down command */
   1421            s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
   \                     ??MX25LM51245G_EnterPowerDown_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x9000             STR      R0,[SP, #+0]
   1422            s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x9001             STR      R0,[SP, #+4]
   1423            s_command.InstructionMode    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_1_LINE : HAL_OSPI_INSTRUCTION_8_LINES;
   \       0x32   0x0028             MOVS     R0,R5
   \       0x34   0xB2C0             UXTB     R0,R0
   \       0x36   0x2800             CMP      R0,#+0
   \       0x38   0xD101             BNE.N    ??MX25LM51245G_EnterPowerDown_2
   \       0x3A   0x2001             MOVS     R0,#+1
   \       0x3C   0xE000             B.N      ??MX25LM51245G_EnterPowerDown_3
   \                     ??MX25LM51245G_EnterPowerDown_2: (+1)
   \       0x3E   0x2004             MOVS     R0,#+4
   \                     ??MX25LM51245G_EnterPowerDown_3: (+1)
   \       0x40   0x9003             STR      R0,[SP, #+12]
   1424            s_command.InstructionDtrMode = (Rate == MX25LM51245G_DTR_TRANSFER) ? HAL_OSPI_INSTRUCTION_DTR_ENABLE : HAL_OSPI_INSTRUCTION_DTR_DISABLE;
   \       0x42   0xB2F6             UXTB     R6,R6
   \       0x44   0x2E01             CMP      R6,#+1
   \       0x46   0xD101             BNE.N    ??MX25LM51245G_EnterPowerDown_4
   \       0x48   0x2008             MOVS     R0,#+8
   \       0x4A   0xE000             B.N      ??MX25LM51245G_EnterPowerDown_5
   \                     ??MX25LM51245G_EnterPowerDown_4: (+1)
   \       0x4C   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_EnterPowerDown_5: (+1)
   \       0x4E   0x9005             STR      R0,[SP, #+20]
   1425            s_command.InstructionSize    = (Mode == MX25LM51245G_SPI_MODE) ? HAL_OSPI_INSTRUCTION_8_BITS : HAL_OSPI_INSTRUCTION_16_BITS;
   \       0x50   0x0028             MOVS     R0,R5
   \       0x52   0xB2C0             UXTB     R0,R0
   \       0x54   0x2800             CMP      R0,#+0
   \       0x56   0xD101             BNE.N    ??MX25LM51245G_EnterPowerDown_6
   \       0x58   0x2000             MOVS     R0,#+0
   \       0x5A   0xE000             B.N      ??MX25LM51245G_EnterPowerDown_7
   \                     ??MX25LM51245G_EnterPowerDown_6: (+1)
   \       0x5C   0x2010             MOVS     R0,#+16
   \                     ??MX25LM51245G_EnterPowerDown_7: (+1)
   \       0x5E   0x9004             STR      R0,[SP, #+16]
   1426            s_command.Instruction        = (Mode == MX25LM51245G_SPI_MODE) ? MX25LM51245G_ENTER_DEEP_POWER_DOWN_CMD : MX25LM51245G_OCTA_ENTER_DEEP_POWER_DOWN_CMD;
   \       0x60   0xB2ED             UXTB     R5,R5
   \       0x62   0x2D00             CMP      R5,#+0
   \       0x64   0xD101             BNE.N    ??MX25LM51245G_EnterPowerDown_8
   \       0x66   0x20B9             MOVS     R0,#+185
   \       0x68   0xE001             B.N      ??MX25LM51245G_EnterPowerDown_9
   \                     ??MX25LM51245G_EnterPowerDown_8: (+1)
   \       0x6A   0xF64B 0x1046      MOVW     R0,#+47430
   \                     ??MX25LM51245G_EnterPowerDown_9: (+1)
   \       0x6E   0x9002             STR      R0,[SP, #+8]
   1427            s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0x9007             STR      R0,[SP, #+28]
   1428            s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
   \       0x74   0x2000             MOVS     R0,#+0
   \       0x76   0x900B             STR      R0,[SP, #+44]
   1429            s_command.DataMode           = HAL_OSPI_DATA_NONE;
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0x900E             STR      R0,[SP, #+56]
   1430            s_command.DummyCycles        = 0U;
   \       0x7C   0x2000             MOVS     R0,#+0
   \       0x7E   0x9011             STR      R0,[SP, #+68]
   1431            s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x9012             STR      R0,[SP, #+72]
   1432            s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x9013             STR      R0,[SP, #+76]
   1433          
   1434            /* Send the command */
   1435            if (HAL_OSPI_Command(Ctx, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
   \       0x88   0xF241 0x3288      MOVW     R2,#+5000
   \       0x8C   0x4669             MOV      R1,SP
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0x.... 0x....      BL       HAL_OSPI_Command
   \       0x94   0x2800             CMP      R0,#+0
   \       0x96   0xD002             BEQ.N    ??MX25LM51245G_EnterPowerDown_10
   1436            {
   1437              return MX25LM51245G_ERROR;
   \       0x98   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \       0x9C   0xE000             B.N      ??MX25LM51245G_EnterPowerDown_1
   1438            }
   1439          
   1440            return MX25LM51245G_OK;
   \                     ??MX25LM51245G_EnterPowerDown_10: (+1)
   \       0x9E   0x2000             MOVS     R0,#+0
   \                     ??MX25LM51245G_EnterPowerDown_1: (+1)
   \       0xA0   0xB014             ADD      SP,SP,#+80
   \       0xA2   0xBD70             POP      {R4-R6,PC}
   1441          }
   1442          
   1443          /**
   1444            * @}
   1445            */
   1446          
   1447          /**
   1448            * @}
   1449            */
   1450          
   1451          /**
   1452            * @}
   1453            */
   1454          
   1455          /**
   1456            * @}
   1457            */
   1458          
   1459          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
     120   MX25LM51245G_AutoPollingMemReady
       120   -> HAL_OSPI_AutoPolling
       120   -> HAL_OSPI_Command
       120   -> memset
     104   MX25LM51245G_BlockErase
       104   -> HAL_OSPI_Command
       104   -> memset
      96   MX25LM51245G_ChipErase
        96   -> HAL_OSPI_Command
        96   -> memset
     104   MX25LM51245G_EnableMemoryMappedModeDTR
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_MemoryMapped
       104   -> memset
     112   MX25LM51245G_EnableMemoryMappedModeSTR
       112   -> HAL_OSPI_Command
       112   -> HAL_OSPI_MemoryMapped
       112   -> memset
      96   MX25LM51245G_EnterPowerDown
        96   -> HAL_OSPI_Command
        96   -> memset
       0   MX25LM51245G_GetFlashInfo
      96   MX25LM51245G_NoOperation
        96   -> HAL_OSPI_Command
        96   -> memset
     104   MX25LM51245G_PageProgram
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Transmit
       104   -> memset
     104   MX25LM51245G_PageProgramDTR
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Transmit
       104   -> memset
     104   MX25LM51245G_ReadCfg2Register
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Receive
       104   -> memset
     104   MX25LM51245G_ReadCfgRegister
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Receive
       104   -> memset
     104   MX25LM51245G_ReadDTR
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Receive
       104   -> memset
     104   MX25LM51245G_ReadID
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Receive
       104   -> memset
     104   MX25LM51245G_ReadSTR
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Receive
       104   -> memset
     104   MX25LM51245G_ReadSecurityRegister
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Receive
       104   -> memset
     104   MX25LM51245G_ReadStatusRegister
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Receive
       104   -> memset
      96   MX25LM51245G_ResetEnable
        96   -> HAL_OSPI_Command
        96   -> memset
      96   MX25LM51245G_ResetMemory
        96   -> HAL_OSPI_Command
        96   -> memset
      96   MX25LM51245G_Resume
        96   -> HAL_OSPI_Command
        96   -> memset
      96   MX25LM51245G_Suspend
        96   -> HAL_OSPI_Command
        96   -> memset
     104   MX25LM51245G_WriteCfg2Register
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Transmit
       104   -> memset
     104   MX25LM51245G_WriteCfgRegister
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Transmit
       104   -> MX25LM51245G_ReadStatusRegister
       104   -> memset
      96   MX25LM51245G_WriteDisable
        96   -> HAL_OSPI_Command
        96   -> memset
     120   MX25LM51245G_WriteEnable
       120   -> HAL_OSPI_AutoPolling
       120   -> HAL_OSPI_Command
       120   -> memset
      96   MX25LM51245G_WriteSecurityRegister
        96   -> HAL_OSPI_Command
        96   -> memset
     104   MX25LM51245G_WriteStatusRegister
       104   -> HAL_OSPI_Command
       104   -> HAL_OSPI_Transmit
       104   -> MX25LM51245G_ReadCfgRegister
       104   -> memset


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     348  MX25LM51245G_AutoPollingMemReady
     296  MX25LM51245G_BlockErase
     164  MX25LM51245G_ChipErase
     190  MX25LM51245G_EnableMemoryMappedModeDTR
     328  MX25LM51245G_EnableMemoryMappedModeSTR
     164  MX25LM51245G_EnterPowerDown
      50  MX25LM51245G_GetFlashInfo
     162  MX25LM51245G_NoOperation
     256  MX25LM51245G_PageProgram
     148  MX25LM51245G_PageProgramDTR
     318  MX25LM51245G_ReadCfg2Register
     318  MX25LM51245G_ReadCfgRegister
     150  MX25LM51245G_ReadDTR
     306  MX25LM51245G_ReadID
     268  MX25LM51245G_ReadSTR
     318  MX25LM51245G_ReadSecurityRegister
     318  MX25LM51245G_ReadStatusRegister
     164  MX25LM51245G_ResetEnable
     164  MX25LM51245G_ResetMemory
     164  MX25LM51245G_Resume
     164  MX25LM51245G_Suspend
     292  MX25LM51245G_WriteCfg2Register
     336  MX25LM51245G_WriteCfgRegister
     164  MX25LM51245G_WriteDisable
     402  MX25LM51245G_WriteEnable
     164  MX25LM51245G_WriteSecurityRegister
     332  MX25LM51245G_WriteStatusRegister

 
 6'448 bytes in section .text
 
 6'448 bytes of CODE memory

Errors: none
Warnings: none
