###############################################################################
#                                                                             #
#     IAR Assembler V9.20.1.318/W64 for ARM 09/Feb/2022  10:51:34             #
#     Copyright 1999-2021 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  D:\001_Project\B_TouchGFX_Stm32\TouchGFX\MyApplication\Middlewares\Third_Party\FreeRTOS\Source\portable\IAR\ARM_CM4F\portasm.s#
#           List file     =  D:\001_Project\B_TouchGFX_Stm32\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\Middlewares\FreeRTOS\portasm.lst#
#           Object file   =  D:\001_Project\B_TouchGFX_Stm32\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Middlewares\FreeRTOS\portasm.o#
#           Command line  =  -f                                               #
#                            D:\001_Project\B_TouchGFX_Stm32\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Middlewares\FreeRTOS\portasm.o.rsp #
#                            (D:\001_Project\B_TouchGFX_Stm32\TouchGFX\MyApplication\Middlewares\Third_Party\FreeRTOS\Source\portable\IAR\ARM_CM4F\portasm.s #
#                            -OD:\001_Project\B_TouchGFX_Stm32\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Middlewares\FreeRTOS #
#                            -s+ -M<> -w+ -r                                  #
#                            -LD:\001_Project\B_TouchGFX_Stm32\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\Middlewares\FreeRTOS #
#                            -cAOM -i -B -t8 -xDI2 --cpu Cortex-M7 --fpu      #
#                            VFPv5_d16                                        #
#                            -ID:\001_Project\B_TouchGFX_Stm32\TouchGFX\MyApplication\EWARM\..\Core\Inc\) #
#                                                                             #
###############################################################################

    1                           /*

    2                            * FreeRTOS Kernel V10.3.1

    3                            * Copyright (C) 2020 Amazon.com, Inc. or its
                                 affiliates.  All Rights Reserved.

    4                            *

    5                            * Permission is hereby granted, free of
                                 charge, to any person obtaining a copy
                                 of

    6                            * this software and associated documentation
                                 files (the "Software"), to deal in

    7                            * the Software without restriction, including
                                 without limitation the rights to

    8                            * use, copy, modify, merge, publish,
                                 distribute, sublicense, and/or sell copies
                                 of

    9                            * the Software, and to permit persons to whom
                                 the Software is furnished to do so,

   10                            * subject to the following conditions:

   11                            *

   12                            * The above copyright notice and this
                                 permission notice shall be included in
                                 all

   13                            * copies or substantial portions of the
                                 Software.

   14                            *

   15                            * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
                                 WARRANTY OF ANY KIND, EXPRESS OR

   16                            * IMPLIED, INCLUDING BUT NOT LIMITED TO THE
                                 WARRANTIES OF MERCHANTABILITY, FITNESS

   17                            * FOR A PARTICULAR PURPOSE AND NONINFRINGEMEN
                                T. IN NO EVENT SHALL THE AUTHORS OR

   18                            * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
                                 DAMAGES OR OTHER LIABILITY, WHETHER

   19                            * IN AN ACTION OF CONTRACT, TORT OR
                                 OTHERWISE, ARISING FROM, OUT OF OR IN

   20                            * CONNECTION WITH THE SOFTWARE OR THE USE OR
                                 OTHER DEALINGS IN THE SOFTWARE.

   21                            *

   22                            * http://www.FreeRTOS.org

   23                            * http://aws.amazon.com/freertos

   24                            *

   25                            * 1 tab == 4 spaces!

   26                            */

   27                           

   28                           #include <FreeRTOSConfig.h>

    1                           /* USER CODE BEGIN Header */

    2                           /*

    3                            * FreeRTOS Kernel V10.2.1

    4                            * Portion Copyright (C) 2017 Amazon.com, Inc.
                                 or its affiliates.  All Rights Reserved.

    5                            * Portion Copyright (C) 2019 StMicroelectroni
                                cs, Inc.  All Rights Reserved.

    6                            *

    7                            * Permission is hereby granted, free of
                                 charge, to any person obtaining a copy
                                 of

    8                            * this software and associated documentation
                                 files (the "Software"), to deal in

    9                            * the Software without restriction, including
                                 without limitation the rights to

   10                            * use, copy, modify, merge, publish,
                                 distribute, sublicense, and/or sell copies
                                 of

   11                            * the Software, and to permit persons to whom
                                 the Software is furnished to do so,

   12                            * subject to the following conditions:

   13                            *

   14                            * The above copyright notice and this
                                 permission notice shall be included in
                                 all

   15                            * copies or substantial portions of the
                                 Software.

   16                            *

   17                            * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
                                 WARRANTY OF ANY KIND, EXPRESS OR

   18                            * IMPLIED, INCLUDING BUT NOT LIMITED TO THE
                                 WARRANTIES OF MERCHANTABILITY, FITNESS

   19                            * FOR A PARTICULAR PURPOSE AND NONINFRINGEMEN
                                T. IN NO EVENT SHALL THE AUTHORS OR

   20                            * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
                                 DAMAGES OR OTHER LIABILITY, WHETHER

   21                            * IN AN ACTION OF CONTRACT, TORT OR
                                 OTHERWISE, ARISING FROM, OUT OF OR IN

   22                            * CONNECTION WITH THE SOFTWARE OR THE USE OR
                                 OTHER DEALINGS IN THE SOFTWARE.

   23                            *

   24                            * http://www.FreeRTOS.org

   25                            * http://aws.amazon.com/freertos

   26                            *

   27                            * 1 tab == 4 spaces!

   28                            */

   29                           /* USER CODE END Header */

   30                           

   31                           #ifndef FREERTOS_CONFIG_H

   32                           #define FREERTOS_CONFIG_H

   33                           

   34                           /*--------------------------------------------
                                ---------------

   35                            * Application specific definitions.

   36                            *

   37                            * These definitions should be adjusted for
                                 your particular hardware and

   38                            * application requirements.

   39                            *

   40                            * These parameters and more are described
                                 within the 'configuration' section of
                                 the

   41                            * FreeRTOS API documentation available on the
                                 FreeRTOS.org web site.

   42                            *

   43                            * See http://www.freertos.org/a00110.html

   44                            *--------------------------------------------
                                --------------*/

   45                           

   46                           /* USER CODE BEGIN Includes */

   47                           /* Section where include file can be added
                                 */

   48                           /* USER CODE END Includes */

   49                           

   50                           /* Ensure definitions are only used by the
                                 compiler, and not by the assembler. */

   51                           #if defined(__ICCARM__) || defined(__CC_ARM)
                                 || defined(__GNUC__)

   52                             #include <stdint.h>

   54                           #endif

   55                           #ifndef CMSIS_device_header

   56                           #define CMSIS_device_header "stm32h7xx.h"

   57                           #endif /* CMSIS_device_header */

   58                           

   59                           #define configENABLE_FPU                      
                                   0

   60                           #define configENABLE_MPU                      
                                   0

   61                           

   62                           #define configUSE_PREEMPTION                  
                                   1

   63                           #define configSUPPORT_STATIC_ALLOCATION       
                                   1

   64                           #define configSUPPORT_DYNAMIC_ALLOCATION      
                                   1

   65                           #define configUSE_IDLE_HOOK                   
                                   0

   66                           #define configUSE_TICK_HOOK                   
                                   0

   67                           #define configCPU_CLOCK_HZ                    
                                   ( SystemCoreClock )

   68                           #define configTICK_RATE_HZ                    
                                   ((TickType_t)1000)

   69                           #define configMAX_PRIORITIES                  
                                   ( 56 )

   70                           #define configMINIMAL_STACK_SIZE              
                                   ((uint16_t)128)

   71                           #define configTOTAL_HEAP_SIZE                 
                                   ((size_t)32768)

   72                           #define configMAX_TASK_NAME_LEN               
                                   ( 16 )

   73                           #define configUSE_TRACE_FACILITY              
                                   1

   74                           #define configUSE_16_BIT_TICKS                
                                   0

   75                           #define configUSE_MUTEXES                     
                                   1

   76                           #define configQUEUE_REGISTRY_SIZE             
                                   8

   77                           #define configUSE_RECURSIVE_MUTEXES           
                                   1

   78                           #define configUSE_COUNTING_SEMAPHORES         
                                   1

   79                           #define configUSE_PORT_OPTIMISED_TASK_SELECTIO
                                N  0

   80                           /* USER CODE BEGIN MESSAGE_BUFFER_LENGTH_TYPE
                                 */

   81                           /* Defaults to size_t for backward compatibili
                                ty, but can be changed

   82                              if lengths will always be less than the
                                 number of bytes in a size_t. */

   83                           #define configMESSAGE_BUFFER_LENGTH_TYPE      
                                   size_t

   84                           /* USER CODE END MESSAGE_BUFFER_LENGTH_TYPE
                                 */

   85                           

   86                           /* Co-routine definitions. */

   87                           #define configUSE_CO_ROUTINES                 
                                   0

   88                           #define configMAX_CO_ROUTINE_PRIORITIES       
                                   ( 2 )

   89                           

   90                           /* Software timer definitions. */

   91                           #define configUSE_TIMERS                      
                                   1

   92                           #define configTIMER_TASK_PRIORITY             
                                   ( 2 )

   93                           #define configTIMER_QUEUE_LENGTH              
                                   10

   94                           #define configTIMER_TASK_STACK_DEPTH          
                                   256

   95                           

   96                           /* CMSIS-RTOS V2 flags */

   97                           #define configUSE_OS2_THREAD_SUSPEND_RESUME 
                                 1

   98                           #define configUSE_OS2_THREAD_ENUMERATE      
                                 1

   99                           #define configUSE_OS2_EVENTFLAGS_FROM_ISR   
                                 1

  100                           #define configUSE_OS2_THREAD_FLAGS          
                                 1

  101                           #define configUSE_OS2_TIMER                 
                                 1

  102                           #define configUSE_OS2_MUTEX                 
                                 1

  103                           

  104                           /* Set the following definitions to 1 to
                                 include the API function, or zero

  105                           to exclude the API function. */

  106                           #define INCLUDE_vTaskPrioritySet            
                                 1

  107                           #define INCLUDE_uxTaskPriorityGet           
                                 1

  108                           #define INCLUDE_vTaskDelete                 
                                 1

  109                           #define INCLUDE_vTaskCleanUpResources       
                                 0

  110                           #define INCLUDE_vTaskSuspend                
                                 1

  111                           #define INCLUDE_vTaskDelayUntil             
                                 1

  112                           #define INCLUDE_vTaskDelay                  
                                 1

  113                           #define INCLUDE_xTaskGetSchedulerState      
                                 1

  114                           #define INCLUDE_xTimerPendFunctionCall      
                                 1

  115                           #define INCLUDE_xQueueGetMutexHolder        
                                 1

  116                           #define INCLUDE_uxTaskGetStackHighWaterMark 
                                 1

  117                           #define INCLUDE_xTaskGetCurrentTaskHandle   
                                 1

  118                           #define INCLUDE_eTaskGetState               
                                 1

  119                           

  120                           /*

  121                            * The CMSIS-RTOS V2 FreeRTOS wrapper is
                                 dependent on the heap implementation
                                 used

  122                            * by the application thus the correct define
                                 need to be enabled below

  123                            */

  124                           #define USE_FreeRTOS_HEAP_4

  125                           

  126                           /* Cortex-M specific definitions. */

  127                           #ifdef __NVIC_PRIO_BITS

  129                            #define configPRIO_BITS         __NVIC_PRIO_B
                                ITS

  130                           #else

  131                            #define configPRIO_BITS         4

  132                           #endif

  133                           

  134                           /* The lowest interrupt priority that can be
                                 used in a call to a "set priority"

  135                           function. */

  136                           #define configLIBRARY_LOWEST_INTERRUPT_PRIORIT
                                Y   15

  137                           

  138                           /* The highest interrupt priority that can be
                                 used by any interrupt service

  139                           routine that makes calls to interrupt safe
                                 FreeRTOS API functions.  DO NOT CALL

  140                           INTERRUPT SAFE FREERTOS API FUNCTIONS FROM ANY
                                 INTERRUPT THAT HAS A HIGHER

  141                           PRIORITY THAN THIS! (higher priorities are
                                 lower numeric values. */

  142                           #define configLIBRARY_MAX_SYSCALL_INTERRUPT_PR
                                IORITY 5

  143                           

  144                           /* Interrupt priorities used by the kernel
                                 port layer itself.  These are generic

  145                           to all Cortex-M ports, and do not rely on any
                                 particular library functions. */

  146                           #define configKERNEL_INTERRUPT_PRIORITY       
                                          ( configLIBRARY_LOWEST_INTERRUPT_PRIO
                                RITY << (8 - configPRIO_BITS) )

  147                           /* !!!! configMAX_SYSCALL_INTERRUPT_PRIORITY
                                 must not be set to zero !!!!

  148                           See http://www.FreeRTOS.org/RTOS-Cortex-M3-M4.
                                html. */

  149                           #define configMAX_SYSCALL_INTERRUPT_PRIORITY  
                                  ( configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORIT
                                Y << (8 - configPRIO_BITS) )

  150                           

  151                           /* Normal assert() semantics without relying
                                 on the provision of an assert.h

  152                           header file. */

  153                           /* USER CODE BEGIN 1 */

  154                           #define configASSERT( x ) if ((x) == 0)
                                 {taskDISABLE_INTERRUPTS(); for( ;; );}
                                 

  155                           /* USER CODE END 1 */

  156                           

  157                           /* Definitions that map the FreeRTOS port
                                 interrupt handlers to their CMSIS

  158                           standard names. */

  159                           #define vPortSVCHandler    SVC_Handler

  160                           #define xPortPendSVHandler PendSV_Handler

  161                           

  162                           /* IMPORTANT: After 10.3.1 update, Systick_Han
                                dler comes from NVIC (if SYS timebase =
                                 systick), otherwise from cmsis_os2.c
                                 */

  163                           

  164                           #define USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTAT
                                ION 0

  165                           

  166                           /* USER CODE BEGIN Defines */

  167                           /* Section where parameter definitions can be
                                 added (for instance, to override default ones
                                 in FreeRTOS.h) */

  168                           /* USER CODE END Defines */

  169                           

  170                           #endif /* FREERTOS_CONFIG_H */

   29                           

   30                                   RSEG    CODE:CODE(2)

   31                                   thumb

   32                           

   33                                   EXTERN pxCurrentTCB

   34                                   EXTERN vTaskSwitchContext

   35                           

   36                                   PUBLIC xPortPendSVHandler

   37                                   PUBLIC vPortSVCHandler

   38                                   PUBLIC vPortStartFirstTask

   39                                   PUBLIC vPortEnableVFP

   40                           

   41                           

   42                           /*--------------------------------------------
                                ---------------*/

   43                           

   44                           xPortPendSVHandler:

   45    00000000 EFF30980              mrs r0, psp

   46    00000004 BFF36F8F              isb

   47                                   /* Get the location of the current
                                 TCB. */

   48    00000008 264B                  ldr     r3, =pxCurrentTCB

   49    0000000A 1A68                  ldr     r2, [r3]

   50                           

   51                                   /* Is the task using the FPU context? 
                                 If so, push high vfp registers. */

   52    0000000C 1EF0100F              tst r14, #0x10

   53    00000010 08BF                  it eq

   54    00000012 20ED108A              vstmdbeq r0!, {s16-s31}

   55                           

   56                                   /* Save the core registers. */

   57    00000016 20E9F04F              stmdb r0!, {r4-r11, r14}

   58                           

   59                                   /* Save the new top of stack into the
                                 first member of the TCB. */

   60    0000001A 1060                  str r0, [r2]

   61                           

   62    0000001C 09B4                  stmdb sp!, {r0, r3}

   63    0000001E 4FF05000              mov r0, #configMAX_SYSCALL_INTERRUPT_PR
                                                 IORITY

   64    00000022 80F31188              msr basepri, r0

   65    00000026 BFF34F8F              dsb

   66    0000002A BFF36F8F              isb

   67    0000002E ........              bl vTaskSwitchContext

   68    00000032 4FF00000              mov r0, #0

   69    00000036 80F31188              msr basepri, r0

   70    0000003A 09BC                  ldmia sp!, {r0, r3}

   71                           

   72                                   /* The first item in pxCurrentTCB is
                                 the task top of stack. */

   73    0000003C 1968                  ldr r1, [r3]

   74    0000003E 0868                  ldr r0, [r1]

   75                           

   76                                   /* Pop the core registers. */

   77    00000040 B0E8F04F              ldmia r0!, {r4-r11, r14}

   78                           

   79                                   /* Is the task using the FPU context? 
                                 If so, pop the high vfp registers

   80                                   too. */

   81    00000044 1EF0100F              tst r14, #0x10

   82    00000048 08BF                  it eq

   83    0000004A B0EC108A              vldmiaeq r0!, {s16-s31}

   84                           

   85    0000004E 80F30988              msr psp, r0

   86    00000052 BFF36F8F              isb

   87                                   #ifdef WORKAROUND_PMU_CM001 /* XMC4000
                                 specific errata */

   88                                           #if WORKAROUND_PMU_CM001 ==
                                 1

   91                                           #endif

   92                                   #endif

   93                           

   94    00000056 7047                  bx r14

   95                           

   96                           

   97                           /*--------------------------------------------
                                ---------------*/

   98                           

   99                           vPortSVCHandler:

  100                                   /* Get the location of the current
                                 TCB. */

  101    00000058 124B                  ldr     r3, =pxCurrentTCB

  102    0000005A 1968                  ldr r1, [r3]

  103    0000005C 0868                  ldr r0, [r1]

  104                                   /* Pop the core registers. */

  105    0000005E B0E8F04F              ldmia r0!, {r4-r11, r14}

  106    00000062 80F30988              msr psp, r0

  107    00000066 BFF36F8F              isb

  108    0000006A 4FF00000              mov r0, #0

  109    0000006E 80F31188              msr     basepri, r0

  110    00000072 7047                  bx r14

  111                           

  112                           /*--------------------------------------------
                                ---------------*/

  113                           

  114                           vPortStartFirstTask

  115                                   /* Use the NVIC offset register to
                                 locate the stack. */

  116    00000074 0C48                  ldr r0, =0xE000ED08

  117    00000076 0068                  ldr r0, [r0]

  118    00000078 0068                  ldr r0, [r0]

  119                                   /* Set the msp back to the start of
                                 the stack. */

  120    0000007A 80F30888              msr msp, r0

  121                                   /* Clear the bit that indicates the
                                 FPU is in use in case the FPU was used

  122                                   before the scheduler was started -
                                 which would otherwise result in the

  123                                   unnecessary leaving of space in the
                                 SVC stack for lazy saving of FPU

  124                                   registers. */

  125    0000007E 4FF00000              mov r0, #0

  126    00000082 80F31488              msr control, r0

  127                                   /* Call SVC to start the first task.
                                 */

  128    00000086 62B6                  cpsie i

  129    00000088 61B6                  cpsie f

  130    0000008A BFF34F8F              dsb

  131    0000008E BFF36F8F              isb

  132    00000092 00DF                  svc 0

  133                           

  134                           /*--------------------------------------------
                                ---------------*/

  135                           

  136                           vPortEnableVFP:

  137                                   /* The FPU enable bits are in the
                                 CPACR. */

  138    00000094 DFF81400              ldr.w r0, =0xE000ED88

  139    00000098 0168                  ldr     r1, [r0]

  140                           

  141                                   /* Enable CP10 and CP11 coprocessors,
                                 then save back. */

  142    0000009A 41F47001              orr     r1, r1, #( 0xf << 20 )

  143    0000009E 0160                  str r1, [r0]

  144    000000A0 7047                  bx      r14

  145                           

  146                           

  147                           

  147.1                                  TABLE.32

  147.2  000000A4 ........              Reference on line 48,101

  147.3  000000A8 08ED00E0              Reference on line 116

  147.4  000000AC 88ED00E0              Reference on line 138

  148                                   END





\n                   DELIMITER 

                     DELIMITER 

!                    OPERATOR 

!=                   OPERATOR 

%                    OPERATOR 

&                    OPERATOR 

&&                   OPERATOR 

(                    OPERATOR 

(                    DELIMITER 

)                    OPERATOR 

)                    DELIMITER 

*                    OPERATOR 

+                    OPERATOR 

,                    DELIMITER 

-                    OPERATOR 

.                    Target symbol: 24 

/                    OPERATOR 

/                    DELIMITER 

:                    Target symbol: 22 

:                    DELIMITER 

:ABS_G0:             OPERATOR 

:ABS_G0_NC:          OPERATOR 

:ABS_G0_S:           OPERATOR 

:ABS_G1:             OPERATOR 

:ABS_G1_NC:          OPERATOR 

:ABS_G1_S:           OPERATOR 

:ABS_G2:             OPERATOR 

:ABS_G2_NC:          OPERATOR 

:ABS_G2_S:           OPERATOR 

:ABS_G3:             OPERATOR 

;                    Target symbol: 23 

<                    OPERATOR 

<<                   OPERATOR 

<=                   OPERATOR 

<>                   OPERATOR 

=                    OPERATOR 

=                    DIRECTIVE 

==                   OPERATOR 

>                    OPERATOR 

>=                   OPERATOR 

>>                   OPERATOR 

@                    DELIMITER 

AAPCS                DIRECTIVE 

ALIAS                DIRECTIVE 

ALIGN                DIRECTIVE 

ALIGNRAM             DIRECTIVE 

ALIGNROM             DIRECTIVE 

ANOTE                DIRECTIVE 

APSR                 REGISTER 

APSR_NZCV            REGISTER 

ARGFRAME             DIRECTIVE 

ARM                  DIRECTIVE 

ASEGN                DIRECTIVE 

BIT                  SEGMENT TYPE 

BYTE1                OPERATOR 

BYTE2                OPERATOR 

BYTE3                OPERATOR 

BYTE4                OPERATOR 

C0                   REGISTER 

C1                   REGISTER 

C10                  REGISTER 

C11                  REGISTER 

C12                  REGISTER 

C13                  REGISTER 

C14                  REGISTER 

C15                  REGISTER 

C2                   REGISTER 

C3                   REGISTER 

C4                   REGISTER 

C5                   REGISTER 

C6                   REGISTER 

C7                   REGISTER 

C8                   REGISTER 

C9                   REGISTER 

CALL_GRAPH_ROOT      DIRECTIVE 

CASEOFF              DIRECTIVE 

CASEON               DIRECTIVE 

CBREL                OPERATOR 

CBREL_NEAR           OPERATOR 

CFI                  DIRECTIVE 

CMSIS_device_header  #define, value: "stm32h7xx.h", line:      56:1  

CODE                 SEGMENT TYPE 

CODE                 DIRECTIVE 

CODE16               DIRECTIVE 

CODE32               DIRECTIVE 

COL                  DIRECTIVE 

CONST                SEGMENT TYPE 

D0                   REGISTER 

D1                   REGISTER 

D10                  REGISTER 

D11                  REGISTER 

D12                  REGISTER 

D13                  REGISTER 

D14                  REGISTER 

D15                  REGISTER 

D2                   REGISTER 

D3                   REGISTER 

D4                   REGISTER 

D5                   REGISTER 

D6                   REGISTER 

D7                   REGISTER 

D8                   REGISTER 

D9                   REGISTER 

DATA                 SEGMENT TYPE 

DATA                 DIRECTIVE 

DATA16               DIRECTIVE 

DATA32               DIRECTIVE 

DATA64               DIRECTIVE 

DATA8                DIRECTIVE 

DATE                 OPERATOR 

DC16                 DIRECTIVE 

DC24                 DIRECTIVE 

DC32                 DIRECTIVE 

DC64                 DIRECTIVE 

DC8                  DIRECTIVE 

DCB                  DIRECTIVE 

DCD                  DIRECTIVE 

DCQ                  DIRECTIVE 

DCREL32              DIRECTIVE 

DCW                  DIRECTIVE 

DEFINE               DIRECTIVE 

DF16                 DIRECTIVE 

DF32                 DIRECTIVE 

DF64                 DIRECTIVE 

DS                   DIRECTIVE 

DS16                 DIRECTIVE 

DS24                 DIRECTIVE 

DS32                 DIRECTIVE 

DS64                 DIRECTIVE 

DS8                  DIRECTIVE 

ELSE                 DIRECTIVE 

ELSEIF               DIRECTIVE 

END                  DIRECTIVE 

ENDIF                DIRECTIVE 

ENDM                 DIRECTIVE 

ENDMOD               DIRECTIVE 

ENDR                 DIRECTIVE 

EQU                  DIRECTIVE 

EVEN                 DIRECTIVE 

EXCEPTION_CODE       DIRECTIVE 

EXITM                DIRECTIVE 

EXPORT               DIRECTIVE 

EXTERN               DIRECTIVE 

EXTTLS               DIRECTIVE 

EXTWEAK              DIRECTIVE 

FAR                  SEGMENT TYPE 

FARCODE              SEGMENT TYPE 

FARCONST             SEGMENT TYPE 

FARDATA              SEGMENT TYPE 

FPCXT_NS             REGISTER 

FPCXT_S              REGISTER 

FPEXC                REGISTER 

FPINST               REGISTER 

FPINST2              REGISTER 

FPSCR                REGISTER 

FPSCR_NZCVQC         REGISTER 

FPSID                REGISTER 

FREERTOS_CONFIG_H    #define, value: , line:      32:1  

FUNCALL              DIRECTIVE 

FUNCTION             DIRECTIVE 

HIGH                 OPERATOR 

HUGE                 SEGMENT TYPE 

HUGECODE             SEGMENT TYPE 

HUGECONST            SEGMENT TYPE 

HUGEDATA             SEGMENT TYPE 

HWRD                 OPERATOR 

IDATA                SEGMENT TYPE 

IF                   DIRECTIVE 

IMPORT               DIRECTIVE 

INCLUDE              DIRECTIVE 

INCLUDE_eTaskGetState #define, value: 1, line:     118:1  

INCLUDE_uxTaskGetStackHighWaterMark
                     #define, value: 1, line:     116:1  

INCLUDE_uxTaskPriorityGet #define, value: 1, line:     107:1  

INCLUDE_vTaskCleanUpResources #define, value: 0, line:     109:1  

INCLUDE_vTaskDelay   #define, value: 1, line:     112:1  

INCLUDE_vTaskDelayUntil #define, value: 1, line:     111:1  

INCLUDE_vTaskDelete  #define, value: 1, line:     108:1  

INCLUDE_vTaskPrioritySet #define, value: 1, line:     106:1  

INCLUDE_vTaskSuspend #define, value: 1, line:     110:1  

INCLUDE_xQueueGetMutexHolder #define, value: 1, line:     115:1  

INCLUDE_xTaskGetCurrentTaskHandle
                     #define, value: 1, line:     117:1  

INCLUDE_xTaskGetSchedulerState #define, value: 1, line:     113:1  

INCLUDE_xTimerPendFunctionCall #define, value: 1, line:     114:1  

LIBRARY              DIRECTIVE 

LO12                 OPERATOR 

LOCAL                DIRECTIVE 

LOCFRAME             DIRECTIVE 

LOW                  OPERATOR 

LR                   REGISTER 

LSTCND               DIRECTIVE 

LSTCOD               DIRECTIVE 

LSTEXP               DIRECTIVE 

LSTMAC               DIRECTIVE 

LSTOUT               DIRECTIVE 

LSTPAG               DIRECTIVE 

LSTREP               DIRECTIVE 

LSTXRF               DIRECTIVE 

LTORG                DIRECTIVE 

LWRD                 OPERATOR 

MACRO                DIRECTIVE 

MODULE               DIRECTIVE 

MVFR0                REGISTER 

MVFR1                REGISTER 

MVFR2                REGISTER 

NAME                 DIRECTIVE 

NEAR                 SEGMENT TYPE 

NEARCODE             SEGMENT TYPE 

NEARCONST            SEGMENT TYPE 

NEARDATA             SEGMENT TYPE 

NOALLOC              SEGMENT TYPE 

NOCALL               DIRECTIVE 

NOROOT               SEGMENT TYPE 

NPAGE                SEGMENT TYPE 

ODD                  DIRECTIVE 

P0                   REGISTER 

P1                   REGISTER 

P10                  REGISTER 

P11                  REGISTER 

P12                  REGISTER 

P13                  REGISTER 

P14                  REGISTER 

P15                  REGISTER 

P2                   REGISTER 

P3                   REGISTER 

P4                   REGISTER 

P5                   REGISTER 

P6                   REGISTER 

P7                   REGISTER 

P8                   REGISTER 

P9                   REGISTER 

PAGE                 DIRECTIVE 

PAGSIZ               DIRECTIVE 

PC                   REGISTER 

PG_HI21              OPERATOR 

PG_HI21_NC           OPERATOR 

PRESERVE8            DIRECTIVE 

PROGRAM              DIRECTIVE 

PUBLIC               DIRECTIVE 

PUBTLS               DIRECTIVE 

PUBWEAK              DIRECTIVE 

R0                   REGISTER 

R1                   REGISTER 

R10                  REGISTER 

R11                  REGISTER 

R12                  REGISTER 

R13                  REGISTER 

R14                  REGISTER 

R15                  REGISTER 

R2                   REGISTER 

R3                   REGISTER 

R4                   REGISTER 

R5                   REGISTER 

R6                   REGISTER 

R7                   REGISTER 

R8                   REGISTER 

R9                   REGISTER 

RADIX                DIRECTIVE 

REGISTER             SEGMENT TYPE 

RELOC_ARM_PREL31     OPERATOR 

RELOC_ARM_PREL31_HIBIT OPERATOR 

RELOC_ARM_TARGET1    OPERATOR 

RELOC_ARM_TARGET2    OPERATOR 

RELOC_LOCAL          OPERATOR 

REORDER              SEGMENT TYPE 

REPT                 DIRECTIVE 

REPTC                DIRECTIVE 

REPTI                DIRECTIVE 

REQUIRE              DIRECTIVE 

REQUIRE8             DIRECTIVE 

ROOT                 SEGMENT TYPE 

RSEG                 DIRECTIVE 

RTMODEL              DIRECTIVE 

S0                   REGISTER 

S1                   REGISTER 

S10                  REGISTER 

S11                  REGISTER 

S12                  REGISTER 

S13                  REGISTER 

S14                  REGISTER 

S15                  REGISTER 

S16                  REGISTER 

S17                  REGISTER 

S18                  REGISTER 

S19                  REGISTER 

S2                   REGISTER 

S20                  REGISTER 

S21                  REGISTER 

S22                  REGISTER 

S23                  REGISTER 

S24                  REGISTER 

S25                  REGISTER 

S26                  REGISTER 

S27                  REGISTER 

S28                  REGISTER 

S29                  REGISTER 

S3                   REGISTER 

S30                  REGISTER 

S31                  REGISTER 

S4                   REGISTER 

S5                   REGISTER 

S6                   REGISTER 

S7                   REGISTER 

S8                   REGISTER 

S9                   REGISTER 

SBREL                OPERATOR 

SBREL_NEAR           OPERATOR 

SECTION              DIRECTIVE 

SECTION_GROUP        DIRECTIVE 

SECTION_LINK         DIRECTIVE 

SECTION_TYPE         DIRECTIVE 

SET                  DIRECTIVE 

SETA                 DIRECTIVE 

SFB                  OPERATOR 

SFE                  OPERATOR 

SFS                  OPERATOR 

SIZE                 DIRECTIVE 

SIZEOF               OPERATOR 

SORT                 SEGMENT TYPE 

SP                   REGISTER 

SystemCoreClock      Target symbol: 0 

THUMB                DIRECTIVE 

THUMBX               DIRECTIVE 

TLS                  SEGMENT TYPE 

TLS                  OPERATOR 

TickType_t           Target symbol: 0 

UGT                  OPERATOR 

ULT                  OPERATOR 

UNTYPED              SEGMENT TYPE 

USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION
                     #define, value: 0, line:     164:1  

USE_FreeRTOS_HEAP_4  #define, value: , line:     124:1  

VAR                  DIRECTIVE 

VPR                  REGISTER 

XDATA                SEGMENT TYPE 

XOR                  OPERATOR 

ZPAGE                SEGMENT TYPE 

ZR                   REGISTER 

[                    DELIMITER 

]                    DELIMITER 

^                    OPERATOR 

^                    DELIMITER 

__ARM4TM__           #define, value: 4, line:         0  

__ARM5TM__           #define, value: 5, line:         0  

__ARM5T__            #define, value: 5, line:         0  

__ARM5__             #define, value: 5, line:         0  

__ARM6MEDIA__        #define, value: 6, line:         0  

__ARM6M__            #define, value: 11, line:         0  

__ARM6SM__           #define, value: 12, line:         0  

__ARM6T2__           #define, value: 6, line:         0  

__ARM6__             #define, value: 6, line:         0  

__ARM7EM__           #define, value: 13, line:         0  

__ARM7M__            #define, value: 7, line:         0  

__ARM7__             #define, value: 7, line:         0  

__ARMFPV5__          #define, value: 5, line:         0  

__ARMVFPV1__         #define, value: 1, line:         0  

__ARMVFPV2__         #define, value: 2, line:         0  

__ARMVFPV3_D16__     #define, value: 1, line:         0  

__ARMVFPV3_FP16__    #define, value: 1, line:         0  

__ARMVFPV3__         #define, value: 3, line:         0  

__ARMVFPV4__         #define, value: 4, line:         0  

__ARMVFP_D16__       #define, value: 1, line:         0  

__ARMVFP_FP16__      #define, value: 1, line:         0  

__ARMVFP__           #define, value: __ARMFPV5__, line:         0  

__ARM_32BIT_STATE    #define, value: 1, line:         0  

__ARM_ARCH           #define, value: 7, line:         0  

__ARM_ARCH_ISA_THUMB #define, value: 2, line:         0  

__ARM_ARCH_PROFILE   #define, value: 'M', line:         0  

__ARM_FEATURE_CLZ    #define, value: 1, line:         0  

__ARM_FEATURE_DIRECTED_ROUNDING #define, value: 1, line:         0  

__ARM_FEATURE_DSP    #define, value: 1, line:         0  

__ARM_FEATURE_FMA    #define, value: 1, line:         0  

__ARM_FEATURE_IDIV   #define, value: 1, line:         0  

__ARM_FEATURE_LDREX  #define, value: 7, line:         0  

__ARM_FEATURE_MVE    #define, value: 0, line:         0  

__ARM_FEATURE_NUMERIC_MAXMIN #define, value: 1, line:         0  

__ARM_FEATURE_QBIT   #define, value: 1, line:         0  

__ARM_FEATURE_SAT    #define, value: 1, line:         0  

__ARM_FEATURE_SIMD32 #define, value: 1, line:         0  

__ARM_FP             #define, value: 14, line:         0  

__ARM_MEDIA__        #define, value: 1, line:         0  

__ARM_PROFILE_M__    #define, value: 1, line:         0  

__BUILD_NUMBER__     #define,            line:         0  

__CORE__             #define, value: __ARM7EM__, line:         0  

__DATE__             #define,            line:         0  

__FILE__             #define,            line:         0  

__IAR_SYSTEMS_ASM    #define,            line:         0  

__IAR_SYSTEMS_ASM__  #define,            line:         0  

__IASMARM__          #define, value: 1, line:         0  

__LINE__             #define,            line:         0  

__LITTLE_ENDIAN__    #define, value: 1, line:         0  

__SUBVERSION__       #define,            line:         0  

__TID__              #define,            line:         0  

__TIME__             #define,            line:         0  

__VER__              #define,            line:         0  

configASSERT         #define,            line:     154:1  

configCPU_CLOCK_HZ   #define, value: ( SystemCoreClock ), line:      67:1  

configENABLE_FPU     #define, value: 0, line:      59:1  

configENABLE_MPU     #define, value: 0, line:      60:1  

configKERNEL_INTERRUPT_PRIORITY #define, value: ( configLIBRARY_LOWEST_INTERRUPT_PRIORITY << (8 - configPRIO_BITS) ), line:     146:1  

configLIBRARY_LOWEST_INTERRUPT_PRIORITY
                     #define, value: 15, line:     136:1  

configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY
                     #define, value: 5, line:     142:1         63

configMAX_CO_ROUTINE_PRIORITIES #define, value: ( 2 ), line:      88:1  

configMAX_PRIORITIES #define, value: ( 56 ), line:      69:1  

configMAX_SYSCALL_INTERRUPT_PRIORITY
                     #define, value: ( configLIBRARY_MAX_SYSCALL_INTERRUPT_PRIORITY << (8 - configPRIO_BITS) ), line:     149:1         63

configMAX_TASK_NAME_LEN #define, value: ( 16 ), line:      72:1  

configMESSAGE_BUFFER_LENGTH_TYPE
                     #define, value: size_t, line:      83:1  

configMINIMAL_STACK_SIZE #define, value: ((uint16_t)128), line:      70:1  

configPRIO_BITS      #define, value: 4, line:     131:1         63

configQUEUE_REGISTRY_SIZE #define, value: 8, line:      76:1  

configSUPPORT_DYNAMIC_ALLOCATION
                     #define, value: 1, line:      64:1  

configSUPPORT_STATIC_ALLOCATION #define, value: 1, line:      63:1  

configTICK_RATE_HZ   #define, value: ((TickType_t)1000), line:      68:1  

configTIMER_QUEUE_LENGTH #define, value: 10, line:      93:1  

configTIMER_TASK_PRIORITY #define, value: ( 2 ), line:      92:1  

configTIMER_TASK_STACK_DEPTH #define, value: 256, line:      94:1  

configTOTAL_HEAP_SIZE #define, value: ((size_t)32768), line:      71:1  

configUSE_16_BIT_TICKS #define, value: 0, line:      74:1  

configUSE_COUNTING_SEMAPHORES #define, value: 1, line:      78:1  

configUSE_CO_ROUTINES #define, value: 0, line:      87:1  

configUSE_IDLE_HOOK  #define, value: 0, line:      65:1  

configUSE_MUTEXES    #define, value: 1, line:      75:1  

configUSE_OS2_EVENTFLAGS_FROM_ISR
                     #define, value: 1, line:      99:1  

configUSE_OS2_MUTEX  #define, value: 1, line:     102:1  

configUSE_OS2_THREAD_ENUMERATE #define, value: 1, line:      98:1  

configUSE_OS2_THREAD_FLAGS #define, value: 1, line:     100:1  

configUSE_OS2_THREAD_SUSPEND_RESUME
                     #define, value: 1, line:      97:1  

configUSE_OS2_TIMER  #define, value: 1, line:     101:1  

configUSE_PORT_OPTIMISED_TASK_SELECTION
                     #define, value: 0, line:      79:1  

configUSE_PREEMPTION #define, value: 1, line:      62:1  

configUSE_RECURSIVE_MUTEXES #define, value: 1, line:      77:1  

configUSE_TICK_HOOK  #define, value: 0, line:      66:1  

configUSE_TIMERS     #define, value: 1, line:      91:1  

configUSE_TRACE_FACILITY #define, value: 1, line:      73:1  

define               PREPROCESSOR DIRECTIVE 

defined              Target symbol: 0 

elif                 PREPROCESSOR DIRECTIVE 

else                 PREPROCESSOR DIRECTIVE 

endif                PREPROCESSOR DIRECTIVE 

error                PREPROCESSOR DIRECTIVE 

for                  Target symbol: 0 

if                   PREPROCESSOR DIRECTIVE 

ifdef                PREPROCESSOR DIRECTIVE 

ifndef               PREPROCESSOR DIRECTIVE 

include              PREPROCESSOR DIRECTIVE 

line                 PREPROCESSOR DIRECTIVE 

message              PREPROCESSOR DIRECTIVE 

pragma               PREPROCESSOR DIRECTIVE 

size_t               Target symbol: 0 

taskDISABLE_INTERRUPTS Target symbol: 0 

uint16_t             Target symbol: 0 

undef                PREPROCESSOR DIRECTIVE 

vPortSVCHandler      #define, value: SVC_Handler, line:     159:1         37       99

x                    Target symbol: 0 

xPortPendSVHandler   #define, value: PendSV_Handler, line:     160:1         36       44

{                    DELIMITER 

|                    OPERATOR 

||                   OPERATOR 

}                    DELIMITER 

~                    OPERATOR 

EOF                  DELIMITER 



Segment             Type 	Mode

----------------------------------------

CODE                CODE  	REL 

__EXTERNS           CODE  	ABS Org:0 



Label               Mode   Type                   Segment    Value/Offset

------------------------------------------------------------------------------

??DUMMY_SYMBOL_IN_BACKEND_PARSED_OPERANDS
                    ABS    CONST UNTYP.           ASEG       1267 

PendSV_Handler      REL    CONST PUB UNTYP.       CODE       1 

SVC_Handler         REL    CONST PUB UNTYP.       CODE       59 

TID                 ABS    CONST UNTYP.           ASEG       4F00 

__lab0              REL    CONST UNTYP.           CODE       A4 

__lab1              REL    CONST UNTYP.           CODE       A8 

__lab2              REL    CONST UNTYP.           CODE       AC 

pxCurrentTCB        ABS    CONST EXT [000] UNTYP. __EXTERNS  Solved Extern 

vPortEnableVFP      REL    CONST PUB UNTYP.       CODE       95 

vPortStartFirstTask REL    CONST PUB UNTYP.       CODE       75 

vTaskSwitchContext  ABS    CONST EXT [001] UNTYP. __EXTERNS  Solved Extern 





##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 176         #
##############################



