###############################################################################
#
# IAR ANSI C/C++ Compiler V9.20.1.318/W64 for ARM         07/Feb/2022  20:39:39
# Copyright 1999-2021 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\TouchGFX\target\TouchGFXGPIO.cpp
#        [UTF-8]
#    Command line                 =
#        -f
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Application\User\TouchGFX\target\TouchGFXGPIO.o.rsp
#        (D:\99_Project\GitHub\TouchGFX\MyApplication\TouchGFX\target\TouchGFXGPIO.cpp
#        -D USE_HAL_DRIVER -D STM32H7B3xxQ -D USE_BPP=24 -lC
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\Application\User\TouchGFX\target
#        -lA
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\Application\User\TouchGFX\target
#        -o
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Application\User\TouchGFX\target
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M7 -e --fpu=VFPv5_d16 --dlib_config "C:\Program Files\IAR
#        Systems\Embedded Workbench 9.0\arm\inc\c\DLib_Config_Full.h" -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Core/Inc\ -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/App\ -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/target/generated\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/target\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/STM32H7xx_HAL_Driver/Inc\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/STM32H7xx_HAL_Driver/Inc/Legacy\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/Third_Party/FreeRTOS/Source/portable/IAR/ARM_CM4F\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/CMSIS/Device/ST/STM32H7xx/Include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/CMSIS/Include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/BSP/Components/Common\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Drivers/BSP/STM32H7B3I-DK\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../Middlewares/ST/touchgfx/framework/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/fonts/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/gui_generated/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/images/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/texts/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/gui/include\
#        -I
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM/../TouchGFX/generated/videos/include\
#        -Ol --c++ --no_exceptions --no_rtti --no_static_destruction
#        --source_encoding utf8 --text_out utf8 --utf8_text_in)
#        --dependencies=n
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Application\User\TouchGFX\target\TouchGFXGPIO.o.d
#    Locale                       =  C
#    List file                    =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\List\Application\User\TouchGFX\target\TouchGFXGPIO.lst
#    Object file                  =
#        D:\99_Project\GitHub\TouchGFX\MyApplication\EWARM\STM32H7B3I-DK\Obj\Application\User\TouchGFX\target\TouchGFXGPIO.o
#    Runtime model:                  
#      __CPP_Exceptions           =  Disabled
#      __CPP_Language             =  C++14
#      __CPP_Library              =  DLib
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_full_locale_support =  1
#      __dlib_version             =  6
#
###############################################################################

D:\99_Project\GitHub\TouchGFX\MyApplication\TouchGFX\target\TouchGFXGPIO.cpp
      1          /**
      2            ******************************************************************************
      3            * File Name          : TouchGFXGPIO.cpp
      4            ******************************************************************************
      5            * This file is generated by TouchGFX Generator 4.18.1.
      6            ******************************************************************************
      7            * @attention
      8            *
      9            * Copyright (c) 2022 STMicroelectronics.
     10            * All rights reserved.
     11            *
     12            * This software is licensed under terms that can be found in the LICENSE file
     13            * in the root directory of this software component.
     14            * If no LICENSE file comes with this software, it is provided AS-IS.
     15            *
     16            ******************************************************************************
     17            */
     18          
     19          #include <touchgfx/hal/GPIO.hpp>
     20          
     21          /**
     22           * GPIO_ID Enum, these are used bt TouchGFX framework to signal events.
     23           *
     24           * VSYNC_FREQ,  /// Pin is toggled at each VSYNC
     25           * RENDER_TIME, /// Pin is high when frame rendering begins, low when finished
     26           * FRAME_RATE,  /// Pin is toggled when the frame buffers are swapped.
     27           * MCU_ACTIVE   /// Pin is high when framework is utilizing the MCU.
     28           *
     29           */
     30          
     31          /* USER CODE BEGIN TouchGFXGPIO.cpp */
     32          
     33          #include <main.h>
     34          
     35          using namespace touchgfx;
     36          
     37          /*
     38           * Perform configuration of IO pins.
     39           */

   \                                 In section .text, align 2, keep-with-next
     40          void GPIO::init()
     41          {
     42              // Done by CubeMX in main.c
     43          }
   \                     _ZN8touchgfx4GPIO4initEv: (+1)
   \        0x0   0x4770             BX       LR
     44          
     45          /*
     46           * Sets a pin high.
     47           */

   \                                 In section .text, align 2, keep-with-next
     48          void GPIO::set(GPIO_ID id)
     49          {
   \                     _ZN8touchgfx4GPIO3setENS0_7GPIO_IDE: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     50              switch (id)
   \        0x2   0xB2C0             UXTB     R0,R0
   \        0x4   0x2800             CMP      R0,#+0
   \        0x6   0xD005             BEQ.N    ??set_0
   \        0x8   0x2802             CMP      R0,#+2
   \        0xA   0xD011             BEQ.N    ??set_1
   \        0xC   0xD309             BCC.N    ??set_2
   \        0xE   0x2803             CMP      R0,#+3
   \       0x10   0xD015             BEQ.N    ??set_3
   \       0x12   0xE019             B.N      ??set_4
     51              {
     52              case GPIO::VSYNC_FREQ:
     53          //        HAL_GPIO_WritePin(GPIOG, LED3_Pin, GPIO_PIN_SET);
     54                  HAL_GPIO_WritePin(GPIOG, VSYNC_FREQ_Pin, GPIO_PIN_SET);
   \                     ??set_0: (+1)
   \       0x14   0x2201             MOVS     R2,#+1
   \       0x16   0xF44F 0x5180      MOV      R1,#+4096
   \       0x1A   0x....             LDR.N    R0,??DataTable4
   \       0x1C   0x.... 0x....      BL       HAL_GPIO_WritePin
     55                  break;
   \       0x20   0xE012             B.N      ??set_4
     56              case GPIO::RENDER_TIME:
     57          //        HAL_GPIO_WritePin(GPIOG, LED2_Pin, GPIO_PIN_SET);
     58                  HAL_GPIO_WritePin(GPIOG, RENDER_TIME_Pin, GPIO_PIN_SET);
   \                     ??set_2: (+1)
   \       0x22   0x2201             MOVS     R2,#+1
   \       0x24   0xF44F 0x4180      MOV      R1,#+16384
   \       0x28   0x....             LDR.N    R0,??DataTable4
   \       0x2A   0x.... 0x....      BL       HAL_GPIO_WritePin
     59                  break;
   \       0x2E   0xE00B             B.N      ??set_4
     60              case GPIO::FRAME_RATE:
     61                  HAL_GPIO_WritePin(GPIOG, FRAME_RATE_Pin, GPIO_PIN_SET);
   \                     ??set_1: (+1)
   \       0x30   0x2201             MOVS     R2,#+1
   \       0x32   0xF44F 0x4100      MOV      R1,#+32768
   \       0x36   0x....             LDR.N    R0,??DataTable4
   \       0x38   0x.... 0x....      BL       HAL_GPIO_WritePin
     62                  break;
   \       0x3C   0xE004             B.N      ??set_4
     63              case GPIO::MCU_ACTIVE:
     64                  HAL_GPIO_WritePin(GPIOG, MCU_ACTIVE_Pin, GPIO_PIN_SET);
   \                     ??set_3: (+1)
   \       0x3E   0x2201             MOVS     R2,#+1
   \       0x40   0x2101             MOVS     R1,#+1
   \       0x42   0x....             LDR.N    R0,??DataTable4
   \       0x44   0x.... 0x....      BL       HAL_GPIO_WritePin
     65                  break;
     66              }
     67          }
   \                     ??set_4: (+1)
   \       0x48   0xBD01             POP      {R0,PC}
     68          
     69          /*
     70           * Sets a pin low.
     71           */

   \                                 In section .text, align 2, keep-with-next
     72          void GPIO::clear(GPIO_ID id)
     73          {
   \                     _ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     74              switch (id)
   \        0x2   0xB2C0             UXTB     R0,R0
   \        0x4   0x2800             CMP      R0,#+0
   \        0x6   0xD005             BEQ.N    ??clear_0
   \        0x8   0x2802             CMP      R0,#+2
   \        0xA   0xD011             BEQ.N    ??clear_1
   \        0xC   0xD309             BCC.N    ??clear_2
   \        0xE   0x2803             CMP      R0,#+3
   \       0x10   0xD015             BEQ.N    ??clear_3
   \       0x12   0xE019             B.N      ??clear_4
     75              {
     76              case GPIO::VSYNC_FREQ:
     77          //        HAL_GPIO_WritePin(GPIOG, LED3_Pin, GPIO_PIN_RESET);
     78                  HAL_GPIO_WritePin(GPIOG, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
   \                     ??clear_0: (+1)
   \       0x14   0x2200             MOVS     R2,#+0
   \       0x16   0xF44F 0x5180      MOV      R1,#+4096
   \       0x1A   0x....             LDR.N    R0,??DataTable4
   \       0x1C   0x.... 0x....      BL       HAL_GPIO_WritePin
     79                  break;
   \       0x20   0xE012             B.N      ??clear_4
     80              case GPIO::RENDER_TIME:
     81          //        HAL_GPIO_WritePin(GPIOG, LED2_Pin, GPIO_PIN_RESET);
     82                  HAL_GPIO_WritePin(GPIOG, RENDER_TIME_Pin, GPIO_PIN_RESET);
   \                     ??clear_2: (+1)
   \       0x22   0x2200             MOVS     R2,#+0
   \       0x24   0xF44F 0x4180      MOV      R1,#+16384
   \       0x28   0x....             LDR.N    R0,??DataTable4
   \       0x2A   0x.... 0x....      BL       HAL_GPIO_WritePin
     83                  break;
   \       0x2E   0xE00B             B.N      ??clear_4
     84              case GPIO::FRAME_RATE:
     85                  HAL_GPIO_WritePin(GPIOG, FRAME_RATE_Pin, GPIO_PIN_RESET);
   \                     ??clear_1: (+1)
   \       0x30   0x2200             MOVS     R2,#+0
   \       0x32   0xF44F 0x4100      MOV      R1,#+32768
   \       0x36   0x....             LDR.N    R0,??DataTable4
   \       0x38   0x.... 0x....      BL       HAL_GPIO_WritePin
     86                  break;
   \       0x3C   0xE004             B.N      ??clear_4
     87              case GPIO::MCU_ACTIVE:
     88                  HAL_GPIO_WritePin(GPIOG, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
   \                     ??clear_3: (+1)
   \       0x3E   0x2200             MOVS     R2,#+0
   \       0x40   0x2101             MOVS     R1,#+1
   \       0x42   0x....             LDR.N    R0,??DataTable4
   \       0x44   0x.... 0x....      BL       HAL_GPIO_WritePin
     89                  break;
     90              }
     91          }
   \                     ??clear_4: (+1)
   \       0x48   0xBD01             POP      {R0,PC}
     92          
     93          /*
     94           * Toggles a pin.
     95           */

   \                                 In section .text, align 2, keep-with-next
     96          void GPIO::toggle(GPIO_ID id)
     97          {
   \                     _ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     98              switch (id)
   \        0x2   0xB2C0             UXTB     R0,R0
   \        0x4   0x2800             CMP      R0,#+0
   \        0x6   0xD005             BEQ.N    ??toggle_0
   \        0x8   0x2802             CMP      R0,#+2
   \        0xA   0xD01A             BEQ.N    ??toggle_1
   \        0xC   0xD30E             BCC.N    ??toggle_2
   \        0xE   0x2803             CMP      R0,#+3
   \       0x10   0xD01D             BEQ.N    ??toggle_3
   \       0x12   0xE020             B.N      ??toggle_4
     99              {
    100              case GPIO::VSYNC_FREQ:
    101                  HAL_GPIO_TogglePin(GPIOG, LED3_Pin);
   \                     ??toggle_0: (+1)
   \       0x14   0x....             LDR.N    R4,??DataTable4
   \       0x16   0xF44F 0x6100      MOV      R1,#+2048
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x.... 0x....      BL       HAL_GPIO_TogglePin
    102                  HAL_GPIO_TogglePin(GPIOG, VSYNC_FREQ_Pin);
   \       0x20   0xF44F 0x5180      MOV      R1,#+4096
   \       0x24   0x0020             MOVS     R0,R4
   \       0x26   0x.... 0x....      BL       HAL_GPIO_TogglePin
    103                  break;
   \       0x2A   0xE014             B.N      ??toggle_4
    104              case GPIO::RENDER_TIME:
    105                  HAL_GPIO_TogglePin(GPIOG, LED2_Pin);
   \                     ??toggle_2: (+1)
   \       0x2C   0x....             LDR.N    R4,??DataTable4
   \       0x2E   0x2104             MOVS     R1,#+4
   \       0x30   0x0020             MOVS     R0,R4
   \       0x32   0x.... 0x....      BL       HAL_GPIO_TogglePin
    106                  HAL_GPIO_TogglePin(GPIOG, RENDER_TIME_Pin);
   \       0x36   0xF44F 0x4180      MOV      R1,#+16384
   \       0x3A   0x0020             MOVS     R0,R4
   \       0x3C   0x.... 0x....      BL       HAL_GPIO_TogglePin
    107                  break;
   \       0x40   0xE009             B.N      ??toggle_4
    108              case GPIO::FRAME_RATE:
    109                  HAL_GPIO_TogglePin(GPIOG, FRAME_RATE_Pin);
   \                     ??toggle_1: (+1)
   \       0x42   0xF44F 0x4100      MOV      R1,#+32768
   \       0x46   0x....             LDR.N    R0,??DataTable4
   \       0x48   0x.... 0x....      BL       HAL_GPIO_TogglePin
    110                  break;
   \       0x4C   0xE003             B.N      ??toggle_4
    111              case GPIO::MCU_ACTIVE:
    112                  HAL_GPIO_TogglePin(GPIOG, MCU_ACTIVE_Pin);
   \                     ??toggle_3: (+1)
   \       0x4E   0x2101             MOVS     R1,#+1
   \       0x50   0x....             LDR.N    R0,??DataTable4
   \       0x52   0x.... 0x....      BL       HAL_GPIO_TogglePin
    113                  break;
    114              }
    115          }
   \                     ??toggle_4: (+1)
   \       0x56   0xBD10             POP      {R4,PC}
    116          
    117          /*
    118           * Gets the state of a pin.
    119           */

   \                                 In section .text, align 2, keep-with-next
    120          bool GPIO::get(GPIO_ID id)
    121          {
   \                     _ZN8touchgfx4GPIO3getENS0_7GPIO_IDE: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    122              GPIO_PinState bitstatus = GPIO_PIN_RESET;
   \        0x2   0x2100             MOVS     R1,#+0
    123              switch (id)
   \        0x4   0xB2C0             UXTB     R0,R0
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD005             BEQ.N    ??get_0
   \        0xA   0x2802             CMP      R0,#+2
   \        0xC   0xD010             BEQ.N    ??get_1
   \        0xE   0xD309             BCC.N    ??get_2
   \       0x10   0x2803             CMP      R0,#+3
   \       0x12   0xD014             BEQ.N    ??get_3
   \       0x14   0xE018             B.N      ??get_4
    124              {
    125              case GPIO::VSYNC_FREQ:
    126                  bitstatus = HAL_GPIO_ReadPin(GPIOG, LED3_Pin);
   \                     ??get_0: (+1)
   \       0x16   0xF44F 0x6100      MOV      R1,#+2048
   \       0x1A   0x....             LDR.N    R0,??DataTable4
   \       0x1C   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \       0x20   0x0001             MOVS     R1,R0
    127                  break;
   \       0x22   0xE011             B.N      ??get_4
    128              case GPIO::RENDER_TIME:
    129                  bitstatus = HAL_GPIO_ReadPin(GPIOG, LED2_Pin);
   \                     ??get_2: (+1)
   \       0x24   0x2104             MOVS     R1,#+4
   \       0x26   0x....             LDR.N    R0,??DataTable4
   \       0x28   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \       0x2C   0x0001             MOVS     R1,R0
    130                  break;
   \       0x2E   0xE00B             B.N      ??get_4
    131              case GPIO::FRAME_RATE:
    132                  bitstatus = HAL_GPIO_ReadPin(GPIOG, FRAME_RATE_Pin);
   \                     ??get_1: (+1)
   \       0x30   0xF44F 0x4100      MOV      R1,#+32768
   \       0x34   0x....             LDR.N    R0,??DataTable4
   \       0x36   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \       0x3A   0x0001             MOVS     R1,R0
    133                  break;
   \       0x3C   0xE004             B.N      ??get_4
    134              case GPIO::MCU_ACTIVE:
    135                  bitstatus = HAL_GPIO_ReadPin(GPIOG, MCU_ACTIVE_Pin);
   \                     ??get_3: (+1)
   \       0x3E   0x2101             MOVS     R1,#+1
   \       0x40   0x....             LDR.N    R0,??DataTable4
   \       0x42   0x.... 0x....      BL       HAL_GPIO_ReadPin
   \       0x46   0x0001             MOVS     R1,R0
    136                  break;
    137              }
    138              return (bitstatus == GPIO_PIN_SET);
   \                     ??get_4: (+1)
   \       0x48   0xB2C9             UXTB     R1,R1
   \       0x4A   0x2901             CMP      R1,#+1
   \       0x4C   0xD101             BNE.N    ??get_5
   \       0x4E   0x2001             MOVS     R0,#+1
   \       0x50   0xE000             B.N      ??get_6
   \                     ??get_5: (+1)
   \       0x52   0x2000             MOVS     R0,#+0
   \                     ??get_6: (+1)
   \       0x54   0xB2C0             UXTB     R0,R0
   \       0x56   0xBD02             POP      {R1,PC}
    139          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \        0x0   0x5802'1800        DC32     0x58021800
    140          
    141          /* USER CODE END TouchGFXGPIO.cpp */
    142          
    143          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
         8   -> HAL_GPIO_WritePin
       8   touchgfx::GPIO::get(touchgfx::GPIO::GPIO_ID)
         8   -> HAL_GPIO_ReadPin
       0   touchgfx::GPIO::init()
       8   touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
         8   -> HAL_GPIO_WritePin
       8   touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
         8   -> HAL_GPIO_TogglePin


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
      74  touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
      88  touchgfx::GPIO::get(touchgfx::GPIO::GPIO_ID)
       2  touchgfx::GPIO::init()
      74  touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
      88  touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)

 
 330 bytes in section .text
 
 330 bytes of CODE memory

Errors: none
Warnings: none
